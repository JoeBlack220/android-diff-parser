Find a functionally equivalent code:android.bluetooth.BluetoothSocket.bindListen:COMMENT
Method Modifier: 
Comment:/*package*/

@@ -16,44 +16,44 @@
     // read out port number
     try {
         synchronized (this) {
-            if (VDBG)
+            if (DBG)
                 Log.d(TAG, "bindListen(), SocketState: " + mSocketState + ", mPfd: " + mPfd);
             if (mSocketState != SocketState.INIT)
                 return EBADFD;
             if (mPfd == null)
                 return -1;
             FileDescriptor fd = mPfd.getFileDescriptor();
-            if (VDBG)
+            if (DBG)
                 Log.d(TAG, "bindListen(), new LocalSocket ");
             mSocket = new LocalSocket(fd);
-            if (VDBG)
+            if (DBG)
                 Log.d(TAG, "bindListen(), new LocalSocket.getInputStream() ");
             mSocketIS = mSocket.getInputStream();
             mSocketOS = mSocket.getOutputStream();
         }
-        if (VDBG)
+        if (DBG)
             Log.d(TAG, "bindListen(), readInt mSocketIS: " + mSocketIS);
         int channel = readInt(mSocketIS);
         synchronized (this) {
             if (mSocketState == SocketState.INIT)
                 mSocketState = SocketState.LISTENING;
         }
-        if (VDBG)
+        if (DBG)
             Log.d(TAG, "channel: " + channel);
         if (mPort == -1) {
             mPort = channel;
@@ -46,51 +46,59 @@
         // else ASSERT(mPort == channel)
         ret = 0;
     } catch (IOException e) {
+        if (mPfd != null) {
+            try {
+                mPfd.close();
+            } catch (IOException e1) {
+                Log.e(TAG, "bindListen, close mPfd: " + e1);
+            }
+            mPfd = null;
+        }
         Log.e(TAG, "bindListen, fail to get port number, exception: " + e);
         return -1;
     }

