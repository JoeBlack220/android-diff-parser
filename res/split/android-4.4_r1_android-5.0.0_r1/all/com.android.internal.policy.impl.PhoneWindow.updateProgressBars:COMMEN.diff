Find a functionally equivalent code:com.android.internal.policy.impl.PhoneWindow.updateProgressBars:COMMENT
Method Modifier: private     internal    
Comment:/**
 * Updates the progress bars that are shown in the title bar.
 *
 * @param value Can be one of {@link Window#PROGRESS_VISIBILITY_ON},
 * {@link Window#PROGRESS_VISIBILITY_OFF},
 * {@link Window#PROGRESS_INDETERMINATE_ON},
 * {@link Window#PROGRESS_INDETERMINATE_OFF}, or a value
 * starting at {@link Window#PROGRESS_START} through
 * {@link Window#PROGRESS_END} for setting the default
 * progress (if {@link Window#PROGRESS_END} is given,
 * the progress bar widgets in the title will be hidden after an
 * animation), a value between
 * {@link Window#PROGRESS_SECONDARY_START} -
 * {@link Window#PROGRESS_SECONDARY_END} for the
 * secondary progress (if
 * {@link Window#PROGRESS_SECONDARY_END} is given, the
 * progress bar widgets will still be shown with the secondary
 * progress bar will be completely filled in.)
 */

@@ -4,39 +4,69 @@
     final int features = getLocalFeatures();
     if (value == PROGRESS_VISIBILITY_ON) {
         if ((features & (1 << FEATURE_PROGRESS)) != 0) {
-            int level = horizontalProgressBar.getProgress();
-            int visibility = (horizontalProgressBar.isIndeterminate() || level < 10000) ? View.VISIBLE : View.INVISIBLE;
-            horizontalProgressBar.setVisibility(visibility);
+            if (horizontalProgressBar != null) {
+                int level = horizontalProgressBar.getProgress();
+                int visibility = (horizontalProgressBar.isIndeterminate() || level < 10000) ? View.VISIBLE : View.INVISIBLE;
+                horizontalProgressBar.setVisibility(visibility);
+            } else {
+                Log.e(TAG, "Horizontal progress bar not located in current window decor");
+            }
         }
         if ((features & (1 << FEATURE_INDETERMINATE_PROGRESS)) != 0) {
-            circularProgressBar.setVisibility(View.VISIBLE);
+            if (circularProgressBar != null) {
+                circularProgressBar.setVisibility(View.VISIBLE);
+            } else {
+                Log.e(TAG, "Circular progress bar not located in current window decor");
+            }
         }
     } else if (value == PROGRESS_VISIBILITY_OFF) {
         if ((features & (1 << FEATURE_PROGRESS)) != 0) {
-            horizontalProgressBar.setVisibility(View.GONE);
+            if (horizontalProgressBar != null) {
+                horizontalProgressBar.setVisibility(View.GONE);
+            } else {
+                Log.e(TAG, "Horizontal progress bar not located in current window decor");
+            }
         }
         if ((features & (1 << FEATURE_INDETERMINATE_PROGRESS)) != 0) {
-            circularProgressBar.setVisibility(View.GONE);
+            if (circularProgressBar != null) {
+                circularProgressBar.setVisibility(View.GONE);
+            } else {
+                Log.e(TAG, "Circular progress bar not located in current window decor");
+            }
         }
     } else if (value == PROGRESS_INDETERMINATE_ON) {
-        horizontalProgressBar.setIndeterminate(true);
+        if (horizontalProgressBar != null) {
+            horizontalProgressBar.setIndeterminate(true);
+        } else {
+            Log.e(TAG, "Horizontal progress bar not located in current window decor");
+        }
     } else if (value == PROGRESS_INDETERMINATE_OFF) {
-        horizontalProgressBar.setIndeterminate(false);
+        if (horizontalProgressBar != null) {
+            horizontalProgressBar.setIndeterminate(false);
+        } else {
+            Log.e(TAG, "Horizontal progress bar not located in current window decor");
+        }
     } else if (PROGRESS_START <= value && value <= PROGRESS_END) {
-        // We want to set the progress value before testing for visibility
-        // so that when the progress bar becomes visible again, it has the
         // correct level.
-        horizontalProgressBar.setProgress(value - PROGRESS_START);
+        if (horizontalProgressBar != null) {
+            horizontalProgressBar.setProgress(value - PROGRESS_START);
+        } else {
+            Log.e(TAG, "Horizontal progress bar not located in current window decor");
+        }
         if (value < PROGRESS_END) {
             showProgressBars(horizontalProgressBar, circularProgressBar);
         } else {
             hideProgressBars(horizontalProgressBar, circularProgressBar);
         }
     } else if (PROGRESS_SECONDARY_START <= value && value <= PROGRESS_SECONDARY_END) {
-        horizontalProgressBar.setSecondaryProgress(value - PROGRESS_SECONDARY_START);
+        if (horizontalProgressBar != null) {
+            horizontalProgressBar.setSecondaryProgress(value - PROGRESS_SECONDARY_START);
+        } else {
+            Log.e(TAG, "Horizontal progress bar not located in current window decor");
+        }
         showProgressBars(horizontalProgressBar, circularProgressBar);
     }
 }

