Find a functionally equivalent code:android.text.Layout.getParagraphLeadingMargin:COMMENT
Method Modifier: private     
Comment:/**
 * Returns the effective leading margin (unsigned) for this line,
 * taking into account LeadingMarginSpan and LeadingMarginSpan2.
 * @param line the line index
 * @return the leading margin of this line
 */

@@ -13,27 +13,30 @@
     }
     int margin = 0;
     boolean isFirstParaLine = lineStart == 0 || spanned.charAt(lineStart - 1) == '\n';
+    boolean useFirstLineMargin = isFirstParaLine;
     for (int i = 0; i < spans.length; i++) {
-        LeadingMarginSpan span = spans[i];
-        boolean useFirstLineMargin = isFirstParaLine;
-        if (span instanceof LeadingMarginSpan2) {
-            int spStart = spanned.getSpanStart(span);
+        if (spans[i] instanceof LeadingMarginSpan2) {
+            int spStart = spanned.getSpanStart(spans[i]);
             int spanLine = getLineForOffset(spStart);
-            int count = ((LeadingMarginSpan2) span).getLeadingMarginLineCount();
-            useFirstLineMargin = line < spanLine + count;
+            int count = ((LeadingMarginSpan2) spans[i]).getLeadingMarginLineCount();
+            // if there is more than one LeadingMarginSpan2, use the count that is greatest
+            useFirstLineMargin |= line < spanLine + count;
         }
+    }
+    for (int i = 0; i < spans.length; i++) {
+        LeadingMarginSpan span = spans[i];
         margin += span.getLeadingMargin(useFirstLineMargin);
     }
     return margin;

