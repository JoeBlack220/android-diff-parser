Find a functionally equivalent code:android.widget.LinearLayout.measureVertical:COMMENT
Method Modifier: 
Comment:/**
 * Measures the children when the orientation of this LinearLayout is set
 * to {@link #VERTICAL}.
 *
 * @param widthMeasureSpec Horizontal space requirements as imposed by the parent.
 * @param heightMeasureSpec Vertical space requirements as imposed by the parent.
 *
 * @see #getOrientation()
 * @see #setOrientation(int)
 * @see #onMeasure(int, int)
 */

@@ -10,15 +10,16 @@
     final int widthMode = MeasureSpec.getMode(widthMeasureSpec);
     final int heightMode = MeasureSpec.getMode(heightMeasureSpec);
     boolean matchWidth = false;
+    boolean skippedMeasure = false;
     final int baselineChildIndex = mBaselineAlignedChildIndex;
     final boolean useLargestChild = mUseLargestChild;
     int largestChildHeight = Integer.MIN_VALUE;
@@ -35,40 +36,42 @@
             // there is any leftover space.
             final int totalLength = mTotalLength;
             mTotalLength = Math.max(totalLength, totalLength + lp.topMargin + lp.bottomMargin);
+            skippedMeasure = true;
         } else {
             int oldHeight = Integer.MIN_VALUE;
             if (lp.height == 0 && lp.weight > 0) {
@@ -126,134 +128,137 @@
     int heightSizeAndState = resolveSizeAndState(heightSize, heightMeasureSpec, 0);
     heightSize = heightSizeAndState & MEASURED_SIZE_MASK;
     // Either expand children with weight to take up available space or
-    // shrink them if they extend beyond our current bounds
+    // shrink them if they extend beyond our current bounds. If we skipped
+    // measurement on any children, we need to measure them now.
     int delta = heightSize - mTotalLength;
-    if (delta != 0 && totalWeight > 0.0f) {
+    if (skippedMeasure || delta != 0 && totalWeight > 0.0f) {
         float weightSum = mWeightSum > 0.0f ? mWeightSum : totalWeight;
         mTotalLength = 0;
         for (int i = 0; i < count; ++i) {

