Find a functionally equivalent code:android.media.MediaFocusControl.unregisterRemoteControlDisplay:COMMENT
Method Modifier: protected   
Comment:/**
 * Unregister an IRemoteControlDisplay.
 * No effect if the IRemoteControlDisplay hasn't been successfully registered.
 * @see android.media.IAudioService#unregisterRemoteControlDisplay(android.media.IRemoteControlDisplay)
 * @param rcd the IRemoteControlDisplay to unregister. No effect if null.
 */

@@ -1,14 +1,14 @@
 {
     if (DEBUG_RC)
         Log.d(TAG, "<<< unregisterRemoteControlDisplay(" + rcd + ")");
-    synchronized (mRCStack) {
+    synchronized (mPRStack) {
         if (rcd == null) {
             return;
         }
         boolean displayWasPluggedIn = false;
         final Iterator<DisplayInfoForServer> displayIterator = mRcDisplays.iterator();
         while (displayIterator.hasNext() && !displayWasPluggedIn) {
-            final DisplayInfoForServer di = (DisplayInfoForServer) displayIterator.next();
+            final DisplayInfoForServer di = displayIterator.next();
             if (di.mRcDisplay.asBinder().equals(rcd.asBinder())) {
                 displayWasPluggedIn = true;
                 di.release();
@@ -18,29 +18,29 @@
         if (displayWasPluggedIn) {
             // disconnect this remote control display from all the clients, so the remote
             // control stack traversal order doesn't matter
-            final Iterator<RemoteControlStackEntry> stackIterator = mRCStack.iterator();
+            final Iterator<PlayerRecord> stackIterator = mPRStack.iterator();
             while (stackIterator.hasNext()) {
-                final RemoteControlStackEntry rcse = stackIterator.next();
-                if (rcse.mRcClient != null) {
+                final PlayerRecord prse = stackIterator.next();
+                if (prse.getRcc() != null) {
                     try {
-                        rcse.mRcClient.unplugRemoteControlDisplay(rcd);
+                        prse.getRcc().unplugRemoteControlDisplay(rcd);
                     } catch (RemoteException e) {
                         Log.e(TAG, "Error disconnecting remote control display to client: ", e);
                     }

