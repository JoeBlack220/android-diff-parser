Find a functionally equivalent code:com.android.internal.policy.impl.GlobalActions.createDialog:COMMENT
Method Modifier: private     internal    
Comment:/**
 * Create the global actions dialog.
 * @return A new dialog.
 */

@@ -40,122 +40,79 @@
     };
     onAirplaneModeChanged();
     mItems = new ArrayList<Action>();
-    // first: power off
-    mItems.add(new SinglePressAction(com.android.internal.R.drawable.ic_lock_power_off, R.string.global_action_power_off) {
-
-        public void onPress() {
-            // shutdown by making sure radio and power are handled accordingly.
-            mWindowManagerFuncs.shutdown(true);
-        }
-
-        public boolean onLongPress() {
-            mWindowManagerFuncs.rebootSafeMode(true);
-            return true;
-        }
-
-        public boolean showDuringKeyguard() {
-            return true;
-        }
-
-        public boolean showBeforeProvisioning() {
-            return true;
+    String[] defaultActions = mContext.getResources().getStringArray(com.android.internal.R.array.config_globalActionsList);
+    ArraySet<String> addedKeys = new ArraySet<String>();
+    for (int i = 0; i < defaultActions.length; i++) {
+        String actionKey = defaultActions[i];
+        if (addedKeys.contains(actionKey)) {
+            // If we already have added this, don't add it again.
+            continue;
+        }
+        if (GLOBAL_ACTION_KEY_POWER.equals(actionKey)) {
+            mItems.add(new PowerAction());
+        } else if (GLOBAL_ACTION_KEY_AIRPLANE.equals(actionKey)) {
+            mItems.add(mAirplaneModeOn);
+        } else if (GLOBAL_ACTION_KEY_BUGREPORT.equals(actionKey)) {
+            if (Settings.Global.getInt(mContext.getContentResolver(), Settings.Global.BUGREPORT_IN_POWER_MENU, 0) != 0 && isCurrentUserOwner()) {
+                mItems.add(getBugReportAction());
+            }
+        } else if (GLOBAL_ACTION_KEY_SILENT.equals(actionKey)) {
+            if (mShowSilentToggle) {
+                mItems.add(mSilentModeAction);
+            }
+        } else if (GLOBAL_ACTION_KEY_USERS.equals(actionKey)) {
+            if (SystemProperties.getBoolean("fw.power_user_switcher", false)) {
+                addUsersToMenu(mItems);
+            }
+        } else if (GLOBAL_ACTION_KEY_SETTINGS.equals(actionKey)) {
+            mItems.add(getSettingsAction());
+        } else if (GLOBAL_ACTION_KEY_LOCKDOWN.equals(actionKey)) {
+            mItems.add(getLockdownAction());
+        } else {
+            Log.e(TAG, "Invalid global action key " + actionKey);
         }
-    });
-    // next: airplane mode
-    mItems.add(mAirplaneModeOn);
-    // next: bug report, if enabled
-    if (Settings.Global.getInt(mContext.getContentResolver(), Settings.Global.BUGREPORT_IN_POWER_MENU, 0) != 0 && isCurrentUserOwner()) {
-        mItems.add(new SinglePressAction(com.android.internal.R.drawable.stat_sys_adb, R.string.global_action_bug_report) {
-
-            public void onPress() {
-                AlertDialog.Builder builder = new AlertDialog.Builder(mContext);
-                builder.setTitle(com.android.internal.R.string.bugreport_title);
-                builder.setMessage(com.android.internal.R.string.bugreport_message);
-                builder.setNegativeButton(com.android.internal.R.string.cancel, null);
-                builder.setPositiveButton(com.android.internal.R.string.report, new DialogInterface.OnClickListener() {
-
-                    @Override
-                    public void onClick(DialogInterface dialog, int which) {
-                        // Add a little delay before executing, to give the
-                        // dialog a chance to go away before it takes a
-                        // screenshot.
-                        mHandler.postDelayed(new Runnable() {
-
-                            @Override
-                            public void run() {
-                                try {
-                                    ActivityManagerNative.getDefault().requestBugReport();
-                                } catch (RemoteException e) {
-                                }
-                            }
-                        }, 500);
-                    }
-                });
-                AlertDialog dialog = builder.create();
-                dialog.getWindow().setType(WindowManager.LayoutParams.TYPE_KEYGUARD_DIALOG);
-                dialog.show();
-            }
-
-            public boolean onLongPress() {
-                return false;
-            }
-
-            public boolean showDuringKeyguard() {
-                return true;
-            }
-
-            public boolean showBeforeProvisioning() {
-                return false;
-            }
-        });
-    }
-    // last: silent mode
-    if (mShowSilentToggle) {
-        mItems.add(mSilentModeAction);
+        // Add here so we don't add more than one.
+        addedKeys.add(actionKey);
     }
-    // one more thing: optionally add a list of users to switch to
-    if (SystemProperties.getBoolean("fw.power_user_switcher", false)) {
-        addUsersToMenu(mItems);
-    }
     mAdapter = new MyAdapter();
     AlertParams params = new AlertParams(mContext);
     params.mAdapter = mAdapter;
@@ -131,137 +88,98 @@
 
         @Override
         public boolean onItemLongClick(AdapterView<?> parent, View view, int position, long id) {
-            return mAdapter.getItem(position).onLongPress();
+            final Action action = mAdapter.getItem(position);
+            if (action instanceof LongPressAction) {
+                return ((LongPressAction) action).onLongPress();
+            }
+            return false;
         }
     });
     dialog.getWindow().setType(WindowManager.LayoutParams.TYPE_KEYGUARD_DIALOG);

