Find a functionally equivalent code:com.android.keyguard.KeyguardViewBase.verifyUnlock:COMMENT
<com.android.keyguard.KeyguardViewBase: void verifyUnlock()>
Method Modifier: public      abstract    
Method Modifier: Yes         Yes         
Method Updated:  Yes         No          
Comment:/**
 * Verify that the user can get past the keyguard securely.  This is called,
 * for example, when the phone disables the keyguard but then wants to launch
 * something else that requires secure access.
 *
 * The result will be propogated back via {@link KeyguardViewCallback#keyguardDone(boolean)}
 */

@@ -1 +1,16 @@
-
+{
+    SecurityMode securityMode = mSecurityContainer.getSecurityMode();
+    if (securityMode == KeyguardSecurityModel.SecurityMode.None) {
+        if (mViewMediatorCallback != null) {
+            mViewMediatorCallback.keyguardDone(true);
+        }
+    } else if (securityMode != KeyguardSecurityModel.SecurityMode.Pattern && securityMode != KeyguardSecurityModel.SecurityMode.PIN && securityMode != KeyguardSecurityModel.SecurityMode.Password) {
+        // can only verify unlock when in pattern/password mode
+        if (mViewMediatorCallback != null) {
+            mViewMediatorCallback.keyguardDone(false);
+        }
+    } else {
+        // otherwise, go to the unlock screen, see if they can verify it
+        mSecurityContainer.verifyUnlock();
+    }
+}

