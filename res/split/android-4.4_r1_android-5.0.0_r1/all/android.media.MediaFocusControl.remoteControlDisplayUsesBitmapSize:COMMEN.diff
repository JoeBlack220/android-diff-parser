Find a functionally equivalent code:android.media.MediaFocusControl.remoteControlDisplayUsesBitmapSize:COMMENT
Method Modifier: protected   
Comment:/**
 * Update the size of the artwork used by an IRemoteControlDisplay.
 * @see android.media.IAudioService#remoteControlDisplayUsesBitmapSize(android.media.IRemoteControlDisplay, int, int)
 * @param rcd the IRemoteControlDisplay with the new artwork size requirement
 * @param w the maximum width of the expected bitmap. Negative or zero values indicate this
 * display doesn't need to receive artwork.
 * @param h the maximum height of the expected bitmap. Negative or zero values indicate this
 * display doesn't need to receive artwork.
 */

@@ -1,9 +1,9 @@
 {
-    synchronized (mRCStack) {
+    synchronized (mPRStack) {
         final Iterator<DisplayInfoForServer> displayIterator = mRcDisplays.iterator();
         boolean artworkSizeUpdate = false;
         while (displayIterator.hasNext() && !artworkSizeUpdate) {
-            final DisplayInfoForServer di = (DisplayInfoForServer) displayIterator.next();
+            final DisplayInfoForServer di = displayIterator.next();
             if (di.mRcDisplay.asBinder().equals(rcd.asBinder())) {
                 if ((di.mArtworkExpectedWidth != w) || (di.mArtworkExpectedHeight != h)) {
                     di.mArtworkExpectedWidth = w;
@@ -15,26 +15,26 @@
         if (artworkSizeUpdate) {
             // RCD is currently plugged in and its artwork size has changed, notify all RCCs,
             // stack traversal order doesn't matter
-            final Iterator<RemoteControlStackEntry> stackIterator = mRCStack.iterator();
+            final Iterator<PlayerRecord> stackIterator = mPRStack.iterator();
             while (stackIterator.hasNext()) {
-                final RemoteControlStackEntry rcse = stackIterator.next();
-                if (rcse.mRcClient != null) {
+                final PlayerRecord prse = stackIterator.next();
+                if (prse.getRcc() != null) {
                     try {
-                        rcse.mRcClient.setBitmapSizeForDisplay(rcd, w, h);
+                        prse.getRcc().setBitmapSizeForDisplay(rcd, w, h);
                     } catch (RemoteException e) {
                         Log.e(TAG, "Error setting bitmap size for RCD on RCC: ", e);
                     }

