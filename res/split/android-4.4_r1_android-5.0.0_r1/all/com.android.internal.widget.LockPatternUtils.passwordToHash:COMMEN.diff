Find a functionally equivalent code:com.android.internal.widget.LockPatternUtils.passwordToHash:COMMENT
Method Modifier: public      internal    
Comment:/*
     * Generate a hash for the given password. To avoid brute force attacks, we use a salted hash.
     * Not the most secure, but it is at least a second level of protection. First level is that
     * the file is in a location only readable by the system process.
     * @param password the gesture pattern.
     * @return the hash of the pattern in a byte array.
     */

@@ -5,11 +5,11 @@
     String algo = null;
     byte[] hashed = null;
     try {
-        byte[] saltedPassword = (password + getSalt()).getBytes();
+        byte[] saltedPassword = (password + getSalt(userId)).getBytes();
         byte[] sha1 = MessageDigest.getInstance(algo = "SHA-1").digest(saltedPassword);
         byte[] md5 = MessageDigest.getInstance(algo = "MD5").digest(saltedPassword);
         hashed = (toHex(sha1) + toHex(md5)).getBytes();

