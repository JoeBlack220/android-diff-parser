Find a functionally equivalent code:com.android.layoutlib.bridge.impl.RenderSessionImpl.inflate:COMMENT
Method Modifier: public      
Comment:/**
 * Inflates the layout.
 * <p>
 * {@link #acquire(long)} must have been called before this.
 *
 * @throws IllegalStateException if the current context is different than the one owned by
 * the scene, or if {@link #init(long)} was not called.
 */

@@ -5,17 +5,18 @@
         HardwareConfig hardwareConfig = params.getHardwareConfig();
         BridgeContext context = getContext();
         boolean isRtl = Bridge.isLocaleRtl(params.getLocale());
-        int direction = isRtl ? View.LAYOUT_DIRECTION_RTL : View.LAYOUT_DIRECTION_LTR;
+        int layoutDirection = isRtl ? View.LAYOUT_DIRECTION_RTL : View.LAYOUT_DIRECTION_LTR;
         // the view group that receives the window background.
-        ViewGroup backgroundView = null;
+        ViewGroup backgroundView;
         if (mWindowIsFloating || params.isForceNoDecor()) {
             backgroundView = mViewRoot = mContentRoot = new FrameLayout(context);
-            mViewRoot.setLayoutDirection(direction);
+            mViewRoot.setLayoutDirection(layoutDirection);
         } else {
+            int simulatedPlatformVersion = params.getSimulatedPlatformVersion();
             if (hasSoftwareButtons() && mNavigationBarOrientation == LinearLayout.VERTICAL) {
                 /*
                      * This is a special case where the navigation bar is on the right.
@@ -32,45 +33,47 @@
                        the bottom
                      */
                 LinearLayout topLayout = new LinearLayout(context);
-                topLayout.setLayoutDirection(direction);
+                topLayout.setLayoutDirection(layoutDirection);
                 mViewRoot = topLayout;
                 topLayout.setOrientation(LinearLayout.HORIZONTAL);
-                try {
-                    NavigationBar navigationBar = new NavigationBar(context, hardwareConfig.getDensity(), LinearLayout.VERTICAL, isRtl, params.isRtlSupported());
-                    navigationBar.setLayoutParams(new LinearLayout.LayoutParams(mNavigationBarSize, LayoutParams.MATCH_PARENT));
-                    topLayout.addView(navigationBar);
-                } catch (XmlPullParserException e) {
+                if (Config.showOnScreenNavBar(simulatedPlatformVersion)) {
+                    try {
+                        NavigationBar navigationBar = createNavigationBar(context, hardwareConfig.getDensity(), isRtl, params.isRtlSupported(), simulatedPlatformVersion);
+                        topLayout.addView(navigationBar);
+                    } catch (XmlPullParserException ignored) {
+                    }
                 }
             }
             /*
@@ -62,74 +64,76 @@
                  */
             LinearLayout topLayout = new LinearLayout(context);
             topLayout.setOrientation(LinearLayout.VERTICAL);
-            topLayout.setLayoutDirection(direction);
+            topLayout.setLayoutDirection(layoutDirection);
             // if we don't already have a view root this is it
             if (mViewRoot == null) {
                 mViewRoot = topLayout;
             } else {
-                LinearLayout.LayoutParams layoutParams = new LinearLayout.LayoutParams(LayoutParams.WRAP_CONTENT, LayoutParams.MATCH_PARENT);
-                layoutParams.weight = 1;
+                int topLayoutWidth = params.getHardwareConfig().getScreenWidth() - mNavigationBarSize;
+                LinearLayout.LayoutParams layoutParams = new LinearLayout.LayoutParams(topLayoutWidth, LayoutParams.MATCH_PARENT);
                 topLayout.setLayoutParams(layoutParams);
                 // this top layout is the first layout in the horizontal layout. see above)
                 if (isRtl && params.isRtlSupported()) {
@@ -84,131 +86,130 @@
             if (mStatusBarSize > 0) {
                 // system bar
                 try {
-                    StatusBar systemBar = new StatusBar(context, hardwareConfig.getDensity(), direction, params.isRtlSupported());
-                    systemBar.setLayoutParams(new LinearLayout.LayoutParams(LayoutParams.MATCH_PARENT, mStatusBarSize));
-                    topLayout.addView(systemBar);
-                } catch (XmlPullParserException e) {
+                    StatusBar statusBar = createStatusBar(context, hardwareConfig.getDensity(), layoutDirection, params.isRtlSupported(), simulatedPlatformVersion);
+                    topLayout.addView(statusBar);
+                } catch (XmlPullParserException ignored) {
                 }
             }
             LinearLayout backgroundLayout = new LinearLayout(context);
             backgroundView = backgroundLayout;
             backgroundLayout.setOrientation(LinearLayout.VERTICAL);
-            LinearLayout.LayoutParams layoutParams = new LinearLayout.LayoutParams(LayoutParams.MATCH_PARENT, LayoutParams.WRAP_CONTENT);
+            LinearLayout.LayoutParams layoutParams = new LinearLayout.LayoutParams(LayoutParams.MATCH_PARENT, 0);
             layoutParams.weight = 1;
             backgroundLayout.setLayoutParams(layoutParams);
             topLayout.addView(backgroundLayout);
             // if the theme says no title/action bar, then the size will be 0
             if (mActionBarSize > 0) {
-                try {
-                    FakeActionBar actionBar = new FakeActionBar(context, hardwareConfig.getDensity(), params.getAppLabel(), params.getAppIcon());
-                    actionBar.setLayoutParams(new LinearLayout.LayoutParams(LayoutParams.MATCH_PARENT, mActionBarSize));
-                    backgroundLayout.addView(actionBar);
-                } catch (XmlPullParserException e) {
-                }
+                ActionBarLayout actionBar = createActionBar(context, params);
+                backgroundLayout.addView(actionBar);
+                actionBar.createMenuPopup();
+                mContentRoot = actionBar.getContentRoot();
             } else if (mTitleBarSize > 0) {
                 try {
-                    TitleBar titleBar = new TitleBar(context, hardwareConfig.getDensity(), params.getAppLabel());
-                    titleBar.setLayoutParams(new LinearLayout.LayoutParams(LayoutParams.MATCH_PARENT, mTitleBarSize));
+                    TitleBar titleBar = createTitleBar(context, params.getAppLabel(), simulatedPlatformVersion);
                     backgroundLayout.addView(titleBar);
-                } catch (XmlPullParserException e) {
+                } catch (XmlPullParserException ignored) {
                 }
             }
             // content frame
-            mContentRoot = new FrameLayout(context);
-            layoutParams = new LinearLayout.LayoutParams(LayoutParams.MATCH_PARENT, LayoutParams.WRAP_CONTENT);
-            layoutParams.weight = 1;
-            mContentRoot.setLayoutParams(layoutParams);
-            backgroundLayout.addView(mContentRoot);
-            if (mNavigationBarOrientation == LinearLayout.HORIZONTAL && mNavigationBarSize > 0) {
+            if (mContentRoot == null) {
+                mContentRoot = new FrameLayout(context);
+                layoutParams = new LinearLayout.LayoutParams(LayoutParams.MATCH_PARENT, 0);
+                layoutParams.weight = 1;
+                mContentRoot.setLayoutParams(layoutParams);
+                backgroundLayout.addView(mContentRoot);
+            }
+            if (Config.showOnScreenNavBar(simulatedPlatformVersion) && mNavigationBarOrientation == LinearLayout.HORIZONTAL && mNavigationBarSize > 0) {
                 // system bar
                 try {
-                    NavigationBar navigationBar = new NavigationBar(context, hardwareConfig.getDensity(), LinearLayout.HORIZONTAL, isRtl, params.isRtlSupported());
-                    navigationBar.setLayoutParams(new LinearLayout.LayoutParams(LayoutParams.MATCH_PARENT, mNavigationBarSize));
+                    NavigationBar navigationBar = createNavigationBar(context, hardwareConfig.getDensity(), isRtl, params.isRtlSupported(), simulatedPlatformVersion);
                     topLayout.addView(navigationBar);
-                } catch (XmlPullParserException e) {
+                } catch (XmlPullParserException ignored) {
                 }
             }
         }
@@ -141,147 +140,146 @@
         // post-inflate process. For now this supports TabHost/TabWidget
         postInflateProcess(view, params.getProjectCallback());
         // get the background drawable
-        if (mWindowBackground != null && backgroundView != null) {
+        if (mWindowBackground != null) {
             Drawable d = ResourceHelper.getDrawable(mWindowBackground, context);
             backgroundView.setBackground(d);
         }

