Find a functionally equivalent code:android.transition.Transition.playTransition:COMMENT
Method Modifier: 
Comment:/**
 * Called by TransitionManager to play the transition. This calls
 * createAnimators() to set things up and create all of the animations and then
 * runAnimations() to actually start the animations.
 */

@@ -1,34 +1,20 @@
 {
+    mStartValuesList = new ArrayList<TransitionValues>();
+    mEndValuesList = new ArrayList<TransitionValues>();
+    matchStartAndEnd(mStartValues, mEndValues);
     ArrayMap<Animator, AnimationInfo> runningAnimators = getRunningAnimators();
     int numOldAnims = runningAnimators.size();
+    WindowId windowId = sceneRoot.getWindowId();
     for (int i = numOldAnims - 1; i >= 0; i--) {
         Animator anim = runningAnimators.keyAt(i);
         if (anim != null) {
             AnimationInfo oldInfo = runningAnimators.get(anim);
-            if (oldInfo != null) {
-                boolean cancel = false;
+            if (oldInfo != null && oldInfo.view != null && oldInfo.windowId == windowId) {
                 TransitionValues oldValues = oldInfo.values;
                 View oldView = oldInfo.view;
-                TransitionValues newValues = mEndValues.viewValues != null ? mEndValues.viewValues.get(oldView) : null;
-                if (newValues == null) {
-                    newValues = mEndValues.idValues.get(oldView.getId());
-                }
-                if (oldValues != null) {
-                    // and won't get canceled
-                    if (newValues != null) {
-                        for (String key : oldValues.values.keySet()) {
-                            Object oldValue = oldValues.values.get(key);
-                            Object newValue = newValues.values.get(key);
-                            if (oldValue != null && newValue != null && !oldValue.equals(newValue)) {
-                                cancel = true;
-                                if (DBG) {
-                                    Log.d(LOG_TAG, "Transition.playTransition: " + "oldValue != newValue for " + key + ": old, new = " + oldValue + ", " + newValue);
-                                }
-                                break;
-                            }
-                        }
-                    }
-                }
+                TransitionValues startValues = getTransitionValues(oldView, true);
+                TransitionValues endValues = getMatchedTransitionValues(oldView, true);
+                boolean cancel = (startValues != null || endValues != null) && oldInfo.transition.areValuesChanged(oldValues, endValues);
                 if (cancel) {
                     if (anim.isRunning() || anim.isStarted()) {
                         if (DBG) {
@@ -45,50 +31,36 @@
             }
         }
     }
-    createAnimators(sceneRoot, mStartValues, mEndValues);
+    createAnimators(sceneRoot, mStartValues, mEndValues, mStartValuesList, mEndValuesList);
     runAnimators();
 }

