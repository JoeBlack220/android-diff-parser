Find a functionally equivalent code:android.os.Binder.execTransact:COMMENT
Method Modifier: private     
Comment:// Entry point from android_util_Binder.cpp's onTransact

@@ -11,26 +11,28 @@
     } catch (RemoteException e) {
         if ((flags & FLAG_ONEWAY) != 0) {
             Log.w(TAG, "Binder call failed.", e);
+        } else {
+            reply.setDataPosition(0);
+            reply.writeException(e);
         }
-        reply.setDataPosition(0);
-        reply.writeException(e);
         res = true;
     } catch (RuntimeException e) {
         if ((flags & FLAG_ONEWAY) != 0) {
             Log.w(TAG, "Caught a RuntimeException from the binder stub implementation.", e);
+        } else {
+            reply.setDataPosition(0);
+            reply.writeException(e);
         }
-        reply.setDataPosition(0);
-        reply.writeException(e);
         res = true;
     } catch (OutOfMemoryError e) {
         // Unconditionally log this, since this is generally unrecoverable.
@@ -30,36 +32,45 @@
         reply.writeException(re);
         res = true;
     }
+    checkParcel(this, code, reply, "Unreasonably large binder reply buffer");
     reply.recycle();
     data.recycle();
+    // Just in case -- we are done with the IPC, so there should be no more strict
+    // mode violations that have gathered for this thread.  Either they have been
+    // parceled and are now in transport off to the caller, or we are returning back
+    // to the main transaction loop to wait for another incoming transaction.  Either
+    // way, strict mode begone!
+    StrictMode.clearGatheredViolations();
     return res;
 }

