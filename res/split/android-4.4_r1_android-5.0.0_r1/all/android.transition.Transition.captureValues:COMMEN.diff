Find a functionally equivalent code:android.transition.Transition.captureValues:COMMENT
Method Modifier: 
Comment:/**
 * Recursive method that captures values for the given view and the
 * hierarchy underneath it.
 * @param sceneRoot The root of the view hierarchy being captured
 * @param start true if this capture is happening before the scene change,
 * false otherwise
 */

@@ -1,60 +1,59 @@
 {
-    if (start) {
-        mStartValues.viewValues.clear();
-        mStartValues.idValues.clear();
-        mStartValues.itemIdValues.clear();
-    } else {
-        mEndValues.viewValues.clear();
-        mEndValues.idValues.clear();
-        mEndValues.itemIdValues.clear();
-    }
-    if (mTargetIds.size() > 0 || mTargets.size() > 0) {
-        if (mTargetIds.size() > 0) {
-            for (int i = 0; i < mTargetIds.size(); ++i) {
-                int id = mTargetIds.get(i);
-                View view = sceneRoot.findViewById(id);
-                if (view != null) {
-                    TransitionValues values = new TransitionValues();
-                    values.view = view;
-                    if (start) {
-                        captureStartValues(values);
-                    } else {
-                        captureEndValues(values);
-                    }
-                    if (start) {
-                        mStartValues.viewValues.put(view, values);
-                        if (id >= 0) {
-                            mStartValues.idValues.put(id, values);
-                        }
-                    } else {
-                        mEndValues.viewValues.put(view, values);
-                        if (id >= 0) {
-                            mEndValues.idValues.put(id, values);
-                        }
-                    }
+    clearValues(start);
+    if ((mTargetIds.size() > 0 || mTargets.size() > 0) && (mTargetNames == null || mTargetNames.isEmpty()) && (mTargetTypes == null || mTargetTypes.isEmpty())) {
+        for (int i = 0; i < mTargetIds.size(); ++i) {
+            int id = mTargetIds.get(i);
+            View view = sceneRoot.findViewById(id);
+            if (view != null) {
+                TransitionValues values = new TransitionValues();
+                values.view = view;
+                if (start) {
+                    captureStartValues(values);
+                } else {
+                    captureEndValues(values);
+                }
+                values.targetedTransitions.add(this);
+                capturePropagationValues(values);
+                if (start) {
+                    addViewValues(mStartValues, view, values);
+                } else {
+                    addViewValues(mEndValues, view, values);
                 }
             }
         }
-        if (mTargets.size() > 0) {
-            for (int i = 0; i < mTargets.size(); ++i) {
-                View view = mTargets.get(i);
-                if (view != null) {
-                    TransitionValues values = new TransitionValues();
-                    values.view = view;
-                    if (start) {
-                        captureStartValues(values);
-                    } else {
-                        captureEndValues(values);
-                    }
-                    if (start) {
-                        mStartValues.viewValues.put(view, values);
-                    } else {
-                        mEndValues.viewValues.put(view, values);
-                    }
-                }
+        for (int i = 0; i < mTargets.size(); ++i) {
+            View view = mTargets.get(i);
+            TransitionValues values = new TransitionValues();
+            values.view = view;
+            if (start) {
+                captureStartValues(values);
+            } else {
+                captureEndValues(values);
+            }
+            values.targetedTransitions.add(this);
+            capturePropagationValues(values);
+            if (start) {
+                addViewValues(mStartValues, view, values);
+            } else {
+                addViewValues(mEndValues, view, values);
             }
         }
     } else {
         captureHierarchy(sceneRoot, start);
     }
+    if (!start && mNameOverrides != null) {
+        int numOverrides = mNameOverrides.size();
+        ArrayList<View> overriddenViews = new ArrayList<View>(numOverrides);
+        for (int i = 0; i < numOverrides; i++) {
+            String fromName = mNameOverrides.keyAt(i);
+            overriddenViews.add(mStartValues.nameValues.remove(fromName));
+        }
+        for (int i = 0; i < numOverrides; i++) {
+            View view = overriddenViews.get(i);
+            if (view != null) {
+                String toName = mNameOverrides.valueAt(i);
+                mStartValues.nameValues.put(toName, view);
+            }
+        }
+    }
 }

