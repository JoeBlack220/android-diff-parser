Find a functionally equivalent code:android.text.TextLine.getOffsetBeforeAfter:COMMENT
Method Modifier: private     
Comment:/**
 * Returns the next valid offset within this directional run, skipping
 * conjuncts and zero-width characters.  This should not be called to walk
 * off the end of the line, since the returned values might not be valid
 * on neighboring lines.  If the returned offset is less than zero or
 * greater than the line length, the offset should be recomputed on the
 * preceding or following line, respectively.
 *
 * @param runIndex the run index
 * @param runStart the start of the run
 * @param runLimit the limit of the run
 * @param runIsRtl true if the run is right-to-left
 * @param offset the offset
 * @param after true if the new offset should logically follow the provided
 * offset
 * @return the new offset
 */

@@ -40,50 +40,50 @@
             }
         }
     }
-    int flags = runIsRtl ? Paint.DIRECTION_RTL : Paint.DIRECTION_LTR;
+    int dir = runIsRtl ? Paint.DIRECTION_RTL : Paint.DIRECTION_LTR;
     int cursorOpt = after ? Paint.CURSOR_AFTER : Paint.CURSOR_BEFORE;
     if (mCharsValid) {
-        return wp.getTextRunCursor(mChars, spanStart, spanLimit - spanStart, flags, offset, cursorOpt);
+        return wp.getTextRunCursor(mChars, spanStart, spanLimit - spanStart, dir, offset, cursorOpt);
     } else {
-        return wp.getTextRunCursor(mText, mStart + spanStart, mStart + spanLimit, flags, mStart + offset, cursorOpt) - mStart;
+        return wp.getTextRunCursor(mText, mStart + spanStart, mStart + spanLimit, dir, mStart + offset, cursorOpt) - mStart;
     }
 }

