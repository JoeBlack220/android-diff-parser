Find a functionally equivalent code:com.android.frameworks.downloadmanagertests.DownloadManagerTestApp.verifyFileDownloadSucceeded:COMMENT
Method Modifier: public      
Comment:/**
 * Waits for a previously-initiated download and verifies it has completed successfully.
 *
 * @throws Exception if unsuccessful
 */

@@ -1,6 +1,6 @@
 {
-    String filename = DOWNLOAD_5MB_FILENAME;
-    long filesize = DOWNLOAD_5MB_FILESIZE;
+    String filename = DOWNLOAD_FILENAME;
+    long filesize = DOWNLOAD_FILESIZE;
     long dlRequest = -1;
     boolean rebootMarkerValid = false;
     DataInputStream dataInputFile = null;
@@ -20,26 +20,26 @@
         }
         mContext.deleteFile(DOWNLOAD_STARTED_FLAG);
     }
-    assertTrue(dlRequest != -1);
+    assertTrue("request id is -1 from download manager", dlRequest != -1);
     Cursor cursor = getCursor(dlRequest);
     ParcelFileDescriptor pfd = null;
     try {
@@ -28,36 +28,34 @@
         int columnIndex = cursor.getColumnIndex(DownloadManager.COLUMN_STATUS);
         int status = cursor.getInt(columnIndex);
         int currentWaitTime = 0;
-        // Wait until the download finishes; don't wait for a notification b/c
-        // the download may well have been completed before the last reboot.
-        waitForDownloadOrTimeout_skipNotification(dlRequest);
+        assertTrue("download not finished", waitForDownload(dlRequest, 15 * 60 * 1000));
         Log.i(LOG_TAG, "Verifying download information...");
         // Verify specific info about the file (size, name, etc)...
         pfd = mDownloadManager.openDownloadedFile(dlRequest);

