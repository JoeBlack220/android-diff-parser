Find a functionally equivalent code:android.transition.Transition.isValidTarget:COMMENT
Method Modifier: 
Comment:/**
 * Internal utility method for checking whether a given view/id
 * is valid for this transition, where "valid" means that either
 * the Transition has no target/targetId list (the default, in which
 * cause the transition should act on all views in the hiearchy), or
 * the given view is in the target list or the view id is in the
 * targetId list. If the target parameter is null, then the target list
 * is not checked (this is in the case of ListView items, where the
 * views are ignored and only the ids are used).
 */

@@ -1,4 +1,5 @@
 {
+    int targetId = target.getId();
     if (mTargetIdExcludes != null && mTargetIdExcludes.contains(targetId)) {
         return false;
     }
@@ -14,32 +15,37 @@
             }
         }
     }
-    if (mTargetIds.size() == 0 && mTargets.size() == 0) {
+    if (mTargetNameExcludes != null && target != null && target.getTransitionName() != null) {
+        if (mTargetNameExcludes.contains(target.getTransitionName())) {
+            return false;
+        }
+    }
+    if (mTargetIds.size() == 0 && mTargets.size() == 0 && (mTargetTypes == null || mTargetTypes.isEmpty()) && (mTargetNames == null || mTargetNames.isEmpty())) {
         return true;
     }
-    if (mTargetIds.size() > 0) {
-        for (int i = 0; i < mTargetIds.size(); ++i) {
-            if (mTargetIds.get(i) == targetId) {
-                return true;
-            }
-        }
+    if (mTargetIds.contains(targetId) || mTargets.contains(target)) {
+        return true;
+    }
+    if (mTargetNames != null && mTargetNames.contains(target.getTransitionName())) {
+        return true;
     }
-    if (target != null && mTargets.size() > 0) {
-        for (int i = 0; i < mTargets.size(); ++i) {
-            if (mTargets.get(i) == target) {
+    if (mTargetTypes != null) {
+        for (int i = 0; i < mTargetTypes.size(); ++i) {
+            if (mTargetTypes.get(i).isInstance(target)) {
                 return true;
             }
         }

