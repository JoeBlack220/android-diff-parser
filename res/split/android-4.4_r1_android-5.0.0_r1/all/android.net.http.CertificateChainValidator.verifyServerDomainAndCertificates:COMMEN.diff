Find a functionally equivalent code:android.net.http.CertificateChainValidator.verifyServerDomainAndCertificates:COMMENT
Method Modifier: private     static      
Comment:/**
 * Common code of doHandshakeAndValidateServerCertificates and verifyServerCertificates.
 * Calls DomainNamevalidator to verify the domain, and TrustManager to verify the certs.
 * @param chain the cert chain in X509 cert format.
 * @param domain The full website hostname and domain
 * @param authType The authentication type for the cert chain
 * @return An SSL error object if there is an error and null otherwise
 */

@@ -4,10 +4,10 @@
     if (currCertificate == null) {
         throw new IllegalArgumentException("certificate for this site is null");
     }
-    boolean valid = domain != null && !domain.isEmpty() && sVerifier.verify(domain, currCertificate);
+    boolean valid = domain != null && !domain.isEmpty() && NoPreloadHolder.sVerifier.verify(domain, new DelegatingSSLSession.CertificateWrap(currCertificate));
     if (!valid) {
         if (HttpLog.LOGV) {
             HttpLog.v("certificate not for this host: " + domain);
@@ -12,18 +12,18 @@
         return new SslError(SslError.SSL_IDMISMATCH, currCertificate);
     }
     try {
-        X509TrustManager x509TrustManager = SSLParametersImpl.getDefaultTrustManager();
+        X509TrustManager x509TrustManager = SSLParametersImpl.getDefaultX509TrustManager();
         if (x509TrustManager instanceof TrustManagerImpl) {
             TrustManagerImpl trustManager = (TrustManagerImpl) x509TrustManager;
             trustManager.checkServerTrusted(chain, authType, domain);

