Find a functionally equivalent code:com.android.server.content.SyncStorageEngineTest.testPeriodics:COMMENT
Method Modifier: public      
Comment:/**
 * Test that we can create, remove and retrieve periodic syncs. Backwards compatibility -
 * periodic syncs with no flex time are no longer used.
 */

@@ -9,14 +9,15 @@
     final int period1 = 200;
     final int period2 = 1000;
     PeriodicSync sync1 = new PeriodicSync(account1, authority, extras1, period1);
+    EndPoint end1 = new EndPoint(account1, authority, 0);
     PeriodicSync sync2 = new PeriodicSync(account1, authority, extras2, period1);
     PeriodicSync sync3 = new PeriodicSync(account1, authority, extras2, period2);
     PeriodicSync sync4 = new PeriodicSync(account2, authority, extras2, period2);
@@ -16,39 +17,40 @@
     removePeriodicSyncs(engine, account2, 0, authority);
     removePeriodicSyncs(engine, account1, 1, authority);
     // this should add two distinct periodic syncs for account1 and one for account2
-    engine.addPeriodicSync(sync1, 0);
-    engine.addPeriodicSync(sync2, 0);
-    engine.addPeriodicSync(sync3, 0);
-    engine.addPeriodicSync(sync4, 0);
+    engine.updateOrAddPeriodicSync(new EndPoint(account1, authority, 0), period1, 0, extras1);
+    engine.updateOrAddPeriodicSync(new EndPoint(account1, authority, 0), period1, 0, extras2);
+    engine.updateOrAddPeriodicSync(new EndPoint(account1, authority, 0), period2, 0, extras2);
+    engine.updateOrAddPeriodicSync(new EndPoint(account2, authority, 0), period2, 0, extras2);
     // add a second user
-    engine.addPeriodicSync(sync2, 1);
-    List<PeriodicSync> syncs = engine.getPeriodicSyncs(account1, 0, authority);
+    engine.updateOrAddPeriodicSync(new EndPoint(account1, authority, 1), period1, 0, extras2);
+    List<PeriodicSync> syncs = engine.getPeriodicSyncs(new EndPoint(account1, authority, 0));
     assertEquals(2, syncs.size());
     assertEquals(sync1, syncs.get(0));
     assertEquals(sync3, syncs.get(1));
-    engine.removePeriodicSync(sync1, 0);
-    syncs = engine.getPeriodicSyncs(account1, 0, authority);
+    engine.removePeriodicSync(new EndPoint(account1, authority, 0), extras1);
+    syncs = engine.getPeriodicSyncs(new EndPoint(account1, authority, 0));
     assertEquals(1, syncs.size());
     assertEquals(sync3, syncs.get(0));
-    syncs = engine.getPeriodicSyncs(account2, 0, authority);
+    syncs = engine.getPeriodicSyncs(new EndPoint(account2, authority, 0));
     assertEquals(1, syncs.size());
     assertEquals(sync4, syncs.get(0));
-    syncs = engine.getPeriodicSyncs(sync2.account, 1, sync2.authority);
+    syncs = engine.getPeriodicSyncs(new EndPoint(sync2.account, sync2.authority, 1));
     assertEquals(1, syncs.size());
     assertEquals(sync2, syncs.get(0));
 }

