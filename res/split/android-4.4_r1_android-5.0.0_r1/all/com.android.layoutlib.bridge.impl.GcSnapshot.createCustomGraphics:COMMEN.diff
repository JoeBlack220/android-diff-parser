Find a functionally equivalent code:com.android.layoutlib.bridge.impl.GcSnapshot.createCustomGraphics:COMMENT
Method Modifier: private     
Comment:/**
 * Creates a new {@link Graphics2D} based on the {@link Paint} parameters.
 * <p/>The object must be disposed ({@link Graphics2D#dispose()}) after being used.
 */

@@ -5,59 +5,18 @@
         g.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
         g.setRenderingHint(RenderingHints.KEY_TEXT_ANTIALIASING, RenderingHints.VALUE_TEXT_ANTIALIAS_ON);
     }
+    // set the shader first, as it'll replace the color if it can be used it.
     boolean customShader = false;
-    // get the shader first, as it'll replace the color if it can be used it.
-    if (compositeOnly == false) {
-        Shader_Delegate shaderDelegate = paint.getShader();
-        if (shaderDelegate != null) {
-            if (shaderDelegate.isSupported()) {
-                java.awt.Paint shaderPaint = shaderDelegate.getJavaPaint();
-                assert shaderPaint != null;
-                if (shaderPaint != null) {
-                    g.setPaint(shaderPaint);
-                    customShader = true;
-                }
-            } else {
-                Bridge.getLog().fidelityWarning(LayoutLog.TAG_SHADER, shaderDelegate.getSupportMessage(), null, /*throwable*/
-                null);
-            }
-        }
-        // if no shader, use the paint color
-        if (customShader == false) {
-            g.setColor(new Color(paint.getColor(), true));
-        }
+    if (!compositeOnly) {
+        customShader = setShader(g, paint);
         // set the stroke
         g.setStroke(paint.getJavaStroke());
     }
-    // the alpha for the composite. Always opaque if the normal paint color is used since
-    // it contains the alpha
-    int alpha = (compositeOnly || customShader) ? paint.getAlpha() : 0xFF;
-    if (forceSrcMode) {
-        g.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC, (float) alpha / 255.f));
-    } else {
-        boolean customXfermode = false;
-        Xfermode_Delegate xfermodeDelegate = paint.getXfermode();
-        if (xfermodeDelegate != null) {
-            if (xfermodeDelegate.isSupported()) {
-                Composite composite = xfermodeDelegate.getComposite(alpha);
-                assert composite != null;
-                if (composite != null) {
-                    g.setComposite(composite);
-                    customXfermode = true;
-                }
-            } else {
-                Bridge.getLog().fidelityWarning(LayoutLog.TAG_XFERMODE, xfermodeDelegate.getSupportMessage(), null, /*throwable*/
-                null);
-            }
-        }
-        // that will handle the alpha.
-        if (customXfermode == false && alpha != 0xFF) {
-            g.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER, (float) alpha / 255.f));
-        }
-    }
+    // set the composite.
+    setComposite(g, paint, compositeOnly || customShader, forceMode);
     return g;
 }

