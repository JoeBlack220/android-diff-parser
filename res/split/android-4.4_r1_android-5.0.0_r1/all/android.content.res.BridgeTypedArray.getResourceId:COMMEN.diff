Find a functionally equivalent code:android.content.res.BridgeTypedArray.getResourceId:COMMENT
Method Modifier: public      
Comment:/**
 * Retrieve the resource identifier for the attribute at
 * <var>index</var>.  Note that attribute resource as resolved when
 * the overall {@link TypedArray} object is retrieved.  As a
 * result, this function will return the resource identifier of the
 * final resource value that was found, <em>not</em> necessarily the
 * original resource that was specified by the attribute.
 *
 * @param index Index of attribute to retrieve.
 * @param defValue Value to return if the attribute is not defined or
 * not a resource.
 *
 * @return Attribute resource identifier, or defValue if not defined.
 */

@@ -13,21 +13,18 @@
         // get the id that will represent this style.
         return mContext.getDynamicIdByStyle((StyleResourceValue) resValue);
     }
-    if (RenderResources.REFERENCE_NULL.equals(resValue.getValue())) {
-        return defValue;
-    }
     // (and getValue() returning null!). We need to handle this!
     if (resValue.getResourceType() != null) {
         // if this is a framework id
@@ -53,66 +50,63 @@
         return mContext.getProjectResourceValue(ResourceType.ID, idName, defValue);
     }
     // not a direct id valid reference? resolve it
-    Integer idValue = null;
+    Integer idValue;
     if (resValue.isFramework()) {
         idValue = Bridge.getResourceId(resValue.getResourceType(), resValue.getName());
     } else {
         idValue = mContext.getProjectCallback().getResourceId(resValue.getResourceType(), resValue.getName());
     }
     if (idValue != null) {
-        return idValue.intValue();
+        return idValue;
     }
     Bridge.getLog().warning(LayoutLog.TAG_RESOURCES_RESOLVE, String.format("Unable to resolve id \"%1$s\" for attribute \"%2$s\"", value, mNames[index]), resValue);
     return defValue;

