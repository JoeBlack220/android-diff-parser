<android.provider.Settings.Global: String getStringForUser(ContentResolver,String,int)>
<com.android.internal.policy.impl.PhoneWindowManager: void applyPostLayoutPolicyLw(WindowState,LayoutParams)>
<android.media.AudioService: void startBluetoothSco(IBinder,int)>
<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>
<android.test.ProviderTestCase2: ContentResolver newResolverWithContentProviderFromSql(Context,String,Class<T>,String,String,int,String)>
<android.net.http.CertificateChainValidator: SslError verifyServerDomainAndCertificates(X509Certificate[],String,String)>
<android.graphics.Paint: Xfermode setXfermode(Xfermode)>
<android.content.res.BridgeTypedArray: Drawable getDrawable(int)>
<android.content.res.Resources: Drawable loadDrawable(TypedValue,int)>
<android.widget.FastScroller: TextView createPreviewTextView(Context,TypedArray)>
<com.android.systemui.settings.BrightnessController: void updateSlider()>
<android.app.SharedPreferencesImpl: boolean hasFileChangedUnexpectedly()>
<com.android.frameworks.downloadmanagertests.DownloadManagerTestApp: void verifyFileDownloadSucceeded()>
<android.hardware.SystemSensorManager: boolean cancelTriggerSensorImpl(TriggerEventListener,Sensor,boolean)>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onKeyguardVisibilityChanged(boolean)>
<com.android.tools.layoutlib.create.DependencyFinder.DependencyVisitor: void considerName(String)>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onEmergencyCallAction()>
<android.os.Bundle: void putCharSequenceArrayList(String,ArrayList<CharSequence>)>
<android.widget.Switch: void setThumbDrawable(Drawable)>
<android.media.MediaRouter: void selectRouteInt(int,RouteInfo)>
<android.animation.ValueAnimator: void start(boolean)>
<android.widget.CalendarView: void setShowWeekNumber(boolean)>
<android.os.Looper: void loop()>
<android.widget.CalendarView: boolean getShowWeekNumber()>
<android.graphics.Canvas: void restore()>
<android.media.MediaScanner: Uri scanSingleFile(String,String,String)>
<android.graphics.Canvas: void drawARGB(int,int,int,int)>
<android.media.MediaPlayer: void prepare()>
<android.media.MiniThumbFile: byte[] getMiniThumbFromFile(long,byte[])>
<android.service.dreams.DreamService: void attach(IBinder)>
<android.graphics.Paint: void clearShadowLayer()>
<android.view.Window: void setFlags(int,int)>
<android.webkit.WebSyncManager: void startSync()>
<android.media.MediaFocusControl: void removeFocusStackEntry(String,boolean)>
<android.os.Bundle: void readFromParcel(Parcel)>
<com.android.tools.layoutlib.create.DelegateClassAdapterTest: Throwable dumpGeneratedClass(Throwable,ClassLoader2)>
<com.android.frameworks.downloadmanagertests.DownloadManagerTestApp: void runDownloadMultipleSimultaneously()>
<android.os.BatteryStats: long getBluetoothOnTime(long,int)>
<android.content.ContentResolver: String getType(Uri)>
<android.view.accessibility.AccessibilityNodeInfo: void initFromParcel(Parcel)>
<android.media.AudioRecord: void audioBuffSizeCheck(int)>
<com.android.internal.policy.impl.PhoneWindowManager: int interceptKeyBeforeQueueing(KeyEvent,int,boolean)>
<com.android.wallpapercropper.WallpaperCropActivity.BitmapCropTask: void regenerateInputStream()>
<android.os.BatteryStats: long getWifiOnTime(long,int)>
<android.util.ArraySet: boolean contains(Object)>
<android.animation.PropertyValuesHolder: void setEvaluator(TypeEvaluator)>
<com.android.frameworks.downloadmanagertests.DownloadManagerTestApp: void setUp()>
<android.view.LayoutInflater: void setPrivateFactory(Factory2)>
<android.media.MediaRouter.UserRouteInfo: void setPlaybackStream(int)>
<android.util.JsonReader: void skipValue()>
<com.android.internal.util.XmlUtils: Object readValueXml(XmlPullParser,String[])>
<android.media.MediaRouter.Static: void startMonitoringRoutes(Context)>
<android.appwidget.AppWidgetManager: AppWidgetManager getInstance(Context)>
<android.content.AsyncTaskLoader.LoadTask: void onPostExecute(D)>
<com.android.keyguard.KeyguardViewBase: boolean interceptMediaKey(KeyEvent)>
<android.view.accessibility.AccessibilityNodeInfo: AccessibilityNodeInfo getLabeledBy()>
<com.android.keyguard.KeyguardFaceUnlockView: void maybeStartBiometricUnlock()>
<android.media.Ringtone: void setUri(Uri)>
<android.os.Process: int myTid()>
<android.view.PointerIcon: PointerIcon load(Context)>
<android.speech.srec.Recognizer: void SR_RecognizerStart(int)>
<android.content.res.TypedArray: boolean getBoolean(int,boolean)>
<android.transition.Transition: void captureValues(ViewGroup,boolean)>
<android.graphics.Paint: ColorFilter setColorFilter(ColorFilter)>
<com.android.systemui.SwipeHelper: void dismissChild(View,float)>
<android.content.ContentResolver: void setMasterSyncAutomatically(boolean)>
<android.provider.DocumentsProvider: ParcelFileDescriptor openFile(Uri,String,CancellationSignal)>
<android.os.Bundle: void writeToParcel(Parcel,int)>
<android.view.accessibility.AccessibilityNodeInfo: int getChildCount()>
<android.content.res.TypedArray: boolean hasValue(int)>
<com.android.layoutlib.bridge.impl.DelegateManager: int addNewDelegate(T)>
<com.android.systemui.usb.StorageNotification: void setUsbStorageNotification(int,int,int,boolean,boolean,PendingIntent)>
<android.util.ArrayMap: V remove(Object)>
<android.accessibilityservice.AccessibilityServiceInfo: String flagToString(int)>
<android.os.FileUtils: int getUid(String)>
<android.app.Notification.BigTextStyle: void addExtras(Bundle)>
<android.transition.TransitionSet: TransitionSet setDuration(long)>
<android.transition.TransitionSet: void runAnimators()>
<com.android.systemui.statusbar.BaseStatusBar: void visibilityChanged(boolean)>
<android.widget.CalendarView: void setSelectedWeekBackgroundColor(int)>
<android.appwidget.AppWidgetHostView: Context getRemoteContext(RemoteViews)>
<android.graphics.Rect: Rect unflattenFromString(String)>
<android.appwidget.AppWidgetHost: void deleteAppWidgetId(int)>
<android.provider.MediaStore.InternalThumbnails: Bitmap getThumbnail(ContentResolver,long,long,int,Options,Uri,boolean)>
<android.content.res.BridgeTypedArray: ColorStateList getColorStateList(int)>
<android.media.AudioTrack: void audioParamCheck(int,int,int,int,int)>
<android.view.ViewGroup: ViewParent invalidateChildInParent(int[],Rect)>
<android.app.AlertDialog.Builder: Builder setView(View)>
<android.media.MediaRecorder: void setCaptureRate(double)>
<android.content.res.BridgeTypedArray: CharSequence[] getTextArray(int)>
<com.android.internal.widget.LockPatternUtils: int getActivePasswordQuality()>
<android.app.SearchManager: void startSearch(String,boolean,ComponentName,Bundle,boolean)>
<com.android.tools.layoutlib.create.DelegateClassAdapterTest.ClassLoader2: int callGet(Object,int,long)>
<com.android.internal.policy.impl.PhoneWindow: void onKeyUpPanel(int,KeyEvent)>
<android.os.BatteryStats: long getPhoneSignalStrengthTime(int,long,int)>
<android.transition.TransitionInflater: TransitionInflater from(Context)>
<android.graphics.Path: boolean isInverseFillType()>
<android.view.accessibility.AccessibilityNodeInfo.CollectionInfo: CollectionInfo obtain(int,int,boolean)>
<android.media.AudioService: int checkSendBecomingNoisyIntent(int,int)>
<android.widget.TextView: ColorStateList getTextColors()>
<android.content.pm.Signature: boolean areExactMatch(Signature[],Signature[])>
<android.os.storage.IMountService: int encryptStorage(String)>
<android.content.RestrictionEntry: void setType(int)>
<android.animation.AnimatorSet.Builder: Builder before(Animator)>
<android.os.Bundle: boolean getBoolean(String)>
<android.graphics.drawable.AnimationDrawable: void stop()>
<android.widget.AbsListView: void onLayout(boolean,int,int,int,int)>
<android.widget.CalendarView: long getMinDate()>
<android.widget.TextView: void handleTextChanged(CharSequence,int,int,int)>
<android.print.PrintJobInfo.Builder: void putAdvancedOption(String,String)>
<com.android.internal.policy.impl.PhoneWindow: Bundle saveHierarchyState()>
<android.media.RemoteController: boolean seekTo(long)>
<android.content.AsyncTaskLoader.LoadTask: D doInBackground(Void)>
<com.android.frameworks.downloadmanagertests.DownloadManagerTestApp: void runLargeDownloadOverWiFi()>
<android.view.ScaleGestureDetector: boolean onTouchEvent(MotionEvent)>
<android.os.Bundle: void putByteArray(String,byte[])>
<android.view.HardwareRenderer: void setupDiskCache(File)>
<android.util.TimeUtils: TimeZone getTimeZone(int,boolean,long,String)>
<com.android.internal.policy.impl.PhoneWindow: boolean launchDefaultSearch()>
<android.util.ArrayMap: boolean containsKey(Object)>
<android.printservice.PrintJob: boolean hasAdvancedOption(String)>
<android.view.textservice.TextServicesManager: SpellCheckerSession newSpellCheckerSession(Bundle,Locale,SpellCheckerSessionListener,boolean)>
<android.net.wifi.WifiConfiguration: void writeToParcel(Parcel,int)>
<android.widget.AutoCompleteTextView: void setDropDownBackgroundResource(int)>
<android.view.accessibility.AccessibilityNodeInfo: AccessibilityNodeInfo getLabelFor()>
<com.android.systemui.statusbar.SignalClusterView: void apply()>
<com.android.internal.widget.LockPatternUtils: boolean isLockPasswordEnabled()>
<android.view.MotionEvent.PointerCoords: float getAxisValue(int)>
<android.ddm.DdmHandleProfiling: Chunk handleChunk(Chunk)>
<com.android.connectivitymanagertest.functional.ConnectivityManagerMobileTest: void test3GToWifiNotification()>
<com.android.keyguard.KeyguardUpdateMonitor: void dispatchBootCompleted()>
<android.graphics.Canvas: void setBitmap(Bitmap)>
<android.bluetooth.BluetoothSocket: void connect()>
<com.android.externalstorage.ExternalStorageProvider: String removeExtension(String,String)>
<android.graphics.Paint: void setClassVariablesFrom(Paint)>
<android.widget.EdgeEffect: void setSize(int,int)>
<android.media.MediaRecorder: void prepare()>
<com.android.systemui.settings.BrightnessController: void updateMode()>
<android.app.admin.DevicePolicyManager: List<ComponentName> getActiveAdmins()>
<android.widget.TimePicker: void setOnTimeChangedListener(OnTimeChangedListener)>
<android.graphics.Bitmap: void setHasAlpha(boolean)>
<android.app.Activity: void startActivityAsUser(Intent,UserHandle)>
<android.app.UiAutomation: Bitmap takeScreenshot()>
<android.graphics.drawable.DrawableContainer.DrawableContainerState.ConstantStateFuture: Drawable get(DrawableContainerState)>
<android.media.AudioManager: void registerMediaButtonIntent(PendingIntent,ComponentName)>
<android.view.accessibility.AccessibilityNodeInfo: void setParent(View,int)>
<com.android.connectivitymanagertest.functional.ConnectivityManagerMobileTest: void testConnectToWifi()>
<android.net.wifi.ScanResult: void writeToParcel(Parcel,int)>
<android.transition.TransitionSet: void pause()>
<android.media.Ringtone: boolean isPlaying()>
<android.widget.AbsListView: View obtainView(int,boolean[])>
<android.content.res.TypedArray: CharSequence getText(int)>
<android.app.Dialog: void show()>
<android.service.dreams.DreamService: WindowManager getWindowManager()>
<com.android.internal.widget.LockPatternUtils: String getNextAlarm()>
<android.media.MediaDrm: void provideProvisionResponse(byte[])>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onRefreshBatteryInfo(BatteryStatus)>
<android.bluetooth.BluetoothSocket: int write(byte[],int,int)>
<android.view.ViewRootImpl: void outputDisplayList(View)>
<android.media.MediaMuxer: int nativeSetup(FileDescriptor,int)>
<android.view.ViewPropertyAnimator: void cancel()>
<android.view.ViewGroup: boolean dispatchGenericPointerEvent(MotionEvent)>
<com.android.connectivitymanagertest.ConnectivityManagerTestBase: boolean connectToWifi(String)>
<com.android.tools.layoutlib.create.TransformClassAdapter: MethodVisitor visitMethod(int,String,String,String,String[])>
<com.android.keyguard.KeyguardHostView: void ensureTransportPresentOrRemoved(int)>
<android.animation.ObjectAnimator: void animateValue(float)>
<android.print.PrintDocumentInfo.Builder: PrintDocumentInfo build()>
<android.media.MediaFocusControl: void removeFocusStackEntryForClient(IBinder)>
<android.content.res.TypedArray: String getPositionDescription()>
<android.text.PackedIntVector: void growBuffer()>
<android.media.MediaFocusControl: void remoteControlDisplayUsesBitmapSize(IRemoteControlDisplay,int,int)>
<com.android.keyguard.KeyguardMessageArea: void update()>
<android.os.storage.IMountService.Stub.Proxy: int mountSecureContainer(String,String,int)>
<com.android.documentsui.RootsCache: void updatePackageAsync(String)>
<android.widget.CalendarView: void setWeekDayTextAppearance(int)>
<android.inputmethodservice.SoftInputWindow: void setGravity(int)>
<android.speech.srec.Recognizer: void SR_GrammarSetupVocabulary(int,int)>
<android.graphics.drawable.Drawable: Drawable createFromStream(InputStream,String)>
<android.media.MediaPlayer: void reset()>
<android.media.SubtitleTrack: void hide()>
<android.widget.FastScroller: void setEnabled(boolean)>
<android.content.res.TypedArray: int getIndex(int)>
<android.os.ParcelFileDescriptor: ParcelFileDescriptor[] createSocketPair()>
<com.android.internal.util.XmlUtils: ArrayList readThisListXml(XmlPullParser,String,String[])>
<android.view.accessibility.AccessibilityNodeInfo: AccessibilityNodeInfo getParent()>
<com.android.layoutlib.bridge.impl.GcSnapshot: Graphics2D createCustomGraphics(Graphics2D,Paint_Delegate,boolean,boolean)>
<android.media.MediaPlayer.TimeProvider: void onStopped()>
<android.bluetooth.BluetoothDevice: BluetoothGatt connectGatt(Context,boolean,BluetoothGattCallback)>
<android.view.DisplayInfo: String toString()>
<android.app.backup.BackupManager: RestoreSession beginRestoreSession()>
<android.telephony.PhoneNumberUtils: String cdmaCheckAndProcessPlusCodeByNumberFormat(String,int,int)>
<android.graphics.Bitmap: Bitmap nativeExtractAlpha(int,int,int[])>
<android.net.wifi.p2p.WifiP2pDeviceList: void updateGroupCapability(String,int)>
<android.os.Bundle: void putByte(String,byte)>
<android.os.Bundle: void putFloat(String,float)>
<com.android.internal.policy.impl.PhoneWindowManager: void systemReady()>
<android.view.PointerIcon: PointerIcon getSystemIcon(Context,int)>
<com.android.internal.telephony.CallerInfoAsyncQuery: void allocate(Context,Uri)>
<android.os.CountDownTimer: CountDownTimer start()>
<android.content.RestrictionEntry: String[] getChoiceValues()>
<android.graphics.Canvas: void drawRoundRect(RectF,float,float,Paint)>
<android.media.MediaFocusControl: void unregisterMediaButtonEventReceiverForCalls()>
<android.media.MediaRouter: void removeUserRoute(UserRouteInfo)>
<android.text.TextLine: float handleText(TextPaint,int,int,int,int,boolean,Canvas,float,int,int,int,FontMetricsInt,boolean)>
<android.hardware.location.GeofenceHardwareImpl: void reportGeofenceMonitorStatus(int,int,Location,int)>
<android.media.MediaRouter.RouteInfo: void requestSetVolume(int)>
<android.content.res.AssetManager: int addAssetPath(String)>
<android.os.Bundle: short[] getShortArray(String)>
<android.graphics.drawable.LayerDrawable: boolean setDrawableByLayerId(int,Drawable)>
<android.media.MediaFocusControl: boolean checkUpdateRemoteStateIfActive(int)>
<com.android.layoutlib.bridge.impl.RenderSessionImpl: void setupTabHost(TabHost,IProjectCallback)>
<android.widget.ListPopupWindow.DropDownListView: boolean onForwardedEvent(MotionEvent,int)>
<android.test.TouchUtils: void scrollToBottom(ActivityInstrumentationTestCase,ViewGroup)>
<com.android.tools.layoutlib.create.DelegateClassAdapterTest.ClassLoader2: int callCallNativeInstance(Object,int,double,Object[])>
<android.net.LocalSocketImpl: void close()>
<com.android.systemui.settings.BrightnessController: void unregisterCallbacks()>
<android.app.WallpaperManager: void suggestDesiredDimensions(int,int)>
<com.android.keyguard.FaceUnlock: void handleCancel()>
<android.content.RestrictionEntry: String getTitle()>
<android.graphics.Path: void rewind()>
<android.view.GLES20Canvas: int getRenderer()>
<android.widget.SuggestionsAdapter: Drawable getDrawable(Uri)>
<android.view.InputQueue: void sendInputEvent(InputEvent,Object,boolean,FinishedInputEventCallback)>
<android.preference.Preference: void setIcon(Drawable)>
<android.net.Proxy: Proxy getProxy(Context,String)>
<android.os.Process: int myUid()>
<android.widget.Scroller: boolean computeScrollOffset()>
<android.os.Bundle: void putIntegerArrayList(String,ArrayList<Integer>)>
<android.animation.ValueAnimator: ValueAnimator setDuration(long)>
<android.text.GraphicsOperations: void drawTextRun(Canvas,int,int,int,int,float,float,int,Paint)>
<android.net.NetworkStats: int findIndexHinted(String,int,int,int,int)>
<com.android.internal.widget.LockPatternUtils: void setVisiblePatternEnabled(boolean)>
<android.view.ViewGroup: void focusableViewAvailable(View)>
<android.webkit.WebSyncManager: void resetSync()>
<android.media.MediaPlayer: TrackInfo[] getTrackInfo()>
<android.view.accessibility.CaptioningManager.CaptionStyle: CaptionStyle getCustomStyle(ContentResolver)>
<android.media.MediaPlayer.TimeProvider: void onPaused(boolean)>
<android.view.Window: void setWindowAnimations(int)>
<android.app.ActivityThread: void performStopActivityInner(ActivityClientRecord,StopInfo,boolean,boolean)>
<android.hardware.SensorManager: void getRotationMatrixFromVector(float[],float[])>
<android.os.Bundle: boolean hasFileDescriptors()>
<android.os.storage.IMountService: int mountSecureContainer(String,String,int)>
<android.os.ParcelFileDescriptor: long getStatSize()>
<android.view.Surface: void unlockCanvasAndPost(Canvas)>
<com.android.keyguard.FaceUnlock: boolean start()>
<com.android.tools.layoutlib.create.TransformClassAdapter: void visit(int,int,String,String,String,String[])>
<android.view.MotionEvent: int axisFromString(String)>
<android.webkit.WebSyncManager: void sync()>
<android.animation.PropertyValuesHolder: Method getPropertyFunction(Class,String,Class)>
<android.media.SubtitleTrack: void show()>
<android.hardware.Camera: void setPreviewDisplay(SurfaceHolder)>
<android.widget.CalendarView: int getSelectedWeekBackgroundColor()>
<android.util.Patterns: String concatGroups(Matcher)>
<android.os.PowerManager.WakeLock: void setWorkSource(WorkSource)>
<android.view.accessibility.AccessibilityEvent: void setSealed(boolean)>
<com.android.internal.os.ZygoteInit: void preloadClasses()>
<android.graphics.drawable.GradientDrawable: void setGradientRadius(float)>
<android.graphics.Matrix: boolean preConcat(Matrix)>
<android.view.accessibility.AccessibilityNodeInfo: void clear()>
<android.content.pm.ApplicationInfo: Drawable loadDefaultIcon(PackageManager)>
<android.text.Layout: float getLineMax(int)>
<android.net.wifi.WifiManager: boolean requestBatchedScan(BatchedScanSettings)>
<android.graphics.ColorMatrix: void setConcat(ColorMatrix,ColorMatrix)>
<android.os.Parcel: void writeArrayMapInternal(ArrayMap<String, Object>)>
<android.view.ViewGroup: void dispatchDraw(Canvas)>
<android.media.AmrInputStream: int GsmAmrEncoderNew()>
<android.hardware.SystemSensorManager: boolean requestTriggerSensorImpl(TriggerEventListener,Sensor)>
<com.android.internal.util.XmlUtils: HashMap readMapXml(InputStream)>
<android.view.Window: void setSoftInputMode(int)>
<android.transition.TransitionSet: void resume()>
<android.print.PrintManager: void addPrintJobStateChangeListener(PrintJobStateChangeListener)>
<android.widget.TextView: boolean onPreDraw()>
<androidx.media.filterfw.decoder.CpuVideoTrackDecoder: MediaCodec findDecoderCodec(MediaFormat,int[])>
<android.appwidget.AppWidgetManager: List<AppWidgetProviderInfo> getInstalledProviders()>
<android.widget.DatePicker: int getYear()>
<android.os.Parcel: void writeValue(Object)>
<android.media.MediaCodecInfo: CodecCapabilities getCapabilitiesForType(String)>
<android.hardware.SystemSensorManager.SensorEventQueue: void dispatchSensorEvent(int,float[],int,long)>
<android.util.Spline: Spline createMonotoneCubicSpline(float[],float[])>
<android.content.res.XmlBlock: int nativeGetName(int)>
<android.animation.PropertyValuesHolder: void setKeyframes(Keyframe)>
<android.view.textservice.TextInfo: String getText()>
<android.widget.DatePicker: CalendarView getCalendarView()>
<android.app.WallpaperManager: void clear()>
<android.app.Instrumentation: void finish(int,Bundle)>
<android.service.dreams.DreamService: void setLowProfile(boolean)>
<android.os.StrictMode: void conditionallyCheckInstanceCounts()>
<android.graphics.Canvas: void drawRect(float,float,float,float,Paint)>
<android.graphics.Bitmap: boolean compress(CompressFormat,int,OutputStream)>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onRingerModeChanged(int)>
<android.util.ArrayMap: V removeAt(int)>
<android.hardware.location.GeofenceHardware: boolean addGeofence(int,int,GeofenceHardwareRequest,GeofenceHardwareCallback)>
<android.media.MediaFocusControl: void discardAudioFocusOwner()>
<android.animation.AnimatorSet.Builder: Builder after(Animator)>
<com.android.tools.layoutlib.create.AsmAnalyzer.DependencyVisitor.MyMethodVisitor: void visitMethodInsn(int,String,String,String)>
<android.provider.Settings.Secure: boolean putStringForUser(ContentResolver,String,String,int)>
<android.app.NotificationManager: void notifyAsUser(String,int,Notification,UserHandle)>
<android.media.MediaRouter.UserRouteInfo: void setPlaybackType(int)>
<android.widget.DatePicker: long getMinDate()>
<android.animation.PropertyValuesHolder: void setObjectValues(Object)>
<android.graphics.Canvas: void restoreToCount(int)>
<android.bluetooth.BluetoothSocket: void flush()>
<com.android.tools.layoutlib.create.AsmGenerator: void generate()>
<android.media.AudioManager: boolean querySoundEffectsEnabled()>
<android.service.dreams.DreamService: boolean dispatchGenericMotionEvent(MotionEvent)>
<android.view.accessibility.AccessibilityEvent: void appendRecord(AccessibilityRecord)>
<com.android.internal.telephony.CallerInfoAsyncQuery: void release()>
<android.app.ActivityOptions: Bundle toBundle()>
<com.android.server.content.SyncStorageEngineTest: void testPurgeActiveSync()>
<com.android.internal.policy.impl.PhoneWindowManager: int prepareAddWindowLw(WindowState,LayoutParams)>
<android.view.ViewPropertyAnimator: void setValue(int,float)>
<android.content.RestrictionEntry: boolean getSelectedState()>
<com.android.tools.layoutlib.create.AsmAnalyzer: void findClassesDerivingFrom(String,Map<String, ClassReader>,Map<String, ClassReader>)>
<android.database.sqlite.SQLiteDatabase: boolean deleteDatabase(File)>
<android.bluetooth.BluetoothAdapter: boolean getProfileProxy(Context,ServiceListener,int)>
<android.os.BatteryStats: long getScreenBrightnessTime(int,long,int)>
<android.graphics.Matrix: boolean postConcat(Matrix)>
<android.os.Bundle: void clear()>
<com.android.compatibilitytest.AppCompatibility: boolean processStillUp(String)>
<android.os.Bundle: ClassLoader getClassLoader()>
<android.media.MediaRouter.RouteInfo: int getStatusCode()>
<android.graphics.Typeface: Typeface create(Typeface,int)>
<android.media.AudioManager: void dispatchMediaKeyEvent(KeyEvent)>
<android.media.RemoteControlClient.MetadataEditor: void apply()>
<android.text.TextUtils: int getLayoutDirectionFromLocale(Locale)>
<android.print.PrintManager: List<PrintServiceInfo> getEnabledPrintServices()>
<com.android.internal.os.ZygoteInit: void runSelectLoop()>
<com.android.keyguard.KeyguardViewBase: void verifyUnlock()>
<android.widget.QuickContactBadge: void setImageToDefault()>
<android.provider.Browser: void requestAllIcons(ContentResolver,String,IconListener)>
<android.media.AudioService: int getMasterStreamType()>
<android.provider.DocumentsProvider: AssetFileDescriptor openTypedAssetFile(Uri,String,Bundle,CancellationSignal)>
<android.widget.GridLayout: void measureChildrenWithMargins(int,int,boolean)>
<android.graphics.Matrix: boolean preSkew(float,float,float,float)>
<android.util.LongSparseArray: void append(long,E)>
<android.content.res.ColorStateList: ColorStateList createFromXml(Resources,XmlPullParser)>
<android.media.RemoteControlClient: void setTransportControlFlags(int)>
<android.nfc.NfcActivityManager: BeamShareData createBeamShareData()>
<android.view.inputmethod.BaseInputConnection: boolean setSelection(int,int)>
<com.android.internal.view.menu.MenuBuilder: MenuItem addInternal(int,int,int,CharSequence)>
<android.os.BatteryStats: long getPhoneSignalScanningTime(long,int)>
<android.preference.PreferenceFragment: void setPreferenceScreen(PreferenceScreen)>
<javax.obex.ObexHelper: byte[] createHeader(HeaderSet,boolean)>
<android.os.SystemClock: boolean setCurrentTimeMillis(long)>
<android.os.ParcelFileDescriptor: ParcelFileDescriptor dup()>
<android.view.ViewRootImpl: void setView(View,LayoutParams,View)>
<android.media.AudioManager: void unregisterMediaButtonIntent(PendingIntent)>
<android.view.animation.Transformation: void postCompose(Transformation)>
<android.media.MediaPlayer.TimeProvider: void onSeekComplete(MediaPlayer)>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onUserSwitchComplete(int)>
<android.graphics.Paint: MaskFilter setMaskFilter(MaskFilter)>
<android.view.accessibility.AccessibilityEvent: void clear()>
<android.animation.ObjectAnimator: ObjectAnimator ofPropertyValuesHolder(Object,PropertyValuesHolder)>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onTimeChanged()>
<android.app.admin.DevicePolicyManager: boolean isAdminActive(ComponentName)>
<android.graphics.Bitmap: int getPixel(int,int)>
<android.content.res.AssetManager: int loadThemeAttributeValue(int,int,TypedValue,boolean)>
<com.android.systemui.statusbar.StatusBarIconView: boolean set(StatusBarIcon)>
<android.media.AudioTrack: void audioBuffSizeCheck(int)>
<android.net.NetworkStats: int findIndex(String,int,int,int)>
<android.view.Window: void setFormat(int)>
<android.animation.ObjectAnimator: void initAnimation()>
<android.app.backup.WallpaperBackupHelper: void restoreEntity(BackupDataInputStream)>
<com.android.mediaframeworktest.functional.CodecTest: boolean playMediaSamples(String)>
<com.android.tools.layoutlib.create.DelegateClassAdapterTest: void testNoOp()>
<android.app.Activity: MenuInflater getMenuInflater()>
<com.android.internal.util.AsyncChannel: void disconnect()>
<android.view.accessibility.AccessibilityNodeInfo: void writeToParcel(Parcel,int)>
<android.content.res.AssetManager: boolean applyStyle(int,int,int,int,int[],int[],int[])>
<android.widget.CalendarView: void setUnfocusedMonthDateColor(int)>
<android.widget.CalendarView: Drawable getSelectedDateVerticalBar()>
<android.graphics.pdf.PdfDocument: void finishPage(Page)>
<com.android.internal.telephony.GsmAlphabet: String gsm8BitUnpackedToString(byte[],int,int,String)>
<com.android.internal.location.GpsNetInitiatedHandler: void handleNiNotification(GpsNiNotification)>
<android.media.MediaPlayer: void addSubtitleSource(InputStream,MediaFormat)>
<android.net.ConnectivityManager: boolean isNetworkTypeMobile(int)>
<com.android.smspush.WapPushManager.WapPushManDBHelper: queryData queryLastApp(SQLiteDatabase,String,String)>
<android.os.Parcel: void readArrayMapSafelyInternal(ArrayMap,int,ClassLoader)>
<android.os.ParcelFileDescriptor: ParcelFileDescriptor[] createReliableSocketPair()>
<android.media.MediaRouter: void selectRoute(int,RouteInfo)>
<android.transition.TransitionSet: void createAnimators(ViewGroup,TransitionValuesMaps,TransitionValuesMaps)>
<android.media.MediaFocusControl: void onRegisterVolumeObserverForRcc(int,IRemoteVolumeObserver)>
<android.text.SpannableStringBuilder: float getTextRunAdvances(int,int,int,int,int,float[],int,Paint)>
<android.widget.CalendarView: void setDateTextAppearance(int)>
<android.net.ConnectivityManager: void setProvisioningNotificationVisible(boolean,int,String,String)>
<android.speech.srec.Recognizer: void SR_VocabularyDestroy(int)>
<com.android.internal.policy.impl.PhoneWindowManager: int finishPostLayoutPolicyLw()>
<android.net.wifi.WifiInfo: boolean getHiddenSSID()>
<android.os.Parcel: void writeException(Exception)>
<android.graphics.BidiRenderer: List<ScriptRun> getScriptRuns(char[],int,int,boolean,List<FontInfo>)>
<android.content.res.BridgeTypedArray: boolean getValue(int,TypedValue)>
<com.android.internal.policy.impl.PhoneWindowManager: void updateOrientationListenerLp()>
<android.widget.LinearLayout: void measureVertical(int,int)>
<com.android.internal.os.ZygoteInit: void registerZygoteSocket()>
<android.test.ServiceTestCase: void shutdownService()>
<android.graphics.Paint_Delegate: void updateFontObject()>
<android.net.http.CertificateChainValidator: CertificateChainValidator getInstance()>
<com.android.layoutlib.bridge.impl.DelegateManager: T getDelegate(int)>
<android.widget.EdgeEffect: boolean draw(Canvas)>
<android.graphics.Paint: Shader setShader(Shader)>
<android.widget.CalendarView: int getWeekDayTextAppearance()>
<android.os.Binder: boolean execTransact(int,int,int,int)>
<com.android.internal.os.ZygoteInit: ZygoteConnection acceptCommandPeer()>
<android.view.accessibility.AccessibilityEvent: AccessibilityRecord getRecord(int)>
<android.animation.AnimatorSet: void playSequentially(List<Animator>)>
<android.net.NetworkTemplate: boolean matchesWifi(NetworkIdentity)>
<android.view.accessibility.AccessibilityNodeInfo: AccessibilityNodeInfo getChild(int)>
<android.content.pm.ResolveInfo: int getIconResource()>
<android.media.AudioService: void setStreamMute(int,boolean,IBinder)>
<com.android.layoutlib.bridge.impl.ResourceHelper: Drawable getDrawable(ResourceValue,BridgeContext)>
<com.android.connectivitymanagertest.ConnectivityManagerTestBase: boolean isConnectedToMobile()>
<android.media.AudioService: void makeA2dpDeviceUnavailableNow(String)>
<android.widget.CalendarView: long getMaxDate()>
<android.media.MediaFocusControl: void onRcDisplayClear()>
<android.os.RecoverySystem: void rebootWipeCache(Context)>
<com.android.internal.policy.impl.PhoneWindow: void restoreHierarchyState(Bundle)>
<android.widget.DatePicker: void setSpinnersShown(boolean)>
<com.android.internal.policy.impl.PhoneWindow: boolean initializePanelDecor(PanelFeatureState)>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onUserSwitching(int)>
<com.android.internal.os.RuntimeInit: void wtf(String,Throwable)>
<android.content.RestrictionEntry: void setAllSelectedStrings(String[])>
<android.graphics.drawable.Drawable: Drawable createFromResourceStream(Resources,TypedValue,InputStream,String)>
<android.app.WallpaperManager: Intent getCropAndSetWallpaperIntent(Uri)>
<android.graphics.Matrix: boolean postRotate(float)>
<android.view.ViewGroup: void resetTouchState()>
<android.graphics.Canvas: boolean getClipBounds(Rect)>
<android.net.NetworkTemplate: boolean matchesMobile(NetworkIdentity)>
<android.os.Bundle: CharSequence[] getCharSequenceArray(String)>
<android.net.wifi.WifiEnterpriseConfig: void setEapMethod(int)>
<android.view.ViewGroup: void removeAllViewsInLayout()>
<android.net.nsd.NsdServiceInfo: void writeToParcel(Parcel,int)>
<android.appwidget.AppWidgetProvider: void onReceive(Context,Intent)>
<android.content.res.BridgeTypedArray: int getDimensionPixelSize(int,int)>
<android.view.LayoutInflater: void setFactory2(Factory2)>
<android.media.MediaFocusControl: boolean isPlaystateActive(int)>
<android.graphics.Canvas: void drawArc(RectF,float,float,boolean,Paint)>
<android.media.MediaFocusControl: void dumpRCDList(PrintWriter)>
<android.os.Bundle: void putFloatArray(String,float[])>
<android.media.AudioRecord: void audioParamCheck(int,int,int,int)>
<android.app.Activity: void finish()>
<android.content.res.Resources: ConstantState> getPreloadedDrawables()>
<com.android.layoutlib.bridge.impl.RenderSessionImpl: Result animate(Object,String,boolean,IAnimationListener)>
<android.content.res.ColorStateList: void inflate(Resources,XmlPullParser,AttributeSet)>
<android.service.dreams.DreamService: boolean dispatchTrackballEvent(MotionEvent)>
<android.app.Notification.Builder: Notification buildUnstyled()>
<android.view.HardwareLayer: void setTransform(Matrix)>
<android.graphics.Bitmap: void getPixels(int[],int,int,int,int,int,int)>
<com.android.internal.widget.LockPatternUtils: boolean isLockPatternEnabled()>
<android.media.MediaCodecInfo: boolean isEncoder()>
<android.provider.DocumentsProvider: Cursor query(Uri,String[],String,String[],String)>
<android.content.RestrictionEntry: void setSelectedState(boolean)>
<android.view.accessibility.AccessibilityManager: List<ServiceInfo> getAccessibilityServiceList()>
<android.graphics.Picture: int nativeConstructor(int)>
<android.widget.QuickContactBadge: void assignContactFromEmail(String,boolean)>
<com.android.internal.policy.impl.PhoneWindowManager: void beginLayoutLw(boolean,int,int,int)>
<android.content.res.BridgeAssetManager: AssetManager initSystem()>
<android.widget.AbsSeekBar: void setThumb(Drawable)>
<android.transition.TransitionManager: void changeScene(Scene,Transition)>
<android.telephony.ServiceState: void setFromNotifierBundle(Bundle)>
<android.graphics.Path: void reset()>
<android.speech.srec.Recognizer: int SR_VocabularyLoad()>
<com.android.layoutlib.bridge.impl.RenderSessionImpl: Result removeChild(View,IAnimationListener)>
<android.widget.CalendarView: void setMinDate(long)>
<android.media.AudioService: boolean loadSoundEffects()>
<android.widget.RelativeLayout.LayoutParams: void resolveRules(int)>
<android.hardware.SystemSensorManager.TriggerEventQueue: void dispatchSensorEvent(int,float[],int,long)>
<android.app.Notification.Style: Notification buildStyled(Notification)>
<com.android.internal.policy.impl.PhoneWindowManager: void systemBooted()>
<android.text.TextLine: void set(TextPaint,CharSequence,int,int,int,Directions,boolean,TabStops)>
<android.graphics.drawable.GradientDrawable: void setGradientCenter(float,float)>
<android.os.Environment: String getExternalStorageState()>
<android.app.ActivityOptions: void update(ActivityOptions)>
<javax.obex.ClientOperation: void startProcessing()>
<android.content.res.TypedArray: int getColor(int,int)>
<com.android.keyguard.KeyguardTransportControlView: void populateMetadata()>
<android.content.RestrictionEntry: String getDescription()>
<com.android.tools.layoutlib.create.DelegateClassAdapterTest.ClassLoader2: int callAdd(Object,int,int)>
<android.content.Intent: String toShortString(boolean,boolean,boolean,boolean)>
<com.android.compatibilitytest.AppCompatibility: Collection<ProcessErrorStateInfo> launchActivity(String)>
<android.widget.SuggestionsAdapter: View newView(Context,Cursor,ViewGroup)>
<android.media.RemoteControlClient.MetadataEditor: MetadataEditor putString(int,String)>
<android.animation.PropertyValuesHolder: void setupStartValue(Object)>
<android.app.Activity: void startActivityFromFragment(Fragment,Intent,int,Bundle)>
<android.media.RemoteController.MetadataEditor: void apply()>
<android.content.res.BridgeTypedArray: boolean getBoolean(int,boolean)>
<android.content.res.AssetManager: boolean retrieveAttributes(int,int[],int[],int[])>
<android.app.Notification: void lightenPayload()>
<android.app.SharedPreferencesImpl: void writeToFile(MemoryCommitResult)>
<android.media.AudioService: void sendMasterVolumeUpdate(int,int,int)>
<com.android.internal.telephony.CallerInfo: CallerInfo markAsVoiceMail()>
<android.os.Bundle: byte getByte(String)>
<android.view.Window: void setGravity(int)>
<android.widget.ActivityChooserView.Callbacks: void onItemClick(AdapterView<?>,View,int,long)>
<android.widget.ProgressBar: Drawable tileify(Drawable,boolean)>
<android.widget.ActivityChooserView.Callbacks: void onClick(View)>
<android.graphics.Picture: Canvas beginRecording(int,int)>
<android.os.BatteryStats: long getScreenOnTime(long,int)>
<android.media.RemoteController: String getRemoteControlClientPackageName()>
<android.hardware.SensorManager: void getQuaternionFromVector(float[],float[])>
<android.content.res.BridgeTypedArray: boolean hasValue(int)>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onPhoneStateChanged(int)>
<android.service.dreams.DreamService: boolean dispatchKeyShortcutEvent(KeyEvent)>
<android.widget.TextView: void sendAfterTextChanged(Editable)>
<android.media.AudioService: void setMode(int,IBinder)>
<android.media.MediaRouter.UserRouteInfo: void setVolumeHandling(int)>
<android.content.res.TypedArray: float getDimension(int,float)>
<android.os.ParcelFileDescriptor: ParcelFileDescriptor[] createPipe()>
<com.android.internal.policy.impl.PhoneWindowManager: int windowTypeToLayerLw(int)>
<android.hardware.SystemSensorManager: boolean registerListenerImpl(SensorEventListener,Sensor,int,Handler,int,int)>
<android.provider.Browser: void deleteHistoryWhere(ContentResolver,String)>
<android.util.SparseBooleanArray: void put(int,boolean)>
<android.ddm.DdmHandleProfiling: Chunk handleMPSS(Chunk)>
<android.media.RemoteControlClient: void setOnGetPlaybackPositionListener(OnGetPlaybackPositionListener)>
<android.os.RecoverySystem: void verifyPackage(File,ProgressListener,File)>
<com.android.connectivitymanagertest.ConnectivityManagerTestBase: void turnScreenOff()>
<android.widget.DatePicker: void setMaxDate(long)>
<android.graphics.Bitmap: Bitmap createBitmap(Bitmap)>
<android.ddm.DdmHandleProfiling: Chunk handleMPRS(Chunk)>
<android.animation.PropertyValuesHolder: void setupSetter(Class)>
<android.app.ContextImpl: void startActivityAsUser(Intent,UserHandle)>
<com.android.internal.policy.impl.PhoneWindowManager: void init(Context,IWindowManager,WindowManagerFuncs)>
<com.android.internal.os.RuntimeInit: void zygoteInit(int,String[])>
<android.graphics.Canvas: void drawLine(float,float,float,float,Paint)>
<android.content.ContentResolver: boolean isSyncPending(Account,String)>
<android.bluetooth.BluetoothGattServer: boolean sendResponse(BluetoothDevice,int,int,int,byte[])>
<com.android.internal.os.ZygoteConnection: boolean runOnce()>
<android.media.AudioService: void sendVolumeUpdate(int,int,int,int)>
<android.graphics.Picture: int getWidth()>
<android.media.MediaFocusControl: void registerMediaButtonEventReceiverForCalls(ComponentName)>
<android.media.MediaRouter.RouteInfo: void requestUpdateVolume(int)>
<android.view.ViewGroup: void offsetChildrenTopAndBottom(int)>
<com.android.connectivitymanagertest.ConnectivityManagerTestBase: boolean removeConfiguredNetworksAndDisableWifi()>
<android.graphics.Canvas: boolean isOpaque()>
<com.android.internal.policy.impl.PhoneWindowManager: void notifyLidSwitchChanged(long,boolean)>
<android.view.ViewGroup: void dispatchDetachedFromWindow()>
<android.os.Parcel: Serializable readSerializable()>
<com.android.tools.layoutlib.create.DependencyFinder.DependencyVisitor.MyMethodVisitor: void visitFieldInsn(int,String,String,String)>
<android.os.storage.IMountService: int changeEncryptionPassword(String)>
<com.android.internal.policy.impl.PhoneWindowManager: void launchHomeFromHotKey()>
<android.text.SpannableStringInternal: void setSpan(Object,int,int,int)>
<android.graphics.drawable.GradientDrawable: void setStroke(int,int,float,float)>
<android.net.wifi.p2p.WifiP2pDeviceList: void updateSupplicantDetails(WifiP2pDevice)>
<javax.obex.HeaderSet: void setHeader(int,Object)>
<android.graphics.drawable.Drawable: Drawable createFromXmlInner(Resources,XmlPullParser,AttributeSet)>
<android.widget.RemoteViews: void reapply(Context,View)>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onDeviceProvisioned()>
<android.widget.TextView: int getShadowColor()>
<com.android.internal.policy.impl.PhoneWindowManager: View addStartingWindow(IBinder,String,int,CompatibilityInfo,CharSequence,int,int,int,int)>
<android.hardware.camera2.CameraMetadata: ArrayList<Key<?>> getKeysStatic(Class<? extends CameraMetadata>,CameraMetadata)>
<android.provider.DocumentsContract: Uri createDocument(ContentProviderClient,Uri,String,String)>
<android.hardware.camera2.CameraCharacteristics: List<Key<?>> getAvailableCaptureResultKeys()>
<android.hardware.input.InputManager.InputDeviceVibrator: void vibrate(int,String,long[],int)>
<android.animation.AnimatorSet: void start()>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onUserRemoved(int)>
<android.view.accessibility.AccessibilityRecord: void clear()>
<android.widget.ActivityChooserModel: boolean loadActivitiesIfNeeded()>
<android.widget.FastScroller: void setAlwaysShow(boolean)>
<android.media.MediaFocusControl: void dispatchMediaKeyEvent(KeyEvent,boolean)>
<android.widget.EdgeEffect: void onRelease()>
<android.widget.CalendarView: int getFirstDayOfWeek()>
<com.android.connectivitymanagertest.ConnectivityManagerTestBase: void turnScreenOn()>
<android.widget.FastScroller: boolean isPointInside(float,float)>
<android.media.RemoteController: boolean setArtworkConfiguration(int,int)>
<android.media.AudioService: void setStreamVolume(int,int,int,String)>
<com.android.internal.widget.LockPatternUtils: boolean checkPasswordHistory(String)>
<android.media.MediaFocusControl: void setNewRcClientOnDisplays_syncRcsCurrc(int,PendingIntent,boolean)>
<android.view.LayoutInflater: View createView(String,String,AttributeSet)>
<android.content.res.TypedArray: int length()>
<android.text.GraphicsOperations: float getTextRunAdvances(int,int,int,int,int,float[],int,Paint)>
<android.print.PrintManager: PrintManager getGlobalPrintManagerForUser(int)>
<com.android.internal.widget.RotarySelector: void vibrate(long)>
<android.widget.Switch: void setThumbResource(int)>
<android.content.res.ColorStateList: ColorStateList withAlpha(int)>
<android.content.Intent: Intent parseIntent(Resources,XmlPullParser,AttributeSet)>
<com.android.frameworks.downloadmanagertests.DownloadManagerTestApp: void runDownloadMultipleSwitching()>
<android.widget.DatePicker: long getMaxDate()>
<android.view.Window: void setDimAmount(float)>
<android.appwidget.AppWidgetHostView: void updateAppWidget(RemoteViews)>
<android.content.res.TypedArray: int getIndexCount()>
<com.android.keyguard.KeyguardUpdateMonitor: void handleKeyguardVisibilityChanged(int)>
<android.util.EventLog.Event: Object getData()>
<android.app.SearchDialog: void updateSearchBadge()>
<android.content.Intent: boolean migrateExtraStreamToClipData()>
<android.service.dreams.DreamService: void setScreenBright(boolean)>
<com.android.internal.policy.impl.PhoneWindow: boolean preparePanel(PanelFeatureState,KeyEvent)>
<android.speech.tts.TextToSpeech: int addEarcon(String,String,int)>
<android.service.dreams.DreamService: boolean dispatchTouchEvent(MotionEvent)>
<android.os.Parcel: Object readValue(ClassLoader)>
<com.android.internal.view.menu.MenuBuilder: void onItemsChanged(boolean)>
<android.view.accessibility.AccessibilityNodeInfo: void setLabelFor(View)>
<android.text.Layout: void drawBackground(Canvas,Path,Paint,int,int,int)>
<android.widget.ShareActionProvider: void setActivityChooserPolicyIfNeeded()>
<android.util.SparseLongArray: void put(int,long)>
<com.android.internal.widget.LockPatternUtils: int computePasswordQuality(String)>
<com.android.internal.location.GpsNetInitiatedHandler: void setNiNotification(GpsNiNotification)>
<android.text.Layout: void drawText(Canvas,int,int)>
<android.view.Window: void setBackgroundDrawableResource(int)>
<android.service.dreams.DreamService: void setFullscreen(boolean)>
<android.text.Layout: float getLineWidth(int)>
<android.widget.CalendarView: int getUnfocusedMonthDateColor()>
<android.speech.srec.Recognizer: void SR_AcousticStateReset(int)>
<android.print.PrintManager: List<PrintServiceInfo> getInstalledPrintServices()>
<android.media.MediaRouter.UserRouteInfo: void setVolume(int)>
<android.media.MediaFocusControl: void unregisterRemoteControlDisplay(IRemoteControlDisplay)>
<android.hardware.camera2.impl.CameraMetadataNative: void set(Key<T>,T)>
<android.graphics.Bitmap: Bitmap copy(Config,boolean)>
<android.text.format.Time: int compare(Time,Time)>
<android.bluetooth.BluetoothGatt: boolean writeDescriptor(BluetoothGattDescriptor)>
<android.media.RemoteController: boolean sendMediaKeyEvent(KeyEvent)>
<com.android.frameworks.downloadmanagertests.DownloadManagerTestApp: void runDownloadMultipleWiFiEnableDisable()>
<android.widget.CalendarView: int getWeekSeparatorLineColor()>
<android.graphics.Canvas: void drawVertices(VertexMode,int,float[],int,float[],int,int[],int,short[],int,int,Paint)>
<android.widget.FastScroller: void measurePreview(View,Rect)>
<android.content.res.TypedArray: boolean getValue(int,TypedValue)>
<com.android.connectivitymanagertest.stress.WifiStressTest: void testWifiScanning()>
<android.os.SELinux: boolean native_restorecon(String)>
<android.media.MediaFocusControl: void onRcDisplayInitInfo(IRemoteControlDisplay,int,int)>
<android.speech.tts.FileSynthesisCallback: void closeFile()>
<android.provider.DocumentsContract: Bitmap getDocumentThumbnail(ContentProviderClient,Uri,Point,CancellationSignal)>
<android.text.BoringLayout: void init(CharSequence,TextPaint,int,Alignment,float,float,Metrics,boolean,boolean)>
<android.media.AudioService: void stopBluetoothSco(IBinder)>
<android.widget.AbsListView.RecycleBin: void clear()>
<android.animation.AnimatorSet: void setStartDelay(long)>
<android.net.nsd.NsdServiceInfo: DnsSdTxtRecord getTxtRecord()>
<android.os.Environment: void initForCurrentUser()>
<com.android.internal.policy.impl.PhoneWindowManager: void hideBootMessages()>
<com.android.internal.widget.LockPatternUtils: byte[] passwordToHash(String)>
<android.app.Activity: void onResume()>
<android.graphics.drawable.BitmapDrawable: void setGravity(int)>
<com.android.internal.os.ZygoteInit: boolean startSystemServer()>
<android.database.sqlite.SQLiteConnection: void dumpUnsafe(Printer,boolean)>
<android.widget.LinearLayout: void measureHorizontal(int,int)>
<android.nfc.cardemulation.CardEmulation: CardEmulation getInstance(NfcAdapter)>
<android.widget.DatePicker: void init(int,int,int,OnDateChangedListener)>
<android.view.InputQueue: int getNativePtr()>
<android.util.SparseLongArray: void append(int,long)>
<android.content.res.ColorStateList: ColorStateList valueOf(int)>
<android.view.inputmethod.BaseInputConnection: boolean commitText(CharSequence,int)>
<com.android.systemui.power.PowerUI: int findBatteryLevelBucket(int)>
<android.transition.Transition: TransitionValues getTransitionValues(View,boolean)>
<android.graphics.Path: void addArc(RectF,float,float)>
<android.preference.Preference: void onBindView(View)>
<android.app.Activity: boolean shouldUpRecreateTask(Intent)>
<com.android.layoutlib.bridge.impl.DelegateManager: void removeJavaReferenceFor(int)>
<android.os.Bundle: ArrayList<Integer> getIntegerArrayList(String)>
<com.android.layoutlib.bridge.impl.RenderAction: void tearDown()>
<android.content.ContentResolver: void takePersistableUriPermission(Uri,int)>
<android.os.CountDownTimer: void cancel()>
<android.widget.DatePicker: boolean getCalendarViewShown()>
<android.media.AudioService: boolean checkForRingerModeChange(int,int,int)>
<android.media.MediaFocusControl: void onRcDisplayUpdate(RemoteControlStackEntry,int)>
<android.widget.CalendarView: int getDateTextAppearance()>
<android.graphics.drawable.DrawableContainer: Insets getOpticalInsets()>
<android.widget.FastScroller: void measureViewToSide(View,View,Rect,Rect)>
<android.app.Fragment: void initState()>
<com.android.internal.widget.SlidingTab: void vibrate(long)>
<android.os.Bundle: void putCharSequence(String,CharSequence)>
<android.graphics.NinePatch: int validateNinePatchChunk(int,byte[])>
<android.appwidget.AppWidgetHost: int allocateAppWidgetId()>
<com.android.systemui.screenshot.GlobalScreenshot: void saveScreenshotInWorkerThread(Runnable)>
<android.widget.DatePicker: int getDayOfMonth()>
<android.graphics.Canvas: void drawCircle(float,float,float,Paint)>
<android.transition.Fade: Animator createAnimation(View,float,float,AnimatorListenerAdapter)>
<com.android.internal.policy.impl.PhoneWindow: void onIntChanged(int,int)>
<android.graphics.Paint: PathEffect setPathEffect(PathEffect)>
<android.transition.Transition: void pause()>
<android.content.res.BridgeTypedArray: String getString(int)>
<android.view.Window: void setLayout(int,int)>
<com.android.internal.policy.impl.PhoneWindowManager: boolean goHome()>
<android.app.ApplicationPackageManager: Resources getResourcesForApplicationAsUser(String,int)>
<android.animation.ObjectAnimator: Object getTarget()>
<android.graphics.pdf.PdfDocument: Page startPage(PageInfo)>
<com.android.providers.settings.SettingsProvider: Uri insertForUser(Uri,ContentValues,int)>
<android.transition.Transition: boolean isValidTarget(View,long)>
<android.view.ViewGroup: void addFocusables(ArrayList<View>,int,int)>
<com.android.internal.policy.impl.PhoneWindowManager: void removeWindowLw(WindowState)>
<com.android.tools.layoutlib.create.AsmAnalyzer.DependencyVisitor: void considerName(String)>
<android.util.ArrayMap: void clear()>
<android.media.MediaPlayer: boolean availableMimeTypeForExternalSource(String)>
<android.os.Bundle: void putCharSequenceArray(String,CharSequence[])>
<android.hardware.camera2.utils.UncheckedThrow: void throwAnyException(Exception)>
<android.widget.Spinner: void setPopupBackgroundResource(int)>
<android.bluetooth.BluetoothAdapter: void closeProfileProxy(int,BluetoothProfile)>
<com.android.layoutlib.bridge.impl.RenderSessionImpl: Result inflate()>
<android.content.RestrictionEntry: int getType()>
<android.graphics.ImageFormat: int getBitsPerPixel(int)>
<android.app.Activity: ActionMode onWindowStartingActionMode(Callback)>
<android.media.MediaFocusControl: int requestAudioFocus(int,int,IBinder,IAudioFocusDispatcher,String,String)>
<android.widget.CalendarView: void setShownWeekCount(int)>
<com.android.layoutlib.bridge.impl.RenderSessionImpl: Result insertChild(ViewGroup,ILayoutPullParser,int,IAnimationListener)>
<android.app.Activity: void openOptionsMenu()>
<android.print.PrinterCapabilitiesInfo: List<MediaSize> getMediaSizes()>
<android.widget.CalendarView: int getShownWeekCount()>
<android.bluetooth.BluetoothDevice: boolean createBond()>
<android.graphics.Canvas: void drawPath(Path,Paint)>
<android.graphics.Bitmap: int getAllocationByteCount()>
<android.app.Activity: void startActivityForResult(Intent,int)>
<android.nfc.tech.Ndef: NdefMessage getNdefMessage()>
<android.widget.AbsListView: boolean isFastScrollEnabled()>
<com.android.internal.os.ZygoteInit: void handleSystemServerProcess(Arguments)>
<android.app.ActivityManager: void dumpPackageStateStatic(FileDescriptor,String)>
<android.app.Notification.Style: void addExtras(Bundle)>
<android.view.HardwareLayer: boolean isValid()>
<android.content.res.TypedArray: int getResourceId(int,int)>
<android.graphics.Canvas: void translate(float,float)>
<android.content.res.TypedArray: Resources getResources()>
<com.android.tools.layoutlib.create.AsmAnalyzer.DependencyVisitor.MyMethodVisitor: void visitFieldInsn(int,String,String,String)>
<android.view.SurfaceControl.PhysicalDisplayInfo: String toString()>
<com.android.internal.telephony.CallerInfo: CallerInfo doSecondaryLookupIfNecessary(Context,String,CallerInfo)>
<com.android.internal.view.InputBindResult: void writeToParcel(Parcel,int)>
<android.content.res.TypedArray: ColorStateList getColorStateList(int)>
<android.media.MediaPlayer: void setAuxEffectSendLevel(float)>
<android.widget.CalendarView: void setWeekSeparatorLineColor(int)>
<android.content.SyncInfo: void writeToParcel(Parcel,int)>
<android.view.HardwareLayer: void destroy()>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onRefreshCarrierInfo(CharSequence,CharSequence)>
<android.app.SharedPreferencesImpl.EditorImpl: MemoryCommitResult commitToMemory()>
<android.widget.ShareActionProvider: View onCreateActionView()>
<android.net.Proxy: void setHttpProxySystemProperty(ProxyProperties)>
<android.util.EventLog.Event: int getTag()>
<android.animation.ValueAnimator: boolean delayedAnimationFrame(long)>
<android.animation.PropertyValuesHolder: void setupEndValue(Object)>
<com.android.documentsui.RootsCache: void updateAsync()>
<android.app.ActivityThread: void handleCreateBackupAgent(CreateBackupAgentData)>
<android.net.LocalSocketImpl: void create(int)>
<android.os.ParcelFileDescriptor: ParcelFileDescriptor fromFd(int)>
<com.android.systemui.statusbar.policy.DeadZone: boolean onTouchEvent(MotionEvent)>
<android.animation.ObjectAnimator: void setTarget(Object)>
<android.graphics.drawable.NinePatchDrawable: Insets getOpticalInsets()>
<android.graphics.drawable.GradientDrawable: void setOrientation(Orientation)>
<android.preference.Preference: int compareTo(Preference)>
<android.animation.PropertyValuesHolder: void setIntValues(int)>
<android.content.ContentResolver: void releasePersistableUriPermission(Uri,int)>
<android.widget.AbsListView: boolean isFastScrollAlwaysVisible()>
<com.android.internal.policy.impl.GlobalActions: GlobalActionsDialog createDialog()>
<android.content.res.BridgeTypedArray: CharSequence getText(int)>
<com.android.internal.telephony.CallerInfoAsyncQuery.CallerInfoAsyncQueryHandler: void onQueryComplete(int,Object,Cursor)>
<android.graphics.Canvas: void concat(Matrix)>
<android.os.Process: int myPid()>
<android.os.Bundle: void putStringArrayList(String,ArrayList<String>)>
<android.webkit.WebSyncManager: void stopSync()>
<android.app.Activity: View onCreateView(View,String,Context,AttributeSet)>
<android.appwidget.AppWidgetHost: void stopListening()>
<com.android.tools.layoutlib.create.AsmAnalyzer: Map<String, ClassReader> findDeps(Map<String, ClassReader>,Map<String, ClassReader>)>
<android.os.RecoverySystem: HashSet<Certificate> getTrustedCerts(File)>
<android.accounts.AccountManager: AuthenticatorDescription[] getAuthenticatorTypes()>
<android.view.HardwareLayer: void setLayerPaint(Paint)>
<com.android.systemui.ExpandHelper: void cancel()>
<com.android.keyguard.PagedView: boolean determineScrollingStart(MotionEvent)>
<android.widget.TimePicker: Integer getCurrentHour()>
<android.widget.AbsListView.RecycleBin: void addScrapView(View,int)>
<android.bluetooth.BluetoothInputDevice: boolean setReport(BluetoothDevice,byte,String)>
<android.content.Intent: boolean filterEquals(Intent)>
<android.hardware.camera2.CaptureRequest: void readFromParcel(Parcel)>
<android.text.format.Time: String toString()>
<android.graphics.Path_Delegate: void lineTo(float,float)>
<com.android.smspush.WapPushManager: boolean verifyData(String,String,String,String,int,boolean,boolean)>
<android.os.ParcelFileDescriptor: ParcelFileDescriptor open(File,int)>
<android.telephony.ServiceState: boolean isGsm(int)>
<android.media.AudioService: void handleConfigurationChanged(Context)>
<android.media.MediaFocusControl: void remoteControlDisplayWantsPlaybackPositionSync(IRemoteControlDisplay,boolean)>
<android.view.ViewGroup: boolean dispatchTouchEvent(MotionEvent)>
<com.android.keyguard.EmergencyButton: void takeEmergencyCallAction()>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onUserInfoChanged(int)>
<android.print.PrintManager: void removePrintJobStateChangeListener(PrintJobStateChangeListener)>
<android.content.res.AssetManager: InputStream open(String,int)>
<android.media.AudioRecord: void stop()>
<android.widget.CalendarView: void setMaxDate(long)>
<android.os.Bundle: ArrayList<String> getStringArrayList(String)>
<com.android.internal.os.ZygoteConnection: boolean handleParentProc(int,FileDescriptor[],FileDescriptor,Arguments)>
<com.android.internal.util.XmlUtils: HashSet readThisSetXml(XmlPullParser,String,String[])>
<android.bluetooth.BluetoothGattServer: boolean connect(BluetoothDevice,boolean)>
<android.os.Bundle: void putChar(String,char)>
<com.android.internal.view.RotationPolicy: boolean isRotationSupported(Context)>
<android.content.res.TypedArray: String getString(int)>
<android.app.Fragment: LayoutInflater getLayoutInflater(Bundle)>
<android.widget.TextView: void setTextAppearance(Context,int)>
<android.content.res.TypedArray: int getInt(int,int)>
<android.app.Activity: void onBackPressed()>
<com.android.keyguard.KeyguardAbsKeyInputView: void handleAttemptLockout(long)>
<android.text.TextLine: int getOffsetBeforeAfter(int,int,int,boolean,int,boolean)>
<com.android.internal.widget.ActionBarView: CharSequence buildHomeContentDescription()>
<android.security.KeyChain: Intent createInstallIntent()>
<android.net.wifi.p2p.WifiP2pManager: Channel initialize(Context,Looper,ChannelListener)>
<android.content.AsyncTaskLoader.LoadTask: void onCancelled(D)>
<android.print.PrinterCapabilitiesInfo: List<Resolution> getResolutions()>
<com.android.internal.policy.impl.PhoneWindowManager: boolean areTranslucentBarsAllowed()>
<android.os.Bundle: float getFloat(String)>
<android.os.Message: void copyFrom(Message)>
<com.android.tools.layoutlib.create.AsmAnalyzer: void findGlobs(String,Map<String, ClassReader>,Map<String, ClassReader>)>
<android.content.res.TypedArray: String getNonResourceString(int)>
<com.android.internal.policy.impl.PhoneWindowManager: boolean needSensorRunningLp()>
<android.media.MediaFocusControl: void registerRemoteControlDisplay_int(IRemoteControlDisplay,int,int,ComponentName)>
<com.android.keyguard.FaceUnlock: void handleReportFailedAttempt()>
<android.ddm.DdmHandleProfiling: Chunk handleSPSS(Chunk)>
<android.widget.CheckedTextView: void internalSetPadding(int,int,int,int)>
<android.widget.RemoteViews: View apply(Context,ViewGroup,OnClickHandler)>
<com.android.internal.telephony.CallerInfoAsyncQuery: CallerInfoAsyncQuery startQuery(int,Context,String,OnQueryCompleteListener,Object)>
<com.android.systemui.statusbar.phone.PanelBar: void startOpeningPanel(PanelView)>
<android.content.res.AssetManager: void releaseTheme(int)>
<android.view.Window: void setAttributes(LayoutParams)>
<android.appwidget.AppWidgetHost: void startListening()>
<android.widget.FastScroller: void transitionToHidden()>
<android.app.Activity: void invalidateOptionsMenu()>
<android.app.SearchDialog: void createContentView()>
<android.printservice.PrintJob: int getAdvancedIntOption(String)>
<android.test.ProviderTestCase2: void setUp()>
<android.os.StrictMode: void writeGatheredViolationsToParcel(Parcel)>
<android.content.RestrictionEntry: String getKey()>
<android.media.MediaRouter: void removeRouteInt(RouteInfo)>
<com.android.connectivitymanagertest.ConnectivityManagerTestBase: boolean disableWifi()>
<android.content.res.Resources: TypedArray obtainTypedArray(int)>
<com.android.layoutlib.bridge.impl.ResourceHelper: boolean parseFloatAttribute(String,String,TypedValue,boolean)>
<com.android.framework.permission.tests.VibratorServicePermissionTest: void testVibratePattern()>
<com.android.server.content.SyncStorageEngineTest: void testPeriodicsV2()>
<android.net.LinkProperties: void writeToParcel(Parcel,int)>
<android.media.MediaFocusControl: boolean rcDisplayIsPluggedIn_syncRcStack(IRemoteControlDisplay)>
<android.ddm.DdmHandleHello: Chunk handleHELO(Chunk)>
<android.media.MediaRouter: void addCallback(int,Callback)>
<android.content.pm.PackageItemInfo: Drawable loadDefaultIcon(PackageManager)>
<android.widget.ActivityChooserView: void updateAppearance()>
<android.view.KeyEvent: String keyCodeToString(int)>
<android.widget.RelativeLayout: int getChildMeasureSpec(int,int,int,int,int,int,int,int)>
<android.bluetooth.BluetoothGatt: void abortReliableWrite(BluetoothDevice)>
<com.android.internal.policy.impl.PhoneWindowManager: long interceptKeyBeforeDispatching(WindowState,KeyEvent,int)>
<android.view.textservice.TextInfo: int getSequence()>
<android.view.ViewGroup: boolean dispatchHoverEvent(MotionEvent)>
<android.view.Surface: Canvas lockCanvas(Rect)>
<android.bluetooth.BluetoothSocket: int bindListen()>
<android.appwidget.AppWidgetManager: AppWidgetProviderInfo getAppWidgetInfo(int)>
<android.view.Window: void setType(int)>
<android.media.MediaFocusControl: void postReevaluateRemote()>
<android.print.PrintDocumentInfo.Builder: Builder setPageCount(int)>
<android.os.Bundle: void setClassLoader(ClassLoader)>
<android.text.format.Time: boolean parse3339(String)>
<android.bluetooth.BluetoothSocket: int read(byte[],int,int)>
<com.android.bandwidthtest.BandwidthTest: void downloadFile()>
<com.android.bandwidthtest.BandwidthTest: void downloadFileUsingDownloadManager()>
<android.os.Bundle: void putBoolean(String,boolean)>
<android.content.res.TypedArray: String getNonConfigurationString(int,int)>
<android.widget.EdgeEffect: void onAbsorb(int)>
<android.media.AudioTrack: boolean isMultichannelConfigSupported(int)>
<android.graphics.Canvas: void drawRGB(int,int,int)>
<android.app.Activity: void onStop()>
<android.view.WindowManagerPolicy: Animation createForceHideEnterAnimation(boolean)>
<android.speech.SpeechRecognizer: void destroy()>
<android.graphics.Canvas: void getMatrix(Matrix)>
<android.view.GraphicBuffer: GraphicBuffer create(int,int,int,int)>
<com.android.internal.widget.LockPatternUtils: boolean isBiometricWeakInstalled()>
<android.text.DynamicLayout: void addBlockAtOffset(int)>
<android.net.DnsPinger: List<InetAddress> getDnsList()>
<android.print.PrintManager: PrintJob getPrintJob(PrintJobId)>
<android.media.RemoteControlClient: void setPlaybackPositionUpdateListener(OnPlaybackPositionUpdateListener)>
<android.media.AudioService: void setMasterMute(boolean,int,IBinder)>
<android.widget.FastScroller: boolean transitionPreviewLayout(int)>
<android.view.ViewRootImpl.InputStage: void deliver(QueuedInputEvent)>
<android.transition.Transition: void playTransition(ViewGroup)>
<android.graphics.Matrix: boolean postTranslate(float,float)>
<com.android.internal.policy.impl.PhoneWindow: boolean initializePanelMenu(PanelFeatureState)>
<android.view.ViewGroup: void setClipToPadding(boolean)>
<android.animation.PropertyValuesHolder: void setupValue(Object,Keyframe)>
<android.graphics.Matrix: boolean preTranslate(float,float)>
<android.net.wifi.WifiManager: boolean startScan()>
<javax.obex.ClientOperation: boolean continueOperation(boolean,boolean)>
<android.view.ViewGroup: void dispatchGetDisplayList()>
<android.view.ViewRootImpl.InputStage: void onDeliverToNext(QueuedInputEvent)>
<android.view.accessibility.AccessibilityNodeInfo: long makeNodeId(int,int)>
<com.android.bandwidthtest.BandwidthTest: void uploadFile()>
<android.graphics.drawable.GradientDrawable: void setUseLevel(boolean)>
<android.graphics.Canvas: int getHeight()>
<android.graphics.Matrix: boolean postSkew(float,float)>
<android.text.TextUtils: char[] obtain(int)>
<com.android.keyguard.FaceUnlock: void handleUnlock(int)>
<android.bluetooth.BluetoothGatt: boolean writeCharacteristic(BluetoothGattCharacteristic)>
<android.os.BatteryStats: long getGlobalWifiRunningTime(long,int)>
<com.android.tools.layoutlib.create.Main: boolean processArgs(Log,String[],ArrayList<String>,String[])>
<android.view.ViewPropertyAnimator: ViewPropertyAnimator setStartDelay(long)>
<android.printservice.PrintJob: String getAdvancedStringOption(String)>
<com.android.internal.util.XmlUtils: int[] readThisIntArrayXml(XmlPullParser,String,String[])>
<android.media.AudioService: void adjustSuggestedStreamVolume(int,int,int,String)>
<android.net.wifi.WifiConfiguration: boolean isValid()>
<android.os.Bundle: void putCharArray(String,char[])>
<android.text.format.Time: void setToNow()>
<android.media.MediaPlayer.TrackInfo: void writeToParcel(Parcel,int)>
<android.bluetooth.BluetoothGatt: boolean connect(Boolean,BluetoothGattCallback)>
<android.os.ParcelFileDescriptor: long seekTo(long)>
<android.text.format.DateFormat: String getBestDateTimePattern(Locale,String)>
<android.bluetooth.BluetoothGatt: boolean readCharacteristic(BluetoothGattCharacteristic)>
<android.graphics.Bitmap: void reinit(int,int,boolean)>
<com.android.layoutlib.bridge.util.SparseWeakArray: int indexOfKey(int)>
<com.android.providers.settings.SettingsProvider: Bundle call(String,String,Bundle)>
<android.text.DynamicLayout: void updateBlocks(int,int,int)>
<com.android.internal.view.menu.MenuBuilder: void addMenuPresenter(MenuPresenter)>
<android.widget.CalendarView: void setWeekNumberColor(int)>
<android.content.res.Resources: int selectSystemTheme(int,int,int,int,int)>
<android.app.Notification: void setLatestEventInfo(Context,CharSequence,CharSequence,PendingIntent)>
<android.app.Activity: void onPanelClosed(int,Menu)>
<android.speech.srec.Recognizer: void SR_GrammarCompile(int)>
<android.graphics.Camera: void applyToCanvas(Canvas)>
<android.graphics.drawable.GradientDrawable: void setGradientType(int)>
<android.widget.ImageView: void setImageResource(int)>
<com.android.tools.layoutlib.create.AsmGenerator: byte[] transform(ClassReader,boolean)>
<android.content.res.AssetManager: void makeStringBlocks(boolean)>
<android.media.MediaPlayer.TimeProvider: void onNewPlayer()>
<com.android.tools.layoutlib.create.TransformClassAdapter: void visitInnerClass(String,String,String,int)>
<android.util.ArrayMap: V get(Object)>
<android.net.Proxy: void validate(String,String,String)>
<com.android.internal.widget.WaveView: void vibrate(long)>
<com.android.internal.policy.impl.PhoneWindow: boolean onKeyUp(int,int,KeyEvent)>
<com.android.systemui.usb.StorageNotification: void setMediaStorageNotification(int,int,int,boolean,boolean,PendingIntent)>
<com.android.layoutlib.bridge.impl.RenderSessionImpl: Result moveChild(ViewGroup,View,int,Map<String, String>,IAnimationListener)>
<android.view.inputmethod.BaseInputConnection: boolean sendKeyEvent(KeyEvent)>
<android.os.Process: void openZygoteSocketIfNeeded()>
<android.app.ActivityManager: int getLauncherLargeIconSize()>
<android.text.Layout: boolean isRtlCharAt(int)>
<android.app.admin.DevicePolicyManager: ComponentName setGlobalProxy(ComponentName,Proxy,List<String>)>
<android.graphics.Matrix: boolean preRotate(float)>
<com.android.systemui.ExpandHelper: void vibrate(long)>
<android.graphics.Bitmap: void setPixel(int,int,int)>
<android.os.Bundle: char[] getCharArray(String)>
<android.widget.TextView: int getExtendedPaddingTop()>
<android.view.ViewGroup: void clearDisappearingChildren()>
<android.media.MediaRouter.RouteInfo: boolean isConnecting()>
<android.widget.FastScroller: void cancelPendingDrag()>
<android.net.MobileDataStateTracker: int setEnableApn(String,boolean)>
<android.view.accessibility.AccessibilityManager: boolean addAccessibilityStateChangeListener(AccessibilityStateChangeListener)>
<android.widget.AbsListView: void invokeOnItemScrollListener()>
<android.widget.Toast: void show()>
<android.util.SparseIntArray: void append(int,int)>
<com.android.frameworks.downloadmanagertests.DownloadManagerBaseTest: void setUp()>
<android.media.AudioRecord: void startRecording(MediaSyncEvent)>
<android.widget.FastScroller: void transitionToDragging()>
<android.graphics.Canvas: void skew(float,float)>
<android.appwidget.AppWidgetManager: int[] getAppWidgetIds(ComponentName)>
<android.content.res.AssetManager: void applyThemeStyle(int,int,boolean)>
<android.view.accessibility.AccessibilityEvent: String eventTypeToString(int)>
<android.text.MeasuredText: void setPara(CharSequence,int,int,TextDirectionHeuristic)>
<android.telephony.PhoneNumberUtils: boolean isPotentialLocalEmergencyNumber(String,Context)>
<android.graphics.BitmapFactory: Bitmap decodeStream(InputStream)>
<android.widget.AbsListView.RecycleBin: View getScrapView(int)>
<android.content.res.AssetManager: boolean getThemeValue(int,int,TypedValue,boolean)>
<android.text.StaticLayout: void generate(CharSequence,int,int,TextPaint,int,TextDirectionHeuristic,float,float,boolean,boolean,float,TruncateAt)>
<android.widget.DatePicker: int getMonth()>
<com.android.tools.layoutlib.create.AbstractClassAdapter: Type renameTypeAsType(Type)>
<android.view.accessibility.AccessibilityEvent: void initFromParcel(Parcel)>
<android.text.format.Time: long normalize(boolean)>
<android.app.admin.DeviceAdminReceiver: void onReceive(Context,Intent)>
<android.view.animation.AnimationUtils: Interpolator loadInterpolator(Context,int)>
<android.content.res.Resources: TypedArray obtainAttributes(AttributeSet,int[])>
<android.widget.CalendarView: void setDate(long)>
<android.content.res.TypedArray: CharSequence[] getTextArray(int)>
<com.android.internal.telephony.CallerInfo: String toString()>
<com.android.keyguard.ChallengeLayout: void showChallenge(boolean)>
<android.media.MediaCodecInfo: String getName()>
<android.bluetooth.BluetoothGatt: boolean executeReliableWrite()>
<android.os.Bundle: void putShortArray(String,short[])>
<android.media.RemoteController: boolean setSynchronizationMode(int)>
<android.content.RestrictionEntry: String getSelectedString()>
<android.app.admin.DevicePolicyManager: long getMaximumTimeToLock(ComponentName,int)>
<android.appwidget.AppWidgetManager: void notifyAppWidgetViewDataChanged(int[],int)>
<android.content.ContentResolver: List<PeriodicSync> getPeriodicSyncs(Account,String)>
<android.bluetooth.BluetoothGatt: boolean beginReliableWrite()>
<android.content.RestrictionEntry: void setSelectedString(String)>
<android.text.format.Time: boolean parse(String)>
<com.android.server.content.SyncStorageEngineTest: void testPeriodics()>
<android.appwidget.AppWidgetHost: void deleteHost()>
<android.app.Activity: void addContentView(View,LayoutParams)>
<android.graphics.Matrix: int ni()>
<com.android.providers.settings.SettingsProvider: DatabaseHelper getOrEstablishDatabase(int)>
<android.widget.AdapterView: boolean performItemClick(View,int,long)>
<android.content.res.Resources.Theme: void setTo(Theme)>
<android.view.animation.Transformation: void set(Transformation)>
<com.android.internal.os.ZygoteInit: void closeServerSocket()>
<android.util.LongSparseArray: void put(long,E)>
<android.transition.Transition: void end()>
<android.os.PowerManager: void validateWakeLockParameters(int,String)>
<android.speech.tts.TextToSpeechService.SynthHandler: int enqueueSpeechItem(int,SpeechItem)>
<android.media.Ringtone: void play()>
<android.content.res.BridgeTypedArray: float getFloat(int,float)>
<android.content.res.BridgeTypedArray: int getInt(int,int)>
<android.content.ContentResolver: void cancelSync(Account,String)>
<android.widget.TextView: int getExtendedPaddingBottom()>
<android.media.AudioService: int setModeInt(int,IBinder,int)>
<android.net.wifi.WifiConfiguration: String getKeyIdForCredentials(WifiConfiguration)>
<android.appwidget.AppWidgetHost: int[] getAppWidgetIds()>
<android.app.Notification: CharSequence safeCharSequence(CharSequence)>
<android.util.SparseIntArray: void put(int,int)>
<android.widget.FastScroller: void setThumbPos(float)>
<com.android.tools.layoutlib.create.AsmAnalyzer: void analyze()>
<android.view.ViewGroup: void setClipChildren(boolean)>
<com.android.keyguard.FaceUnlock: void handlePokeWakelock(int)>
<android.widget.ListPopupWindow.ForwardingListener: boolean onTouchObserved(MotionEvent)>
<android.os.ParcelFileDescriptor: ParcelFileDescriptor[] createReliablePipe()>
<android.view.ViewGroup: void invalidateChild(View,Rect)>
<android.graphics.Bitmap: int ni()>
<com.android.layoutlib.bridge.util.SparseWeakArray: void append(int,E)>
<android.net.http.CertificateChainValidator: void handleTrustStorageUpdate()>
<android.transition.Transition: void createAnimators(ViewGroup,TransitionValuesMaps,TransitionValuesMaps)>
<android.widget.DatePicker: void setMinDate(long)>
<android.preference.PreferenceActivity: void loadHeadersFromResource(int,List<Header>)>
<com.android.internal.policy.impl.PhoneWindowManager: void showBootMessage(CharSequence,boolean)>
<android.provider.DocumentsProvider: String getType(Uri)>
<android.view.animation.Transformation: void compose(Transformation)>
<android.net.LocalSocketImpl.SocketInputStream: int available()>
<android.text.Layout: int getParagraphLeadingMargin(int)>
<com.android.internal.policy.impl.PhoneWindow: boolean onKeyDown(int,int,KeyEvent)>
<android.content.res.AssetManager: int createTheme()>
<android.app.Activity: boolean dispatchKeyEvent(KeyEvent)>
<android.net.wifi.p2p.WifiP2pDevice: void updateSupplicantDetails(WifiP2pDevice)>
<android.graphics.Typeface: Typeface createFromAsset(AssetManager,String)>
<android.widget.CalendarView: int getWeekNumberColor()>
<com.android.internal.widget.LockPatternUtils: int getKeyguardStoredPasswordQuality()>
<android.graphics.drawable.ColorDrawable: void setAlpha(int)>
<android.provider.DocumentsContract: String getRootId(Uri)>
<android.app.backup.BackupAgent: void fullBackupFileTree(String,String,String,HashSet<String>,FullBackupDataOutput)>
<android.media.RemoteController: long getEstimatedMediaPosition()>
<android.media.AudioService: void setRingerMode(int)>
<com.android.smoketest.ProcessErrorsTest: Collection<ProcessError> runOneActivity(ResolveInfo)>
<android.widget.OverScroller: boolean computeScrollOffset()>
<android.view.accessibility.AccessibilityNodeInfo: void setSource(View,int)>
<android.widget.DatePicker: boolean getSpinnersShown()>
<com.android.internal.widget.LockPatternUtils: boolean usingBiometricWeak()>
<com.android.internal.policy.impl.PhoneWindow: void updateProgressBars(int)>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onClockVisibilityChanged()>
<android.graphics.Canvas: boolean clipPath(Path)>
<android.app.Activity: boolean onMenuOpened(int,Menu)>
<android.widget.CalendarView: int getFocusedMonthDateColor()>
<android.service.notification.StatusBarNotification: StatusBarNotification cloneLight()>
<android.graphics.drawable.BitmapDrawable: Bitmap getBitmap()>
<android.graphics.Canvas: int getWidth()>
<android.os.UserManager: int getMaxSupportedUsers()>
<android.widget.FastScroller: void transitionToVisible()>
<android.content.ContentProvider: void attachInfo(Context,ProviderInfo)>
<com.android.internal.widget.LockPatternUtils: void updateEncryptionPassword(String)>
<android.widget.CalendarView: long getDate()>
<android.widget.CalendarView: void setOnDateChangeListener(OnDateChangeListener)>
<android.text.Layout: float measurePara(TextPaint,CharSequence,int,int)>
<android.content.ContentResolver: void setSyncAutomatically(Account,String,boolean)>
<com.android.internal.os.ZygoteConnection.Arguments: void parseArgs(String[])>
<android.widget.AbsListView.RecycleBin: void scrapActiveViews()>
<android.view.MenuInflater: void parseMenu(XmlPullParser,AttributeSet,Menu)>
<android.net.ConnectivityManager: LinkProperties getLinkProperties(int)>
<android.app.backup.FullBackup: void restoreFile(ParcelFileDescriptor,long,int,long,long,File)>
<com.android.compatibilitytest.AppCompatibility: void testAppStability()>
<android.graphics.Paint_Delegate: float measureText(char[],int,int,boolean)>
<android.animation.PropertyValuesHolder: void setFloatValues(float)>
<android.app.IActivityManager: boolean profileControl(String,int,boolean,String,ParcelFileDescriptor,int)>
<android.content.RestrictionEntry: String[] getAllSelectedStrings()>
<android.transition.Transition: void captureHierarchy(View,boolean)>
<android.os.StrictMode: void readAndHandleBinderCallViolations(Parcel)>
<android.media.MediaPlayer: void setAudioStreamType(int)>
<android.os.Bundle: byte[] getByteArray(String)>
<android.service.dreams.DreamService: void detach()>
<android.widget.TimePicker: Integer getCurrentMinute()>
<android.widget.Switch: boolean hitThumb(float,float)>
<android.speech.srec.Recognizer: void SR_GrammarAllowOnly(int,String)>
<android.text.method.Touch: boolean onTouchEvent(TextView,Spannable,MotionEvent)>
<android.view.Surface: void transferFrom(Surface)>
<android.view.accessibility.AccessibilityEvent: int getRecordCount()>
<android.graphics.drawable.AnimationDrawable: boolean isRunning()>
<android.os.Bundle: ArrayList<CharSequence> getCharSequenceArrayList(String)>
<android.content.res.TypedArray: TypedValue peekValue(int)>
<android.os.Bundle: boolean[] getBooleanArray(String)>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onSimStateChanged(State)>
<android.widget.FastScroller: void scrollTo(float)>
<android.widget.ListView: boolean arrowScrollImpl(int)>
<android.content.RestrictionEntry: void setDescription(String)>
<android.media.MediaFocusControl: void registerMediaButtonIntent(PendingIntent,ComponentName,IBinder)>
<com.android.framework.permission.tests.VibratorServicePermissionTest: void testVibrate()>
<com.android.frameworks.downloadmanagertests.DownloadManagerTestApp: void runDownloadMultipleAirplaneModeEnableDisable()>
<android.view.LayoutInflater_Delegate: /*package*/
void rInflate(LayoutInflater,XmlPullParser,View,AttributeSet,boolean)>
<android.graphics.Canvas: void drawPaint(Paint)>
<com.android.internal.util.FileRotator: void maybeRotate(long)>
<android.preference.DialogPreference: void setDialogIcon(int)>
<android.util.ArraySet: E removeAt(int)>
<android.view.animation.Transformation: void clear()>
<com.android.tools.layoutlib.create.DelegateClassAdapterTest.ClassLoader2: int callGet_Original(Object,int,long)>
<android.widget.AbsListView.PositionScroller: void scrollToVisible(int,int,int)>
<android.os.Process: int myPpid()>
<android.net.wifi.p2p.WifiP2pDeviceList: void updateStatus(String,int)>
<android.graphics.Picture: Picture createFromStream(InputStream)>
<android.os.NullVibrator: void vibrate(int,String,long[],int)>
<android.ddm.DdmHandleHeap: Chunk handleHPGC(Chunk)>
<android.text.format.Time: String format(String)>
<android.provider.DocumentsContract: void deleteDocument(ContentProviderClient,Uri)>
<com.android.connectivitymanagertest.functional.ConnectivityManagerMobileTest: void verifyCellularConnection()>
<android.util.SparseArray: void put(int,E)>
<android.widget.CalendarView: void setFocusedMonthDateColor(int)>
<android.provider.Settings.Secure: boolean putIntForUser(ContentResolver,String,int,int)>
<com.android.keyguard.FaceUnlock: void handleServiceConnected()>
<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>
<android.view.inputmethod.InputMethodManager: void clearBindingLocked()>
<android.hardware.camera2.CameraCharacteristics: List<Key<?>> getAvailableCaptureRequestKeys()>
<android.widget.TextView: void setError(CharSequence)>
<android.animation.PropertyValuesHolder: void init()>
<android.app.KeyguardManager: void exitKeyguardSecurely(OnKeyguardExitResult)>
<android.content.pm.PackageItemInfo: Drawable loadIcon(PackageManager)>
<android.animation.LayoutTransition: void setupChangeAnimation(ViewGroup,int,Animator,long,View)>
<com.android.internal.widget.LockPatternUtils: void clearLock(boolean)>
<android.os.BatteryStats.Uid: Map<Integer, ? extends Sensor> getSensorStats()>
<android.graphics.Bitmap: void setPixels(int[],int,int,int,int,int,int)>
<android.util.Spline: float interpolate(float)>
<android.media.Ringtone: void stop()>
<android.widget.ListPopupWindow.ForwardingListener: boolean onTouchForwarded(MotionEvent)>
<com.android.internal.policy.impl.PhoneWindowManager: void layoutWindowLw(WindowState,LayoutParams,WindowState)>
<android.app.Instrumentation: Activity newActivity(ClassLoader,String,Intent)>
<android.content.SyncRequest.Builder: SyncRequest build()>
<android.content.res.AssetManager: void dumpTheme(int,int,String,String)>
<android.media.MediaCodecInfo: String[] getSupportedTypes()>
<android.text.SpannableStringBuilder: void setSpan(Object,int,int,int)>
<android.media.MediaFocusControl: void dumpRCStack(PrintWriter)>
<com.android.server.NetworkManagementServiceTest: void testNetworkObservers()>
<android.text.TextLine: void drawTextRun(Canvas,TextPaint,int,int,int,int,boolean,float,int)>
<android.widget.TextView: void paste(int,int)>
<android.view.accessibility.AccessibilityNodeInfo: void init(AccessibilityNodeInfo)>
<android.widget.TimePicker: void setCurrentMinute(Integer)>
<android.content.pm.PackageManager: PackageInfo getPackageArchiveInfo(String,int)>
<android.graphics.BidiRenderer: void setScriptFont(char[],ScriptRun,List<FontInfo>)>
<android.media.AudioManager: void preDispatchKeyEvent(KeyEvent,int)>
<com.android.internal.policy.impl.PhoneWindowManager: void beginPostLayoutPolicyLw(int,int)>
<android.content.pm.PermissionInfo: String protectionToString(int)>
<android.graphics.drawable.ColorDrawable: Drawable mutate()>
<android.os.MemoryFile: int native_mmap(FileDescriptor,int,int)>
<com.android.connectivitymanagertest.ConnectivityManagerTestBase: boolean isConnectedToWifi()>
<android.view.Surface: void copyFrom(SurfaceControl)>
<com.android.frameworks.downloadmanagertests.DownloadManagerTestApp: void initiateDownload()>
<android.animation.PropertyValuesHolder: void setupSetterAndGetter(Object)>
<android.content.res.TypedArray: int getInteger(int,int)>
<android.net.LocalSocketImpl: FileDescriptor accept(FileDescriptor,LocalSocketImpl)>
<android.os.Bundle: void putShort(String,short)>
<android.net.ConnectivityManager: String getNetworkTypeName(int)>
<android.view.Window: void setDefaultWindowFormat(int)>
<android.content.ContentResolver: SyncStatusInfo getSyncStatus(Account,String)>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onBootCompleted()>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onDevicePolicyManagerStateChanged()>
<android.view.MotionEvent: String axisToString(int)>
<com.android.internal.widget.LockPatternUtils: boolean isLockScreenDisabled()>
<android.graphics.Canvas: void drawTextOnPath(char[],int,int,Path,float,float,Paint)>
<android.widget.TimePicker: boolean is24HourView()>
<com.android.keyguard.KeyguardViewBase: void show()>
<android.provider.DocumentsProvider: void attachInfo(Context,ProviderInfo)>
<android.media.MediaMetadataEditor: void clear()>
<com.android.internal.policy.impl.PhoneWindowManager: int selectAnimationLw(WindowState,int)>
<android.widget.SuggestionsAdapter: Drawable getDrawableFromResourceValue(String)>
<com.android.internal.policy.impl.PhoneWindowManager: Intent createHomeDockIntent()>
<android.app.ActivityThread: Resources getTopLevelResources(String,int,Configuration,LoadedApk)>
<android.util.LongSparseLongArray: void append(long,long)>
<android.security.KeyChain: void choosePrivateKeyAlias(Activity,KeyChainAliasCallback,String[],Principal[],String,int,String)>
<com.android.systemui.SearchPanelView: boolean isShowing()>
<android.view.ViewPropertyAnimator: float getValue(int)>
<android.widget.TabWidget: void setLeftStripDrawable(Drawable)>
<android.widget.Switch: void setTrackDrawable(Drawable)>
<android.app.ActivityThread.ApplicationThread: void scheduleLaunchActivity(Intent,IBinder,int,ActivityInfo,Configuration,CompatibilityInfo,int,Bundle,List<ResultInfo>,List<Intent>,boolean,boolean,String,ParcelFileDescriptor,boolean)>
<android.graphics.Canvas: void setMatrix(Matrix)>
<android.media.MediaRouter.UserRouteInfo: void setVolumeMax(int)>
<android.app.backup.BackupAgent: void waitForSharedPrefs()>
<com.android.tools.layoutlib.create.RenameClassAdapter: String renameInternalType(String)>
<android.telephony.SignalStrength: int getDbm()>
<android.view.ViewGroup: void requestChildFocus(View,View)>
<android.app.admin.DevicePolicyManager: void setActiveAdmin(ComponentName,boolean)>
<android.text.GraphicsOperations: int getTextRunCursor(int,int,int,int,int,Paint)>
<android.util.ArraySet: void clear()>
<com.android.internal.os.RuntimeInit: void wrapperInit(int,String[])>
<android.os.Bundle: void putSerializable(String,Serializable)>
<android.hardware.SystemSensorManager: void unregisterListenerImpl(SensorEventListener,Sensor)>
<android.media.AudioManager: void setMasterMute(boolean)>
<android.media.MediaFocusControl: void setNewRcClientGenerationOnClients_syncRcsCurrc(int)>
<android.media.RemoteControlClient.MetadataEditor: MetadataEditor putBitmap(int,Bitmap)>
<android.provider.Settings.Global: boolean putStringForUser(ContentResolver,String,String,int)>
<android.util.ArraySet: boolean remove(Object)>
<android.view.accessibility.AccessibilityManager: void sendAccessibilityEvent(AccessibilityEvent)>
<android.media.AudioService: void playSoundEffectVolume(int,float)>
<android.graphics.Paint: void reset()>
<android.os.BatteryStats: long getPhoneOnTime(long,int)>
<android.view.ViewGroup: void unFocus()>
<android.media.RemoteControlClient.MetadataEditor: MetadataEditor putLong(int,long)>
<android.view.ViewPropertyAnimator: void startAnimation()>
<android.bluetooth.BluetoothDevice: boolean fetchUuidsWithSdp()>
<android.widget.ListPopupWindow: void setModal(boolean)>
<android.media.MediaFocusControl: void unregisterRemoteControlClient(PendingIntent,IRemoteControlClient)>
<android.graphics.drawable.GradientDrawable: void setColors(int[])>
<android.view.textservice.TextInfo: void writeToParcel(Parcel,int)>
<android.app.ApplicationErrorReport.CrashInfo: void writeToParcel(Parcel,int)>
<com.android.documentsui.SortingCursorWrapper: void binarySort(int[],long[])>
<android.app.Notification: void writeToParcel(Parcel,int)>
<android.graphics.Paint: Typeface setTypeface(Typeface)>
<com.android.internal.os.ZygoteConnection: void handleChildProc(Arguments,FileDescriptor[],FileDescriptor,PrintStream)>
<android.graphics.Canvas: void drawBitmapMesh(Bitmap,int,int,float[],int,int[],int,Paint)>
<android.os.Bundle: float[] getFloatArray(String)>
<android.util.LongSparseLongArray: void put(long,long)>
<com.android.connectivitymanagertest.functional.ConnectivityManagerMobileTest: void testWifiStateChange()>
<android.service.dreams.DreamService: void onCreate()>
<android.app.Notification.Builder: Notification build()>
<android.graphics.NinePatch: Region getTransparentRegion(Rect)>
<android.media.MediaPlayer: void start()>
<android.util.SparseArray: void append(int,E)>
<com.android.systemui.statusbar.BaseStatusBar: void handleNotificationError(IBinder,StatusBarNotification,String)>
<android.graphics.drawable.ColorDrawable: int getAlpha()>
<android.net.wifi.WifiInfo: void writeToParcel(Parcel,int)>
<android.transition.Transition: void resume()>
<android.widget.Switch: void stopDrag(MotionEvent)>
<com.android.connectivitymanagertest.ConnectivityManagerTestBase: int waitForTetherStateChange(long)>
<com.android.layoutlib.bridge.impl.RenderSessionImpl: Result init(long)>
<android.content.res.XmlBlock: int nativeNext(int)>
<android.util.SparseBooleanArray: void append(int,boolean)>
<android.widget.Switch: void setTrackResource(int)>
<android.content.res.AssetManager: void ensureStringBlocks()>
<com.android.systemui.recent.RecentTasksLoader: TaskDescription createTaskDescription(int,int,Intent,ComponentName,CharSequence)>
<android.animation.PropertyValuesHolder: void calculateValue(float)>
<android.graphics.Canvas: int getSaveCount()>
<android.view.inputmethod.BaseInputConnection: boolean setComposingText(CharSequence,int)>
<android.view.HardwareRenderer: void trimMemory(int)>
<android.app.backup.BackupAgent: void onRestoreFile(ParcelFileDescriptor,long,int,String,String,long,long)>
<com.android.internal.location.GpsNetInitiatedHandler: Intent getDlgIntent(GpsNiNotification)>
<android.media.AudioService: void sendMasterMuteUpdate(boolean,int)>
<android.graphics.Canvas: int saveLayerAlpha(float,float,float,float,int,int)>
<android.widget.AutoCompleteTextView: void setAdapter(T)>
<android.content.res.TypedArray: float getFraction(int,int,int,float)>
<com.android.connectivitymanagertest.functional.ConnectivityManagerMobileTest: void testDataConnectionWithWifiToAMToWifi()>
<com.android.internal.policy.impl.PhoneWindowManager: boolean canHideNavigationBar()>
<com.android.layoutlib.bridge.util.SparseWeakArray: int keyAt(int)>
<android.media.MediaRouter: void removeCallback(Callback)>
<android.speech.srec.Recognizer: boolean SR_RecognizerIsSignalClipping(int)>
<android.app.Activity: ActionBar getActionBar()>
<android.bluetooth.BluetoothGatt: boolean readDescriptor(BluetoothGattDescriptor)>
<android.widget.FastScroller: void startPendingDrag()>
<android.view.accessibility.AccessibilityManager: List<AccessibilityServiceInfo> getInstalledAccessibilityServiceList()>
<android.database.ContentObserver: void dispatchChange(boolean)>
<android.widget.CalendarView: void setFirstDayOfWeek(int)>
<android.content.res.AssetManager: XmlBlock openXmlBlockAsset(int,String)>
<android.view.HardwareLayer: boolean copyInto(Bitmap)>
<android.service.dreams.DreamService: boolean dispatchKeyEvent(KeyEvent)>
<android.media.RemoteControlClient: MetadataEditor editMetadata(boolean)>
<android.content.RestrictionEntry: void setTitle(String)>
<android.telephony.PhoneNumberUtils: String getNumberFromIntent(Intent,Context)>
<android.os.Bundle: short getShort(String,short)>
<android.content.pm.ComponentInfo: Drawable loadDefaultIcon(PackageManager)>
<com.android.connectivitymanagertest.stress.WifiStressTest: void testWifiReconnectionAfterSleep()>
<android.security.KeyChain: KeyChainConnection bind(Context)>
<android.graphics.Path: void toggleInverseFillType()>
<android.content.RestrictionEntry: String[] getChoiceEntries()>
<com.android.internal.policy.impl.PhoneWindowManager: int checkAddPermission(LayoutParams,int[])>
<com.android.internal.util.XmlUtils: HashMap readThisMapXml(XmlPullParser,String,String[])>
<android.media.ImageReader: int getNumPlanesFromFormat()>
<android.media.AudioManager: void setMicrophoneMute(boolean)>
<com.android.connectivitymanagertest.ConnectivityManagerTestBase: boolean disconnectAP()>
<android.appwidget.AppWidgetHost: void deleteAllHosts()>
<android.widget.TimePicker: void setIs24HourView(Boolean)>
<android.printservice.PrintServiceInfo: PrintServiceInfo create(ResolveInfo,Context)>
<android.view.ViewPropertyAnimator.AnimatorEventListener: void onAnimationUpdate(ValueAnimator)>
<android.view.PointerIcon: PointerIcon loadCustomIcon(Resources,int)>
<android.media.MediaFocusControl: void dumpRCCStack(PrintWriter)>
<android.appwidget.AppWidgetHostView: View getDefaultView()>
<android.graphics.RadialGradient: Shader copy()>
<android.os.StrictMode.ViolationInfo: void writeToParcel(Parcel,int)>
<android.os.Parcel: void readArrayMapInternal(ArrayMap,int,ClassLoader)>
<android.view.ViewGroup: void handleFocusGainInternal(int,Rect)>
<android.media.MediaFocusControl: void unregisterMediaButtonIntent(PendingIntent)>
<android.content.res.Resources: ColorStateList loadColorStateList(TypedValue,int)>
<android.widget.DatePicker: void setCalendarViewShown(boolean)>
<android.text.SpannableStringBuilder: void drawTextRun(Canvas,int,int,int,int,float,float,int,Paint)>
<android.provider.Browser: void truncateHistory(ContentResolver)>
<android.os.RecoverySystem: void installPackage(Context,File)>
<android.graphics.Canvas: void drawPoint(float,float,Paint)>
<android.view.accessibility.CaptioningManager: void addCaptioningChangeListener(CaptioningChangeListener)>
<android.webkit.CookieManager: void flushCookieStore()>
<android.print.PrintManager: PrinterDiscoverySession createPrinterDiscoverySession()>
<android.print.PrintManager: List<PrintJob> getPrintJobs()>
<android.os.StrictMode: void decrementExpectedActivityCount(Class)>
<android.graphics.Bitmap: boolean nativeWriteToParcel(int,boolean,int,Parcel)>
<android.speech.srec.MicrophoneInputStream: int AudioRecordNew(int,int)>
<android.content.res.TypedArray: float getFloat(int,float)>
<android.app.Notification: void cloneInto(Notification,boolean)>
<android.appwidget.AppWidgetHost: AppWidgetHostView createView(Context,int,AppWidgetProviderInfo)>
<android.content.res.BridgeTypedArray: float getFraction(int,int,int,float)>
<android.os.Bundle: Serializable getSerializable(String)>
<android.view.MotionEvent.PointerCoords: void setAxisValue(int,float)>
<android.util.Log: int wtfStack(String,String)>
<android.os.Bundle: void putBooleanArray(String,boolean[])>
<com.android.internal.content.NativeLibraryHelper: boolean removeNativeBinariesLI(String)>
<android.graphics.drawable.ColorDrawable: int getColor()>
<android.transition.Transition: void animate(Animator)>
<android.content.res.BridgeTypedArray: int getResourceId(int,int)>
<android.media.MediaDrm: ProvisionRequest getProvisionRequest()>
<android.view.KeyEvent: int keyCodeFromString(String)>
<android.widget.CheckedTextView: void setCheckMarkDrawable(Drawable)>
<android.app.backup.BackupManager: int requestRestore(RestoreObserver)>
<android.os.BatteryStats: long getPhoneDataConnectionTime(int,long,int)>
<android.speech.srec.Recognizer: byte[] SR_RecognizerResultGetWaveform(int)>
<com.android.keyguard.KeyguardUpdateMonitor: void handleBootCompleted()>
<android.graphics.drawable.AnimationDrawable: void start()>
<android.graphics.Picture: int getHeight()>
<com.android.connectivitymanagertest.ConnectivityManagerTestBase: boolean waitForWifiState(int,long)>
<android.media.MediaRouter: void clearUserRoutes()>
<android.media.AudioTrack: void play()>
