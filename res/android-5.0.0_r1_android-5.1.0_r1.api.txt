<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: void showBouncerOrKeyguard()>
<com.android.internal.policy.impl.PhoneWindowManager: void applyPostLayoutPolicyLw(WindowState,LayoutParams)>
<android.widget.RadialTimePickerView: void setCurrentHour(int)>
<android.content.res.BridgeTypedArray: Drawable getDrawable(int)>
<android.webkit.WebSettings: void setBuiltInZoomControls(boolean)>
<android.content.res.Resources: Drawable loadDrawable(TypedValue,int,Theme)>
<android.telephony.ServiceState: void fillInNotifierBundle(Bundle)>
<android.webkit.WebSettings: void setLoadsImagesAutomatically(boolean)>
<com.android.server.NativeDaemonEvent: NativeDaemonEvent parseRawEvent(String)>
<com.android.systemui.statusbar.phone.PanelView: void startUnlockHintAnimationPhase1(Runnable)>
<com.android.systemui.recents.views.TaskStackViewScroller: void stopBoundScrollAnimation()>
<android.graphics.drawable.RippleDrawable: void tryBackgroundEnter()>
<android.webkit.WebView: void clearMatches()>
<com.android.server.wm.WindowState: boolean isOnScreen()>
<com.android.internal.policy.impl.PhoneWindow: boolean onKeyDownPanel(int,KeyEvent)>
<com.android.internal.util.XmlUtils: void writeValueXml(Object,String,XmlSerializer,WriteMapCallback)>
<android.graphics.drawable.Ripple: boolean draw(Canvas,Paint)>
<android.webkit.WebSettings: void setGeolocationEnabled(boolean)>
<com.android.systemui.recents.views.TaskViewHeader: void rebindToTask(Task)>
<android.media.AudioService: boolean registerAudioPolicy(AudioPolicyConfig,IBinder)>
<android.net.ConnectivityManager: boolean setProcessDefaultNetwork(Network)>
<android.view.Window: void setFlags(int,int)>
<android.media.session.MediaSession: void setPlaybackToRemote(VolumeProvider)>
<android.media.MediaFocusControl: void removeFocusStackEntry(String,boolean)>
<com.android.server.pm.UserManagerService: void initDefaultGuestRestrictions()>
<com.android.internal.widget.LockPatternUtils: void saveLockPassword(String,int,boolean)>
<com.android.systemui.recents.views.SystemBarScrimViews: void startExitRecentsAnimation()>
<android.app.Activity: void closeOptionsMenu()>
<android.webkit.CookieManager: boolean acceptCookie()>
<android.view.accessibility.AccessibilityNodeInfo: void initFromParcel(Parcel)>
<com.android.internal.policy.impl.PhoneWindowManager: int interceptKeyBeforeQueueing(KeyEvent,int)>
<android.widget.AbsListView.RecycleBin: void fillActiveViews(int,int)>
<android.widget.SearchView: void setInputType(int)>
<android.widget.AbsListView: void positionSelectorLikeTouch(int,View,float,float)>
<android.webkit.WebSettings: void setBlockNetworkLoads(boolean)>
<android.view.accessibility.AccessibilityNodeInfo: AccessibilityNodeInfo getLabeledBy()>
<android.webkit.WebSettings: String getDefaultTextEncodingName()>
<android.webkit.WebHistoryItem: WebHistoryItem clone()>
<android.os.BaseBundle: void putBoolean(String,boolean)>
<android.content.ContentProvider: void enforceReadPermissionInner(Uri)>
<com.android.systemui.recents.RecentsActivity: void updateRecentsTasks(Intent)>
<com.android.server.am.ActivityStack: boolean finishActivityLocked(ActivityRecord,int,Intent,String,boolean)>
<android.media.AudioService: boolean shouldVibrate(int)>
<com.android.systemui.recents.views.RecentsView: void startEnterRecentsAnimation(TaskViewEnterContext)>
<android.appwidget.AppWidgetHost: void deleteAppWidgetId(int)>
<android.provider.MediaStore.InternalThumbnails: Bitmap getThumbnail(ContentResolver,long,long,int,Options,Uri,boolean)>
<com.android.server.display.DisplayDevice: void dumpLocked(PrintWriter)>
<android.webkit.WebSettings: int getDefaultFixedFontSize()>
<com.android.internal.policy.impl.PhoneWindow: void onKeyUpPanel(int,KeyEvent)>
<android.webkit.WebSettings: void setLightTouchEnabled(boolean)>
<android.app.AppOpsManager: void resetAllModes()>
<android.media.AudioService: int checkSendBecomingNoisyIntent(int,int)>
<com.android.server.connectivity.Vpn: void addVpnUserLocked(int)>
<android.net.VpnService.Builder: Builder addRoute(String,int)>
<android.webkit.WebHistoryItem: String getOriginalUrl()>
<com.android.systemui.recents.views.TaskView: void setFocusedTask()>
<android.view.ViewGroup: boolean getChildVisibleRect(View,Rect,Point)>
<android.widget.SearchView: void updateVoiceButton(boolean)>
<android.telephony.ServiceState: String getOperatorNumeric()>
<android.graphics.drawable.RotateDrawable: void setPivotXRelative(boolean)>
<android.webkit.WebSettings: String getPluginsPath()>
<android.media.AudioManager: void requestAudioFocusForCall(int,int)>
<com.android.systemui.recents.views.RecentsView: void setTaskStacks(ArrayList<TaskStack>)>
<com.android.server.power.PowerManagerService: boolean updateDisplayPowerStateLocked(int)>
<android.net.wifi.WifiConfiguration: void writeToParcel(Parcel,int)>
<android.view.accessibility.AccessibilityNodeInfo: AccessibilityNodeInfo getLabelFor()>
<com.android.systemui.statusbar.SignalClusterView: void apply()>
<android.webkit.WebView: void onResume()>
<com.android.server.wm.WindowStateAnimator: boolean commitFinishDrawingLocked(long)>
<android.telephony.ServiceState: boolean getRoaming()>
<android.app.BackStackRecord: void configureTransitions(int,TransitionState,boolean,SparseArray<Fragment>,SparseArray<Fragment>)>
<com.android.internal.widget.LockPatternUtils: void deleteGallery()>
<android.webkit.WebSettings: void setCursiveFontFamily(String)>
<com.android.systemui.recents.views.TaskViewHeader: void startNoUserInteractionAnimation()>
<android.content.pm.RegisteredServicesCache: ServiceInfo<V> getServiceInfo(V,int)>
<android.media.AudioManager: void abandonAudioFocusForCall()>
<android.graphics.drawable.DrawableContainer.DrawableContainerState.ConstantStateFuture: Drawable get(DrawableContainerState)>
<android.webkit.WebSettings: void setUseDoubleTree(boolean)>
<android.hardware.SensorManager: boolean registerListenerImpl(SensorEventListener,Sensor,int,Handler,int,int)>
<com.android.systemui.recents.views.TaskView: void dismissTask()>
<android.content.ContentProviderClient: ParcelFileDescriptor openFile(Uri,String,CancellationSignal)>
<com.android.internal.policy.impl.PhoneWindowManager: void removeStartingWindow(IBinder,View)>
<android.net.ConnectivityManager: boolean getMobileDataEnabled()>
<android.content.res.Resources: void updateConfiguration(Configuration,DisplayMetrics,CompatibilityInfo)>
<com.android.systemui.recents.RecentsActivity: boolean dismissRecentsToFocusedTaskOrHome(boolean)>
<android.webkit.WebIconDatabase: void requestIconForPageUrl(String,IconListener)>
<android.webkit.WebBackForwardList: WebBackForwardList clone()>
<android.webkit.WebSettings: void setJavaScriptCanOpenWindowsAutomatically(boolean)>
<com.android.server.wm.WindowManagerService: int handleAppTransitionReadyLocked(WindowList)>
<android.media.AudioManager: void registerAudioPortUpdateListener(OnAudioPortUpdateListener)>
<android.graphics.drawable.RippleDrawable: void tryRippleEnter()>
<android.hardware.camera2.legacy.SurfaceTextureRenderer: void drawIntoSurfaces(CaptureCollector)>
<android.view.accessibility.AccessibilityNodeInfo: AccessibilityNodeInfo getParent()>
<android.view.DisplayInfo: String toString()>
<android.bluetooth.BluetoothAdapter: BluetoothLeAdvertiser getBluetoothLeAdvertiser()>
<android.webkit.WebViewDatabase: void clearUsernamePassword()>
<android.widget.RadialTimePickerView: int getCurrentHour()>
<com.android.internal.policy.impl.PhoneWindowManager: void systemReady()>
<android.webkit.WebSettings: void setUserAgentString(String)>
<com.android.server.power.PowerManagerService: void lowLevelReboot(String)>
<android.media.AudioManager: int getRingerMode()>
<android.net.ConnectivityManager: int stopUsingNetworkFeature(int,String)>
<android.animation.ValueAnimator: boolean animationFrame(long)>
<android.webkit.WebSettings: void setAppCacheEnabled(boolean)>
<com.android.systemui.recents.views.TaskView: void startLaunchTaskAnimation(Runnable,boolean,boolean,boolean)>
<android.graphics.Canvas: int saveLayer(float,float,float,float,Paint,int)>
<android.webkit.WebIconDatabase: void retainIconForPageUrl(String)>
<android.webkit.WebSettings: void setFixedFontFamily(String)>
<com.android.systemui.recents.views.TaskView: void prepareEnterRecentsAnimation(boolean,boolean,int)>
<android.util.PathParser: void extract(String,int,ExtractFloatResult)>
<android.webkit.WebSettings: String getUserAgentString()>
<android.os.AsyncTask: void publishProgress(Progress)>
<com.android.layoutlib.bridge.impl.RenderSessionImpl: void setupTabHost(TabHost,IProjectCallback)>
<android.webkit.WebSettings: boolean getMediaPlaybackRequiresUserGesture()>
<android.animation.ValueAnimator: boolean doAnimationFrame(long)>
<com.android.server.net.NetworkStatsRecorder: NetworkStatsCollection getOrLoadCompleteLocked()>
<com.android.systemui.statusbar.ExpandableNotificationRow: boolean isClearable()>
<com.android.systemui.recents.views.TaskView: void setDim(int)>
<com.android.layoutlib.bridge.Bridge: Integer getResourceId(ResourceType,String)>
<android.bluetooth.BluetoothGattCharacteristic: String getStringValue(int)>
<android.webkit.CookieManager: boolean acceptThirdPartyCookies(WebView)>
<android.webkit.WebView: HitTestResult getHitTestResult()>
<android.media.tv.TvInputManager.Session: void selectTrack(int,String)>
<android.webkit.WebView: void setNetworkAvailable(boolean)>
<com.android.internal.policy.impl.GlobalKeyManager: boolean handleGlobalKey(Context,int,KeyEvent)>
<android.telephony.SubscriptionManager: boolean allDefaultsSelected()>
<com.android.server.wm.DragState: void register(Display)>
<com.android.internal.widget.LockPatternUtils: void setLockPatternEnabled(boolean)>
<android.webkit.WebSettings: boolean getDomStorageEnabled()>
<android.telephony.SubscriptionManager: boolean isValidPhoneId(int)>
<com.android.server.power.PowerManagerService: void updateWakeLockSummaryLocked(int)>
<android.view.Surface: void unlockCanvasAndPost(Canvas)>
<android.widget.SearchView: void onActionViewExpanded()>
<android.provider.DocumentsProvider: Bundle call(String,String,Bundle)>
<android.webkit.WebViewDatabase: void clearHttpAuthUsernamePassword()>
<android.webkit.WebSettings: void setUserAgent(int)>
<android.webkit.WebBackForwardList: int getSize()>
<android.view.ViewTreeObserver: void merge(ViewTreeObserver)>
<com.android.internal.os.ZygoteInit: void preloadClasses()>
<android.widget.TextClock: boolean is24HourModeEnabled()>
<android.media.AudioManager: boolean isValidRingerMode(int)>
<android.widget.DayPickerView: boolean goTo(Calendar,boolean,boolean,boolean)>
<android.webkit.WebIconDatabase: void close()>
<android.view.accessibility.AccessibilityNodeInfo: void clear()>
<android.webkit.WebSettings: String getFantasyFontFamily()>
<com.android.server.hdmi.HdmiCecKeycode: boolean isSupportedKeycode(int)>
<com.android.server.display.LogicalDisplay: void updateLocked(List<DisplayDevice>)>
<android.telephony.SignalStrength: int getLteLevel()>
<android.widget.SearchView: void onActionViewCollapsed()>
<android.app.Dialog: void invalidateOptionsMenu()>
<com.android.server.am.ActivityStack: boolean destroyActivityLocked(ActivityRecord,boolean,String)>
<android.media.audiofx.AudioEffect: boolean isEffectTypeAvailable(UUID)>
<android.telephony.SubscriptionManager: long getDefaultSubId()>
<android.telephony.SubscriptionManager: long[] getSubId(int)>
<android.animation.StateListAnimator: void addState(int[],Animator)>
<com.android.systemui.recents.model.RecentsPackageMonitor: void unregister()>
<android.webkit.WebSettings: void setGeolocationDatabasePath(String)>
<android.content.pm.PackageManagerTests: void testReplaceMatchSomeCerts2()>
<android.content.pm.PackageManagerTests: void testReplaceMatchSomeCerts1()>
<android.widget.SearchView: boolean onKeyDown(int,KeyEvent)>
<com.android.systemui.recents.model.RecentsTaskLoader: Drawable getAndUpdateActivityIcon(TaskKey,TaskDescription,SystemServicesProxy,Resources,ActivityInfoHandle,boolean)>
<com.android.systemui.recents.AlternateRecentsComponent: void startAlternateRecentsActivity(RunningTaskInfo,ActivityOptions,String)>
<com.android.server.usb.UsbHostManager: void usbDeviceRemoved(String)>
<android.app.ActivityOptions: Bundle toBundle()>
<android.graphics.drawable.RippleBackground: void cancelHardwareAnimations(boolean)>
<com.android.internal.policy.impl.PhoneWindowManager: int prepareAddWindowLw(WindowState,LayoutParams)>
<android.graphics.drawable.RippleBackground: void exit()>
<android.widget.OverScroller.SplineOverScroller: boolean update()>
<android.webkit.WebSettings: void setDefaultFontSize(int)>
<android.graphics.drawable.InsetDrawable: void setLayoutDirection(int)>
<android.webkit.WebSettings: String getFixedFontFamily()>
<com.android.systemui.recents.AlternateRecentsComponent: void toggleRecentsActivity()>
<com.android.systemui.volume.ZenModePanel: void setRequestingConditions(boolean)>
<android.view.ViewRootImpl: boolean drawSoftware(Surface,AttachInfo,int,int,boolean,Rect)>
<android.graphics.drawable.Ripple: void cancel()>
<android.nfc.NfcActivityManager: BeamShareData createBeamShareData()>
<com.android.server.connectivity.Tethering: void sendTetherStateChangedBroadcast()>
<android.webkit.WebSettings: void setPluginState(PluginState)>
<com.android.internal.widget.LockPatternUtils: boolean savedPasswordExists()>
<android.view.SurfaceView: void updateWindow(boolean,boolean)>
<android.view.ViewRootImpl: void setView(View,LayoutParams,View)>
<android.webkit.WebSettings: void setDatabaseEnabled(boolean)>
<android.webkit.WebSettings: int getMinimumLogicalFontSize()>
<android.webkit.WebSettings: void setNavDump(boolean)>
<android.media.Image: void setCropRect(Rect)>
<android.app.Notification.Action.WearableExtender: Builder extend(Builder)>
<android.webkit.WebSettings: String getSansSerifFontFamily()>
<android.webkit.WebView: void removeJavascriptInterface(String)>
<android.webkit.WebSettings: void setLoadWithOverviewMode(boolean)>
<android.webkit.WebSettings: void setSupportZoom(boolean)>
<android.media.tv.TvInputManager.Session: void tune(Uri)>
<android.app.backup.WallpaperBackupHelper: void restoreEntity(BackupDataInputStream)>
<com.android.systemui.recents.views.TaskView: void resetViewProperties()>
<com.android.systemui.recents.views.TaskStackViewLayoutAlgorithm: void computeMinMaxScroll(ArrayList<Task>,boolean,boolean)>
<com.android.systemui.recents.views.TaskView: int getDim()>
<com.android.systemui.recents.views.RecentsView: void startExitToHomeAnimation(TaskViewExitContext)>
<android.webkit.WebView: void setCertificate(SslCertificate)>
<android.view.accessibility.AccessibilityNodeInfo: void writeToParcel(Parcel,int)>
<android.widget.SearchView: void clearFocus()>
<android.webkit.WebView: void findAllAsync(String)>
<com.android.server.power.PowerManagerService: void updateSuspendBlockerLocked()>
<com.android.internal.widget.ExploreByTouchHelper: AccessibilityNodeInfo createNodeForChild(int)>
<android.os.Debug.MemoryInfo: String getOtherLabel(int)>
<android.graphics.drawable.InsetDrawable: Insets getOpticalInsets()>
<android.webkit.WebSettings: int getUserAgent()>
<com.android.systemui.statusbar.stack.StackScrollState: void apply()>
<com.android.systemui.recents.views.TaskStackView: void focusTask(int,boolean)>
<com.android.internal.policy.impl.PhoneWindowManager: int finishPostLayoutPolicyLw()>
<android.webkit.WebSettings: void setDatabasePath(String)>
<android.app.Dialog: void openOptionsMenu()>
<com.android.systemui.recents.views.TaskView: void unsetFocusedTask()>
<android.webkit.CookieManager: void removeExpiredCookie()>
<com.android.server.power.PowerManagerService: boolean needDisplaySuspendBlockerLocked()>
<android.hardware.camera2.params.StreamConfigurationMap: int getPublicFormatCount(boolean)>
<android.graphics.drawable.InsetDrawable: Drawable getDrawable()>
<android.webkit.WebSettings: void setUseWebViewBackgroundForOverscrollBackground(boolean)>
<android.media.AudioService: void setStreamMute(int,boolean,IBinder)>
<com.android.layoutlib.bridge.impl.ResourceHelper: Drawable getDrawable(ResourceValue,BridgeContext)>
<android.graphics.drawable.ClipDrawable: void setLayoutDirection(int)>
<android.webkit.WebSettings: void setDefaultFixedFontSize(int)>
<android.webkit.WebSettings: boolean enableSmoothTransition()>
<com.android.server.display.LogicalDisplay: DisplayInfo getDisplayInfoLocked()>
<android.media.AudioTrack: int setPlaybackHeadPosition(int)>
<android.net.NetworkTemplate: boolean matchesMobile(NetworkIdentity)>
<android.widget.AbsListView: boolean shouldShowSelector()>
<android.view.ViewGroup: void removeAllViewsInLayout()>
<android.app.Activity: boolean onKeyDown(int,KeyEvent)>
<com.android.systemui.screenshot.ScreenshotTest: void testScreenshot()>
<android.media.AudioRecord: void audioParamCheck(int,int,int)>
<android.graphics.drawable.ScaleDrawable: Drawable getDrawable()>
<android.webkit.WebBackForwardList: WebHistoryItem getItemAtIndex(int)>
<android.app.BackStackRecord: ArrayList<View> addTransitionTargets(TransitionState,Transition,Transition,Transition,View,Fragment,Fragment,ArrayList<View>,boolean,ArrayList<View>)>
<android.webkit.WebSettings: boolean supportZoom()>
<com.android.internal.widget.LockPatternUtils: boolean isLockPatternEnabled()>
<com.android.layoutlib.bridge.intensive.Main: void testRendering()>
<android.media.AudioManager: void forceVolumeControlStream(int)>
<android.telephony.ServiceState: void setFromNotifierBundle(Bundle)>
<android.webkit.WebHistoryItem: int getId()>
<android.media.AudioService: void adjustMasterVolume(int,int,String)>
<com.android.server.wm.WindowManagerService: void performLayoutAndPlaceSurfacesLockedInner(boolean)>
<android.appwidget.AppWidgetHost: void startAppWidgetConfigureActivityForResult(Activity,int,int,int,Bundle)>
<com.android.server.media.MediaSessionRecord: void adjustVolume(int,int,String,int,boolean)>
<android.app.ActivityOptions: void update(ActivityOptions)>
<android.net.Network: URLConnection openConnection(URL)>
<android.webkit.WebView: int findAll(String)>
<android.graphics.drawable.Ripple: void cancelHardwareAnimations(boolean)>
<com.android.systemui.statusbar.ExpandableNotificationRow: void reset()>
<android.webkit.WebHistoryItem: Bitmap getFavicon()>
<android.webkit.CookieManager: void setAcceptCookie(boolean)>
<android.widget.DayPickerView: boolean performAccessibilityAction(int,Bundle)>
<com.android.server.pm.Settings: void transferPermissionsLPw(String,String)>
<android.animation.PropertyValuesHolder: void setupStartValue(Object)>
<android.widget.ProgressBar: void applyProgressBackgroundTint()>
<com.android.server.connectivity.NetworkMonitor: int isCaptivePortal()>
<android.view.HardwareRenderer: void pauseSurface(Surface)>
<com.android.systemui.recents.views.TaskViewHeader: void startLaunchTaskDismissAnimation()>
<android.widget.SearchView: int getInputType()>
<android.media.AudioService: void sendMasterVolumeUpdate(int,int,int)>
<com.android.internal.telephony.CallerInfo: CallerInfo markAsVoiceMail(long)>
<com.android.internal.policy.impl.PhoneWindowManager: int interceptMotionBeforeQueueingNonInteractive(long,int)>
<com.android.server.backup.PackageManagerBackupAgent: void parseStateFile(ParcelFileDescriptor)>
<android.webkit.WebHistoryItem: String getUrl()>
<android.webkit.WebView: WebBackForwardList saveState(Bundle)>
<android.webkit.WebSettings: void setJavaScriptEnabled(boolean)>
<com.android.internal.policy.impl.PhoneWindowManager: int windowTypeToLayerLw(int)>
<android.content.pm.PackageManagerTests: void testReplaceMatchMoreCertsReplaceSomeCerts()>
<android.media.AudioManager: void handleKeyUp(KeyEvent,int)>
<android.webkit.WebSettings: boolean getNavDump()>
<android.app.SharedElementCallback: Parcelable onCaptureSharedElementSnapshot(View,Matrix,RectF)>
<com.android.internal.policy.impl.PhoneWindowManager: void init(Context,IWindowManager,WindowManagerFuncs)>
<android.webkit.WebSettings: void setNeedInitialFocus(boolean)>
<android.media.AudioService: void sendVolumeUpdate(int,int,int,int)>
<android.media.AudioTrack: int setLoopPoints(int,int,int)>
<com.android.internal.policy.impl.PhoneWindowManager: void notifyLidSwitchChanged(long,boolean)>
<android.webkit.WebViewDatabase: boolean hasFormData()>
<com.android.systemui.recents.model.RecentsTaskLoader: void onTrimMemory(int)>
<android.webkit.WebSettings: void setFantasyFontFamily(String)>
<com.android.internal.policy.impl.PhoneWindowManager: void launchHomeFromHotKey()>
<com.android.server.usb.UsbHostManager: void endUsbDeviceAdded()>
<android.graphics.drawable.Drawable: Drawable createFromXmlInner(Resources,XmlPullParser,AttributeSet,Theme)>
<android.webkit.CookieManager: void removeSessionCookies(ValueCallback<Boolean>)>
<android.telephony.SubscriptionManager: int getPhoneId(long)>
<android.widget.DayPickerView: void onInitializeAccessibilityNodeInfo(AccessibilityNodeInfo)>
<android.telephony.PhoneNumberUtils: String cdmaCheckAndProcessPlusCodeForSms(String)>
<android.webkit.WebSettings: boolean getBlockNetworkLoads()>
<android.media.AudioManager: int abandonAudioFocus(OnAudioFocusChangeListener)>
<com.android.server.power.PowerManagerService: void updateUserActivitySummaryLocked(long,int)>
<android.widget.SearchView: boolean onSuggestionsKey(View,int,KeyEvent)>
<android.animation.ValueAnimator: void setCurrentPlayTime(long)>
<com.android.systemui.statusbar.DragDownHelper.DragDownCallback: boolean onDraggedDown(View)>
<android.content.res.Resources: Drawable getDrawableForDensity(int,int,Theme)>
<com.android.systemui.recents.AlternateRecentsComponent: void reloadHeaderBarLayout()>
<android.webkit.WebSettings: void setSaveFormData(boolean)>
<android.webkit.WebSettings: boolean getAllowFileAccess()>
<android.widget.AbsListView: boolean trackMotionScroll(int,int)>
<android.webkit.WebSettings: void setRenderPriority(RenderPriority)>
<android.webkit.WebSettings: boolean getAcceptThirdPartyCookies()>
<android.util.PathParser: Path createPathFromPathData(String)>
<android.widget.AbsListView: void positionSelectorLikeFocus(int,View)>
<android.bluetooth.BluetoothGatt: boolean writeDescriptor(BluetoothGattDescriptor)>
<android.media.projection.MediaProjection: void registerCallback(Callback,Handler)>
<android.webkit.CookieManager: void setAcceptFileSchemeCookiesImpl(boolean)>
<com.android.systemui.recents.views.TaskStackViewLayoutAlgorithm: float getStackScrollForTask(Task)>
<android.webkit.WebIconDatabase: void removeAllIcons()>
<android.widget.SearchView: void updateSearchAutoComplete()>
<android.graphics.drawable.RippleDrawable: void clearHotspots()>
<android.widget.SearchView: boolean requestFocus(int,Rect)>
<android.content.pm.PackageManagerTests: void testReplaceMatchNoCerts1()>
<com.android.systemui.recents.views.TaskStackView: void onMeasure(int,int)>
<com.android.server.TextServicesManagerService: SpellCheckerInfo getCurrentSpellChecker(String)>
<android.content.pm.PackageManagerTests: void testReplaceMatchNoCerts2()>
<android.webkit.WebView: boolean showFindDialog(String,boolean)>
<android.webkit.WebSettings: void setBlockNetworkImage(boolean)>
<android.webkit.WebSettings: boolean getSavePassword()>
<android.webkit.WebSettings: void setStandardFontFamily(String)>
<android.telephony.PhoneNumberUtils: String normalizeNumber(String)>
<android.webkit.WebSettings: boolean getUseDoubleTree()>
<android.webkit.CookieManager: void setAcceptThirdPartyCookies(WebView,boolean)>
<android.webkit.WebSettings: void setMediaPlaybackRequiresUserGesture(boolean)>
<android.renderscript.Allocation: void copyTo(Object)>
<android.webkit.WebSettings: void setDefaultZoom(ZoomDensity)>
<android.view.ViewGroup: boolean isTransformedTouchPointInView(float,float,View,PointF)>
<android.media.AudioService: int checkForRingerModeChange(int,int,int)>
<android.bluetooth.BluetoothHeadset: void close()>
<android.telephony.SubscriptionManager: int getDefaultSmsPhoneId()>
<android.content.ContentProvider: void enforceWritePermissionInner(Uri)>
<android.bluetooth.BluetoothAdapter: IBluetooth getBluetoothService(IBluetoothManagerCallback)>
<android.view.ViewGroup: void resolveDrawables()>
<android.webkit.WebSettings: void setMinimumLogicalFontSize(int)>
<android.telephony.ServiceState: String getOperatorAlphaShort()>
<android.media.audiopolicy.AudioMixingRule.Builder: AudioMixingRule build()>
<android.telephony.PhoneNumberUtils: boolean isLocalEmergencyNumber(Context,long,String)>
<android.appwidget.AppWidgetHost: int allocateAppWidgetId()>
<android.graphics.drawable.RippleBackground: void cancel()>
<android.hardware.camera2.params.StreamConfigurationMap: int[] getPublicFormats(boolean)>
<android.webkit.CookieManager: boolean allowFileSchemeCookiesImpl()>
<com.android.server.power.PowerManagerService: boolean goToSleepNoUpdateLocked(long,int,int,int)>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: void hide(long,long)>
<android.webkit.WebSettings: String getSerifFontFamily()>
<android.webkit.WebView: WebBackForwardList restoreState(Bundle)>
<com.android.systemui.statusbar.phone.PanelView: boolean onEmptySpaceClick(float)>
<android.net.StaticIpConfiguration: LinkProperties toLinkProperties(String)>
<com.android.layoutlib.bridge.impl.RenderSessionImpl: Result inflate()>
<android.webkit.WebSettings: int getMinimumFontSize()>
<android.app.Activity: void openOptionsMenu()>
<android.telephony.PhoneNumberUtils: String cdmaCheckAndProcessPlusCode(String)>
<com.android.systemui.recents.views.RecentsView: void focusNextTask(boolean)>
<com.android.server.display.OverlayDisplayAdapter.OverlayDisplayHandle: void onWindowCreated(SurfaceTexture,float,long,int)>
<android.app.Notification.Builder: void processSmallIconAsLarge(int,RemoteViews)>
<com.android.layoutlib.bridge.util.DynamicIdMap: Integer getId(Pair<ResourceType, String>)>
<android.app.Activity: void closeContextMenu()>
<android.renderscript.ScriptIntrinsicHistogram: void forEach_Dot(Allocation,LaunchOptions)>
<android.webkit.WebSettings: LayoutAlgorithm getLayoutAlgorithm()>
<android.net.ConnectivityManager: int startUsingNetworkFeature(int,String)>
<android.app.Notification.Builder: void processSmallRightIcon(int,RemoteViews)>
<android.webkit.WebSettings: void setCacheMode(int)>
<android.webkit.WebSettings: void setLayoutAlgorithm(LayoutAlgorithm)>
<android.widget.ProgressBar: void applySecondaryProgressTint()>
<android.app.SharedElementCallback: View onCreateSnapshotView(Context,Parcelable)>
<com.android.server.media.MediaSessionService.SessionManagerImpl: void dispatchMediaKeyEvent(KeyEvent,boolean)>
<android.webkit.WebSettings: boolean getBuiltInZoomControls()>
<android.webkit.WebView: boolean restorePicture(Bundle,File)>
<android.webkit.WebSettings: void setTextZoom(int)>
<com.android.systemui.statusbar.stack.StackScrollAlgorithm: void updateZValuesForState(StackScrollState,StackScrollAlgorithmState)>
<android.webkit.WebSettings: void setMinimumFontSize(int)>
<com.android.server.usb.UsbHostManager: boolean beginUsbDeviceAdded(String,int,int,int,int,int,String,String,String)>
<android.webkit.WebView: void findNext(boolean)>
<android.animation.PropertyValuesHolder: void setupEndValue(Object)>
<com.android.systemui.recents.views.TaskViewThumbnail: void rebindToTask(Task)>
<android.webkit.WebSettings: boolean getLightTouchEnabled()>
<android.os.Parcel: void unmarshall(byte[],int,int)>
<android.webkit.WebView: boolean savePicture(Bundle,File)>
<com.android.systemui.recents.views.TaskStackViewTouchHandler: boolean onTouchEvent(MotionEvent)>
<android.graphics.Bitmap: void recycle()>
<android.webkit.WebSettings: boolean getJavaScriptCanOpenWindowsAutomatically()>
<android.appwidget.AppWidgetHost: void stopListening()>
<com.android.server.power.PowerManagerService: void updatePowerStateLocked()>
<com.android.internal.widget.ExploreByTouchHelper: boolean intersectVisibleToUser(Rect)>
<android.media.MediaFocusControl: void dumpFocusStack(PrintWriter)>
<android.bluetooth.BluetoothAdapter: void removeServiceStateCallback(IBluetoothManagerCallback)>
<android.webkit.WebView: void onPause()>
<com.android.server.connectivity.Vpn: boolean prepare(String,String)>
<android.media.AudioService: void handleConfigurationChanged(Context)>
<com.android.keyguard.KeyguardViewBase: void onResume()>
<android.view.ViewGroup: boolean dispatchTouchEvent(MotionEvent)>
<android.content.pm.RegisteredServicesCache: Collection<ServiceInfo<V>> getAllServices(int)>
<android.net.NetworkTemplate: boolean matches(NetworkIdentity)>
<android.media.AudioService: boolean isStreamMute(int)>
<android.webkit.CookieManager: void removeSessionCookie()>
<android.webkit.WebSettings: void setPluginsEnabled(boolean)>
<android.webkit.CookieManager: void setCookie(String,String,ValueCallback<Boolean>)>
<android.webkit.WebSettings: boolean getPluginsEnabled()>
<android.webkit.WebSettings: void setAcceptThirdPartyCookies(boolean)>
<android.webkit.WebSettings: String getCursiveFontFamily()>
<android.animation.PropertyValuesHolder: Method setupSetterOrGetter(Class,HashMap<Class, HashMap<String, Method>>,String,Class)>
<com.android.server.wm.WindowState: boolean isVisibleNow()>
<com.android.server.am.ActivityStack: void completeResumeLocked(ActivityRecord)>
<android.webkit.WebViewDatabase: void clearFormData()>
<com.android.internal.app.ResolverActivity: Intent getReplacementIntent(String,Intent)>
<android.widget.DayPickerView: void setUpListView()>
<android.webkit.WebSettings: void setAppCacheMaxSize(long)>
<android.webkit.WebSettings: void setAllowContentAccess(boolean)>
<com.android.internal.telephony.CallerInfoAsyncQuery: CallerInfoAsyncQuery startQuery(int,Context,Uri,OnQueryCompleteListener,Object)>
<android.appwidget.AppWidgetHost: void startListening()>
<android.app.Activity: void invalidateOptionsMenu()>
<com.android.systemui.recents.model.TaskStack: void setTasks(List<Task>)>
<android.webkit.WebSettings: void setSupportMultipleWindows(boolean)>
<android.widget.SearchView: void rewriteQueryFromSuggestion(int)>
<com.android.systemui.recents.views.TaskStackView: void onFirstLayout()>
<com.android.systemui.recents.views.TaskView: void setClipViewInStack(boolean)>
<android.content.pm.ParceledListSlice: void writeToParcel(Parcel,int)>
<android.webkit.WebView: void postUrl(String,byte[])>
<com.android.systemui.recents.views.TaskStackViewScroller: void animateScroll(float,float,Runnable)>
<android.webkit.WebSettings: void setSerifFontFamily(String)>
<android.graphics.drawable.RippleBackground: boolean draw(Canvas,Paint)>
<com.android.systemui.recents.views.SystemBarScrimViews: void startEnterRecentsAnimation()>
<com.android.internal.policy.impl.PhoneWindowManager: long interceptKeyBeforeDispatching(WindowState,KeyEvent,int)>
<com.android.server.SystemServer: void startBootstrapServices()>
<android.widget.ImageView: void animateTransform(Matrix)>
<android.graphics.drawable.GradientDrawable: void updateStateFromTypedArray(TypedArray)>
<android.text.TextLine: TextLine recycle(TextLine)>
<android.webkit.WebSettings: int getCacheMode()>
<android.webkit.WebHistoryItem: String getTitle()>
<android.os.Debug: long getPss()>
<android.widget.PopupWindow: void setContentView(View)>
<android.app.ApplicationPackageManager: Drawable loadItemIcon(PackageItemInfo,ApplicationInfo)>
<android.webkit.WebSettings: int getTextZoom()>
<android.telephony.PhoneNumberUtils: boolean isEmergencyNumberInternal(long,String,boolean)>
<android.media.AudioService: void setMasterMute(boolean,int,String,IBinder)>
<android.webkit.WebSettings: boolean getUseWideViewPort()>
<android.net.Network: void bindSocket(Socket)>
<com.android.server.wm.WindowStateAnimator: boolean applyAnimationLocked(int,boolean)>
<android.webkit.WebSettings: void setSavePassword(boolean)>
<com.android.systemui.recents.views.TaskStackView: void startEnterRecentsAnimation(TaskViewEnterContext)>
<android.webkit.WebSettings: ZoomDensity getDefaultZoom()>
<com.android.server.wm.InputMonitor: void updateInputWindowsLw(boolean)>
<android.media.AudioService: int requestAudioFocus(int,int,IBinder,IAudioFocusDispatcher,String,String)>
<android.animation.ValueAnimator: void reverse()>
<android.bluetooth.BluetoothGatt: boolean writeCharacteristic(BluetoothGattCharacteristic)>
<android.webkit.WebIconDatabase: void releaseIconForPageUrl(String)>
<com.android.systemui.recents.views.TaskView: void enableFocusAnimations()>
<android.media.AudioService: void setStreamSolo(int,boolean,IBinder)>
<android.webkit.WebSettings: boolean getJavaScriptEnabled()>
<android.telephony.SubscriptionManager: void setDefaultSmsSubId(long)>
<android.webkit.WebSettings: void setDefaultTextEncodingName(String)>
<com.android.systemui.recents.views.TaskViewHeader: void onTaskViewFocusChanged(boolean)>
<com.android.systemui.recents.views.TaskStackView: void onLayout(boolean,int,int,int,int)>
<com.android.server.wm.WindowManagerService: Bitmap screenshotApplications(IBinder,int,int,int,boolean)>
<com.android.server.net.LockdownVpnTracker: void handleStateChangedLocked()>
<android.content.pm.PackageManagerTests: void testReplaceMatchMoreCerts()>
<android.telephony.DisconnectCause: String toString(int)>
<com.android.server.wm.WindowStateAnimator: boolean stepAnimationLocked(long)>
<com.android.layoutlib.bridge.impl.RenderSessionImpl: ActionBarLayout createActionBar(BridgeContext,SessionParams)>
<android.telephony.SubscriptionManager: int getDefaultDataPhoneId()>
<android.webkit.WebView: void setPictureListener(PictureListener)>
<com.android.server.power.PowerManagerService: boolean isBeingKeptAwakeLocked()>
<android.media.session.MediaSession: void notifyRemoteVolumeChanged(VolumeProvider)>
<android.widget.ImageView: void setImageResource(int)>
<android.widget.SimpleMonthAdapter: void setSelectedDay(Calendar)>
<android.webkit.WebSettings: String getDatabasePath()>
<android.webkit.WebSettings: boolean getDisplayZoomControls()>
<com.android.server.SystemServer: void startOtherServices()>
<android.provider.Settings.Secure: boolean setLocationModeForUser(ContentResolver,int,int)>
<android.webkit.WebSettings: boolean getLoadWithOverviewMode()>
<com.android.server.SystemServer: void startCoreServices()>
<android.webkit.WebSettings: void setAppCachePath(String)>
<android.app.Dialog: void closeOptionsMenu()>
<android.os.BaseBundle: boolean[] getBooleanArray(String)>
<android.media.AudioManager: void handleKeyDown(KeyEvent,int)>
<android.graphics.drawable.InsetDrawable: void getHotspotBounds(Rect)>
<android.media.MediaCodecInfo.VideoCapabilities: boolean supportsFormat(MediaFormat)>
<android.webkit.WebSettings: boolean getUseWebViewBackgroundForOverscrollBackground()>
<android.webkit.WebView: void freeMemory()>
<android.media.tv.TvInputManager.Session: String getSelectedTrack(int)>
<android.text.StaticLayout: void generate(CharSequence,int,int,TextPaint,int,TextDirectionHeuristic,float,float,boolean,boolean,float,TruncateAt)>
<android.webkit.WebViewDatabase: boolean hasHttpAuthUsernamePassword()>
<android.telephony.SubscriptionManager: long getDefaultVoiceSubId()>
<com.android.systemui.volume.VolumePanel: void updateSlider(StreamControl)>
<android.content.Intent: void prepareToEnterProcess()>
<android.webkit.WebViewDatabase: boolean hasUsernamePassword()>
<com.android.systemui.recents.model.RecentsPackageMonitor: void register(Context,PackageCallbacks)>
<android.appwidget.AppWidgetHost: void deleteHost()>
<android.app.Notification.BigPictureStyle: void restoreFromExtras(Bundle)>
<com.android.server.am.ActivityStack: boolean moveTaskToBackLocked(int,ActivityRecord)>
<android.telephony.ServiceState: String getOperatorAlphaLong()>
<android.bluetooth.BluetoothDevice: boolean isConnected()>
<com.android.systemui.statusbar.phone.StatusBarWindowManager: void add(View,int)>
<com.android.systemui.recents.RecentsConfiguration: void updateOnConfigurationChange()>
<com.android.systemui.recents.RecentsActivity: void onCreate(Bundle)>
<android.appwidget.AppWidgetHost: int[] getAppWidgetIds()>
<com.android.internal.os.ZygoteConnection: void applyInvokeWithSystemProperty(Arguments)>
<com.android.systemui.recents.views.TaskView: void onTaskBound(Task)>
<android.accessibilityservice.AccessibilityService: IBinder onBind(Intent)>
<android.app.Notification.WearableExtender: Builder extend(Builder)>
<android.webkit.WebBackForwardList: WebHistoryItem getCurrentItem()>
<com.android.systemui.recents.views.TaskStackViewTouchHandler: boolean onInterceptTouchEvent(MotionEvent)>
<android.telephony.ServiceState: void setOperatorAlphaLong(String)>
<com.android.internal.policy.impl.PhoneWindowManager: void showBootMessage(CharSequence,boolean)>
<android.content.res.Configuration: String resourceQualifierString(Configuration)>
<com.android.layoutlib.bridge.Bridge: Pair<ResourceType, String> resolveResourceId(int)>
<android.webkit.WebSettings: void setUseWideViewPort(boolean)>
<com.android.server.accounts.AccountManagerService: void validateAccountsInternal(UserAccounts,boolean)>
<com.android.server.backup.PackageManagerBackupAgent: void onBackup(ParcelFileDescriptor,BackupDataOutput,ParcelFileDescriptor)>
<android.content.res.ColorStateList: ColorStateList addFirstIfMissing(ColorStateList,int,int)>
<android.webkit.WebSettings: boolean getLoadsImagesAutomatically()>
<android.webkit.WebSettings: boolean getAllowContentAccess()>
<android.webkit.WebBackForwardList: int getCurrentIndex()>
<com.android.systemui.statusbar.phone.SecureCameraLaunchManager: void onSwipingStarted()>
<com.android.internal.widget.LockPatternUtils: boolean usingBiometricWeak()>
<android.webkit.WebSettings: void setAllowFileAccess(boolean)>
<android.net.RssiCurve: byte lookupScore(int)>
<com.android.server.wm.AppTransition: Animation createAspectScaledThumbnailEnterExitAnimationLocked(int,int,int,int,int,Rect,Rect,boolean)>
<android.graphics.drawable.RotateDrawable: void setPivotYRelative(boolean)>
<com.android.server.TextServicesManagerService: boolean calledFromValidUser()>
<android.telephony.SubscriptionManager: long getDefaultDataSubId()>
<com.android.systemui.recents.views.TaskView: boolean shouldClipViewInStack()>
<android.webkit.WebSettings: boolean supportMultipleWindows()>
<com.android.server.location.GpsLocationProvider: void setEngineCapabilities(int)>
<com.android.internal.widget.LockPatternUtils: boolean savedPatternExists()>
<android.telephony.SubscriptionManager: void putPhoneIdAndSubIdExtra(Intent,int)>
<android.widget.Switch: boolean hitThumb(float,float)>
<android.webkit.WebSettings: int getDefaultFontSize()>
<android.hardware.camera2.DngCreator: ByteBuffer convertToRGB(Image)>
<android.widget.SearchView: void setSearchableInfo(SearchableInfo)>
<android.app.ContextImpl: File[] ensureDirsExistOrFilter(File[])>
<android.webkit.WebIconDatabase: void bulkRequestIconForPageUrl(ContentResolver,String,IconListener)>
<android.widget.SearchView: CharSequence getQuery()>
<android.webkit.CookieManager: void removeAllCookie()>
<android.media.tv.TvInputManager.Session: List<TvTrackInfo> getTracks(int)>
<android.widget.SearchView: int getImeOptions()>
<com.android.systemui.recents.misc.SystemServicesProxy: Pair<Integer, AppWidgetProviderInfo> bindSearchAppWidget(AppWidgetHost)>
<com.android.internal.widget.LockPatternUtils: void clearLock(boolean)>
<android.webkit.WebSettings: void setDisplayZoomControls(boolean)>
<android.net.NetworkIdentity: NetworkIdentity buildNetworkIdentity(Context,NetworkState)>
<android.webkit.WebSettings: void setSansSerifFontFamily(String)>
<android.media.AudioManager: void unregisterAudioPortUpdateListener(OnAudioPortUpdateListener)>
<android.os.BaseBundle: void putBooleanArray(String,boolean[])>
<android.view.accessibility.AccessibilityNodeInfo: void init(AccessibilityNodeInfo)>
<com.android.keyguard.KeyguardSecurityContainer: boolean showNextSecurityScreenOrFinish(boolean)>
<android.graphics.drawable.GradientDrawable: boolean ensureValidRect()>
<android.view.ViewGroup: void resolvePadding()>
<android.hardware.camera2.legacy.SurfaceTextureRenderer: void configureSurfaces(Collection<Surface>)>
<com.android.internal.policy.impl.PhoneWindowManager: void beginPostLayoutPolicyLw(int,int)>
<android.animation.PropertyValuesHolder: void setupSetterAndGetter(Object)>
<android.content.pm.PackageManagerTests: void testMultipleUpgradeKSWithSigningKey()>
<android.webkit.CookieManager: void flush()>
<android.telephony.SubscriptionManager: boolean isValidSlotId(int)>
<android.net.LinkAddress: boolean isGlobalPreferred()>
<com.android.systemui.recents.RecentsConfiguration: void update(Context)>
<android.webkit.WebSettings: PluginState getPluginState()>
<android.webkit.WebSettings: boolean getDatabaseEnabled()>
<android.app.ActivityThread.ApplicationThread: void scheduleLaunchActivity(Intent,IBinder,int,ActivityInfo,Configuration,CompatibilityInfo,IVoiceInteractor,int,Bundle,PersistableBundle,List<ResultInfo>,List<Intent>,boolean,boolean,ProfilerInfo)>
<android.widget.RadialTimePickerView: int getCurrentMinute()>
<android.net.RssiCurve: boolean equals(Object)>
<android.webkit.WebView: void clearClientCertPreferences(Runnable)>
<android.webkit.URLUtil: String guessUrl(String)>
<com.android.systemui.recents.AlternateRecentsComponent: TaskViewTransform getThumbnailTransitionTransform(int,boolean,Task)>
<android.widget.TextView: CharSequence getIterableTextForAccessibility()>
<com.android.providers.settings.DatabaseHelper: void loadVolumeLevels(SQLiteDatabase)>
<com.android.internal.util.StateMachine: void dump(FileDescriptor,PrintWriter,String[])>
<com.android.server.power.PowerManagerService: boolean reallyGoToSleepNoUpdateLocked(long,int)>
<com.android.server.wm.WindowManagerService: void handleNotObscuredLocked(WindowState,long,int,int)>
<android.graphics.drawable.RotateDrawable: void setPivotY(float)>
<android.content.pm.PackageManagerTests: void testUpgradeKSWithWrongKey()>
<com.android.systemui.statusbar.stack.AnimationFilter: void applyCombination(AnimationEvent>)>
<com.android.server.am.ActivityStack: boolean startPausingLocked(boolean,boolean,boolean,boolean)>
<com.android.layoutlib.bridge.android.BridgeContext: List<Pair<String, Boolean>> searchAttrs(int[])>
<android.graphics.drawable.RotateDrawable: void setPivotX(float)>
<android.widget.ProgressBar: void applyPrimaryProgressTint()>
<com.android.server.wm.AppWindowAnimator: boolean stepAnimationLocked(long)>
<android.webkit.WebSettings: void setDomStorageEnabled(boolean)>
<android.test.ActivityUnitTestCase: T startActivity(Intent,Bundle,Object)>
<android.graphics.drawable.Ripple: void exit()>
<android.media.AudioService: int getStreamVolume(int)>
<com.android.systemui.recents.misc.SystemServicesProxy: Bitmap getTaskThumbnail(int)>
<com.android.systemui.recents.RecentsActivity: void onDebugModeTriggered()>
<android.webkit.WebIconDatabase: void open(String)>
<com.android.server.location.GpsLocationProvider: void reportStatus(int)>
<com.android.internal.widget.ExploreByTouchHelper: void getVisibleVirtualViews(List<Integer>)>
<com.android.systemui.recents.views.TaskStackView: void dismissFocusedTask()>
<android.content.pm.PackageManagerTests: void testUpgradeKSWithWrongSigningKey()>
<android.widget.Switch: void stopDrag(MotionEvent)>
<com.android.layoutlib.bridge.impl.RenderSessionImpl: Result init(long)>
<com.android.systemui.recents.RecentsActivity: boolean dismissRecentsToHome(boolean)>
<android.preference.ListPreference: CharSequence getSummary()>
<android.widget.PopupWindow: void setBackgroundDrawable(Drawable)>
<com.android.server.media.MediaSessionStack: void addSession(MediaSessionRecord)>
<com.android.systemui.volume.VolumePanel: void onVolumeChanged(int,int)>
<android.media.AudioService: void sendMasterMuteUpdate(boolean,int)>
<android.view.ViewGroup: void removeView(View)>
<android.webkit.WebSettings: void setPluginsPath(String)>
<com.android.server.media.MediaSessionStack: boolean onPlaystateChange(MediaSessionRecord,int,int)>
<android.animation.Keyframes: ArrayList<Keyframe> getKeyframes()>
<android.animation.ValueAnimator: void endAnimation(AnimationHandler)>
<android.media.AudioAttributes.Builder: Builder setUsage(int)>
<com.android.systemui.recents.views.AnimateableViewBounds: void setClipBottom(int)>
<android.telephony.PhoneNumberUtils: long getDefaultVoiceSubId()>
<android.widget.TextView: boolean shouldSpeakPasswordsForAccessibility()>
<android.util.PathParser.PathDataNode: void nodesToPath(PathDataNode[],Path)>
<android.webkit.CookieManager: void removeAllCookies(ValueCallback<Boolean>)>
<com.android.server.display.DisplayDeviceInfo: String toString()>
<com.android.systemui.recents.RecentsActivity: void inflateDebugOverlay()>
<android.telephony.SubscriptionManager: void setDefaultDataSubId(long)>
<com.android.connectivitymanagertest.stress.WifiStressTest: void testWifiReconnectionAfterSleep()>
<com.android.systemui.recents.views.TaskView: void startEnterRecentsAnimation(TaskViewEnterContext)>
<com.android.internal.widget.ExploreByTouchHelper: AccessibilityNodeInfo createNodeForHost()>
<com.android.internal.policy.impl.PhoneWindowManager: int checkAddPermission(LayoutParams,int[])>
<android.view.Surface: void release()>
<android.widget.SearchView: void setImeOptions(int)>
<android.widget.SearchView: void setSuggestionsAdapter(CursorAdapter)>
<android.view.accessibility.AccessibilityWindowInfo: boolean isAccessibilityFocused()>
<android.telephony.SubscriptionManager: void setDefaultVoiceSubId(long)>
<android.view.ViewGroup: boolean addViewInLayout(View,int,LayoutParams)>
<com.android.systemui.statusbar.phone.KeyguardAffordanceHelper.Callback: void onAnimationToSideStarted(boolean)>
<android.webkit.WebSettings: boolean getBlockNetworkImage()>
<android.media.session.MediaSession: void setMetadata(MediaMetadata)>
<com.android.systemui.recents.views.TaskViewThumbnail: void unbindFromTask()>
<android.webkit.WebView: void evaluateJavascript(String,ValueCallback<String>)>
<com.android.server.wm.WindowManagerService: void saveANRStateLocked(AppWindowToken,WindowState,String)>
<android.webkit.WebSettings: boolean getSaveFormData()>
<com.android.systemui.recents.views.TaskStackView: void startExitToHomeAnimation(TaskViewExitContext)>
<android.appwidget.AppWidgetHost: AppWidgetHostView createView(Context,int,AppWidgetProviderInfo)>
<com.android.server.hdmi.SendKeyAction: void processKeyEvent(int,boolean)>
<android.content.res.BridgeTypedArray: int getResourceId(int,int)>
<android.webkit.WebSettings: void setEnableSmoothTransition(boolean)>
<android.webkit.WebSettings: String getStandardFontFamily()>
<android.util.PathParser: float[] getFloats(String)>
